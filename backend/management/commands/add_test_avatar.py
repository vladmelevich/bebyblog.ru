from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model
from django.core.files.base import ContentFile
import os

User = get_user_model()

class Command(BaseCommand):
    help = '–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'

    def add_arguments(self, parser):
        parser.add_argument('--user-id', type=int, help='ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
        parser.add_argument('--username', type=str, help='–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')

    def handle(self, *args, **options):
        user_id = options.get('user_id')
        username = options.get('username')
        
        if user_id:
            try:
                user = User.objects.get(id=user_id)
            except User.DoesNotExist:
                self.stdout.write(f'‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                return
        elif username:
            try:
                user = User.objects.get(username=username)
            except User.DoesNotExist:
                self.stdout.write(f'‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                return
        else:
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = User.objects.first()
            if not user:
                self.stdout.write('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
                return
        
        self.stdout.write(f'üë§ –†–∞–±–æ—Ç–∞–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {user.username} (ID: {user.id})')
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä (—Ü–≤–µ—Ç–Ω–æ–π –∫–≤–∞–¥—Ä–∞—Ç)
        from PIL import Image, ImageDraw
        
        # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 100x100 –ø–∏–∫—Å–µ–ª–µ–π
        img = Image.new('RGB', (100, 100), color='#8B5CF6')
        draw = ImageDraw.Draw(img)
        
        # –†–∏—Å—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
        try:
            from PIL import ImageFont
            font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf", 40)
        except:
            font = ImageFont.load_default()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
        initials = f"{user.first_name[0] if user.first_name else 'U'}{user.last_name[0] if user.last_name else ''}".upper()
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        bbox = draw.textbbox((0, 0), initials, font=font)
        text_width = bbox[2] - bbox[0]
        text_height = bbox[3] - bbox[1]
        x = (100 - text_width) // 2
        y = (100 - text_height) // 2
        
        draw.text((x, y), initials, fill='white', font=font)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–π—Ç—ã
        from io import BytesIO
        img_io = BytesIO()
        img.save(img_io, format='PNG')
        img_io.seek(0)
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª
        filename = f'avatar_{user.id}.png'
        user.avatar.save(filename, ContentFile(img_io.getvalue()), save=True)
        
        self.stdout.write(f'‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∞–≤–∞—Ç–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω: {user.avatar.url}')
        self.stdout.write(f'üîó –ü–æ–ª–Ω—ã–π URL: http://93.183.80.220{user.avatar.url}')