{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\PostDetail\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar, faTag, faArrowLeft, faMapMarkerAlt, faShare } from '@fortawesome/free-solid-svg-icons';\nimport './PostDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  var _post$author, _post$author2, _post$author3, _post$category, _post$author4, _post$comments;\n  const {\n    slug\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [replyTo, setReplyTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  // Вспомогательные функции\n  const getAuthorInitials = author => {\n    if (!author) return 'А';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\n  };\n  const getUserAvatarUrl = userData => {\n    // Сначала проверяем avatar_url, потом avatar, потом тестовую аватарку\n    if (userData.avatar_url) return userData.avatar_url;\n    if (userData.avatar) return userData.avatar;\n    // Создаем тестовую аватарку с инициалами пользователя\n    const initials = getAuthorInitials(userData);\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\n  };\n  useEffect(() => {\n    fetchPost();\n  }, [slug]);\n  const fetchPost = async () => {\n    try {\n      setLoading(true);\n      console.log('Загружаем пост с slug:', slug);\n      const response = await fetch(`http://localhost:8000/api/posts/${slug}/`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Полученные данные поста:', data);\n        console.log('Комментарии в посте:', data.comments);\n        console.log('Количество комментариев:', data.comments ? data.comments.length : 0);\n        setPost(data);\n      } else {\n        console.error('Ошибка загрузки поста:', response.status, response.statusText);\n        setError('Пост не найден');\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки поста:', error);\n      setError('Ошибка загрузки поста');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const refreshComments = async () => {\n    try {\n      console.log('Обновляем комментарии...');\n      const response = await fetch(`http://localhost:8000/api/posts/${slug}/`);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Обновленные комментарии:', data.comments);\n        setPost(prev => ({\n          ...prev,\n          comments: data.comments || []\n        }));\n      } else {\n        console.error('Ошибка обновления комментариев:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка обновления комментариев:', error);\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      if (!dateString) {\n        return 'Недавно';\n      }\n      let date;\n\n      // Проверяем, если дата в формате \"DD.MM.YYYY\"\n      if (typeof dateString === 'string' && dateString.includes('.')) {\n        const parts = dateString.split('.');\n        if (parts.length === 3) {\n          const [day, month, year] = parts;\n          date = new Date(`${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`);\n        } else {\n          date = new Date(dateString);\n        }\n      } else {\n        date = new Date(dateString);\n      }\n      if (isNaN(date.getTime())) {\n        return 'Недавно';\n      }\n      const now = new Date();\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n      const diffInHours = Math.floor(diffInMinutes / 60);\n      const diffInDays = Math.floor(diffInHours / 24);\n      const diffInWeeks = Math.floor(diffInDays / 7);\n      const diffInMonths = Math.floor(diffInDays / 30);\n      if (diffInMinutes < 1) {\n        return 'Только что';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes} мин${diffInMinutes === 1 ? 'у' : diffInMinutes < 5 ? 'ы' : ''} назад`;\n      } else if (diffInHours < 24) {\n        return `${diffInHours} час${diffInHours === 1 ? '' : diffInHours < 5 ? 'а' : 'ов'} назад`;\n      } else if (diffInDays < 7) {\n        return `${diffInDays} дн${diffInDays === 1 ? 'ь' : diffInDays < 5 ? 'я' : 'ей'} назад`;\n      } else if (diffInWeeks < 4) {\n        return `${diffInWeeks} нед${diffInWeeks === 1 ? 'елю' : diffInWeeks < 5 ? 'ели' : 'ель'} назад`;\n      } else if (diffInMonths < 12) {\n        return `${diffInMonths} мес${diffInMonths === 1 ? 'яц' : diffInMonths < 5 ? 'яца' : 'яцев'} назад`;\n      } else {\n        const diffInYears = Math.floor(diffInMonths / 12);\n        return `${diffInYears} год${diffInYears === 1 ? '' : diffInYears < 5 ? 'а' : 'ов'} назад`;\n      }\n    } catch (error) {\n      return 'Недавно';\n    }\n  };\n  const getAuthorName = author => {\n    if (!author) return 'Автор';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    const fullName = `${firstName} ${lastName}`.trim();\n    return fullName || author.username || 'Автор';\n  };\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    try {\n      setSubmitting(true);\n\n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n      console.log('Данные пользователя из localStorage:', userData);\n\n      // Создаем новый комментарий локально для демонстрации\n      const newCommentObj = {\n        id: Date.now(),\n        // Временный ID\n        content: newComment,\n        author: {\n          id: userData.id || 999,\n          first_name: userData.first_name || \"Пользователь\",\n          last_name: userData.last_name || \"Тестовый\",\n          username: userData.username || \"test_user\",\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: null,\n        is_approved: true\n      };\n      console.log('Новый комментарий:', newCommentObj);\n\n      // Очищаем поле ввода\n      setNewComment('');\n\n      // Отправляем комментарий на сервер\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: newComment,\n              parent: null\n            })\n          });\n          if (response.ok) {\n            const result = await response.json();\n            console.log('Комментарий успешно отправлен на сервер:', result);\n\n            // Обновляем комментарии с сервера\n            await refreshComments();\n          } else {\n            const errorText = await response.text();\n            console.error('Ошибка отправки на сервер:', response.status, errorText);\n            // Добавляем локальный комментарий при ошибке сервера\n            setPost(prev => ({\n              ...prev,\n              comments: [newCommentObj, ...(prev.comments || [])]\n            }));\n          }\n        } else {\n          console.log('Токен не найден, комментарий добавлен локально');\n          // Добавляем локальный комментарий если нет токена\n          setPost(prev => ({\n            ...prev,\n            comments: [newCommentObj, ...(prev.comments || [])]\n          }));\n        }\n      } catch (serverError) {\n        console.error('Ошибка сервера:', serverError);\n        // Добавляем локальный комментарий при ошибке сервера\n        setPost(prev => ({\n          ...prev,\n          comments: [newCommentObj, ...(prev.comments || [])]\n        }));\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке комментария:', error);\n      // Добавляем локальный комментарий при общей ошибке\n      setPost(prev => ({\n        ...prev,\n        comments: [newCommentObj, ...(prev.comments || [])]\n      }));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const handleSubmitReply = async (e, parentId) => {\n    e.preventDefault();\n    if (!replyText.trim()) return;\n    try {\n      setSubmitting(true);\n\n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n\n      // Создаем новый ответ локально для демонстрации\n      const newReplyObj = {\n        id: Date.now(),\n        // Временный ID\n        content: replyText,\n        author: {\n          id: userData.id || 999,\n          first_name: userData.first_name || \"Пользователь\",\n          last_name: userData.last_name || \"Тестовый\",\n          username: userData.username || \"test_user\",\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: parentId,\n        is_approved: true\n      };\n\n      // Очищаем поля\n      setReplyText('');\n      setReplyTo(null);\n\n      // Попытка отправить на сервер (если работает)\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: replyText,\n              parent: parentId\n            })\n          });\n          if (response.ok) {\n            console.log('Ответ успешно отправлен на сервер');\n            // Обновляем комментарии с сервера\n            await refreshComments();\n          } else {\n            const errorText = await response.text();\n            console.error('Ошибка отправки ответа на сервер:', response.status, errorText);\n            // Добавляем локальный ответ при ошибке сервера\n            setPost(prev => ({\n              ...prev,\n              comments: [...(prev.comments || []), newReplyObj]\n            }));\n          }\n        }\n      } catch (serverError) {\n        console.log('Сервер недоступен, ответ добавлен локально');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке ответа:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const handleReplyClick = commentId => {\n    setReplyTo(replyTo === commentId ? null : commentId);\n    setReplyText('');\n  };\n  const handleDeleteComment = async commentId => {\n    // Добавляем класс для анимации удаления\n    const commentElement = document.querySelector(`[data-comment-id=\"${commentId}\"]`);\n    if (commentElement) {\n      commentElement.classList.add('deleting');\n    }\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (token) {\n        const response = await fetch(`http://localhost:8000/api/posts/comments/${commentId}/delete/`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          console.log('Комментарий успешно удален на сервере');\n          // Обновляем комментарии с сервера\n          await refreshComments();\n        } else {\n          const errorText = await response.text();\n          console.error('Ошибка удаления комментария на сервере:', response.status, errorText);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении комментария:', error);\n      // Удаляем комментарий локально при ошибке сервера\n      setPost(prev => ({\n        ...prev,\n        comments: prev.comments.filter(comment => comment.id !== commentId && comment.parent !== commentId)\n      }));\n    }\n  };\n  const isLoggedIn = () => {\n    return !!(localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken'));\n  };\n  const isMyComment = comment => {\n    var _comment$author, _comment$author2, _comment$author3;\n    // Получаем данные текущего пользователя\n    const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n    return ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.id) === userData.id || ((_comment$author2 = comment.author) === null || _comment$author2 === void 0 ? void 0 : _comment$author2.username) === 'test_user' || ((_comment$author3 = comment.author) === null || _comment$author3 === void 0 ? void 0 : _comment$author3.first_name) === 'Пользователь';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error || 'Пост не найден'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn-back\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn-back\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), \"\\u041D\\u0430\\u0437\\u0430\\u0434\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post-article\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-author-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-avatar clickable\",\n              onClick: () => navigate(`/profile/${post.author.id}`),\n              title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n              children: [(_post$author = post.author) !== null && _post$author !== void 0 && _post$author.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.author.avatar_url,\n                alt: getAuthorName(post.author),\n                onError: e => {\n                  e.target.style.display = 'none';\n                  e.target.nextSibling.style.display = 'flex';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-initials\",\n                style: {\n                  display: (_post$author2 = post.author) !== null && _post$author2 !== void 0 && _post$author2.avatar_url ? 'none' : 'flex'\n                },\n                children: getAuthorInitials(post.author)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-name clickable\",\n                onClick: () => navigate(`/profile/${post.author.id}`),\n                title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                children: getAuthorName(post.author)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"author-location\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faMapMarkerAlt\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 21\n                  }, this), ((_post$author3 = post.author) === null || _post$author3 === void 0 ? void 0 : _post$author3.city) || 'Москва']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"post-date\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCalendar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 21\n                  }, this), formatDate(post.published_at || post.created_at)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-title-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-title-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-category-display\",\n                children: ((_post$category = post.category) === null || _post$category === void 0 ? void 0 : _post$category.name) || 'Общее'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"post-title\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-share-action\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn share-btn\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faShare\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            dangerouslySetInnerHTML: {\n              __html: post.content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 12\n        }, this), ((_post$author4 = post.author) === null || _post$author4 === void 0 ? void 0 : _post$author4.id) === JSON.parse(localStorage.getItem('userData') || '{}').id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-seo-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"SEO \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seo-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seo-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meta Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.meta_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seo-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meta Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.meta_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seo-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meta Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.meta_keywords\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), (post.comments_enabled === 'enabled' || true) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438 (\", ((_post$comments = post.comments) === null || _post$comments === void 0 ? void 0 : _post$comments.length) || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 16\n          }, this), isLoggedIn() && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitComment,\n            className: \"comment-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newComment,\n                onChange: e => setNewComment(e.target.value),\n                placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439...\",\n                className: \"comment-input\",\n                rows: \"3\",\n                disabled: submitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-form-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn-submit-comment\",\n                disabled: !newComment.trim() || submitting,\n                children: submitting ? 'Отправка...' : 'Отправить'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 18\n          }, this), console.log('Комментарии для отображения:', post.comments), post.comments && post.comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-list\",\n            children: post.comments.filter(comment => !comment.parent) // Только основные комментарии\n            .map(comment => {\n              var _comment$author4, _comment$author5, _comment$author6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment\",\n                \"data-comment-id\": comment.id,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-author\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-avatar clickable\",\n                    onClick: () => navigate(`/profile/${comment.author.id}`),\n                    title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                    children: [(_comment$author4 = comment.author) !== null && _comment$author4 !== void 0 && _comment$author4.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: comment.author.avatar_url,\n                      alt: getAuthorName(comment.author),\n                      onError: e => {\n                        e.target.style.display = 'none';\n                        e.target.nextSibling.style.display = 'flex';\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 545,\n                      columnNumber: 33\n                    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-initials\",\n                      style: {\n                        display: (_comment$author5 = comment.author) !== null && _comment$author5 !== void 0 && _comment$author5.avatar_url ? 'none' : 'flex'\n                      },\n                      children: getAuthorInitials(comment.author)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-author-name clickable\",\n                      onClick: () => navigate(`/profile/${comment.author.id}`),\n                      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                      children: getAuthorName(comment.author)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-author-location\",\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faMapMarkerAlt\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 569,\n                        columnNumber: 33\n                      }, this), ((_comment$author6 = comment.author) === null || _comment$author6 === void 0 ? void 0 : _comment$author6.city) || 'Москва']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-date\",\n                      children: formatDate(comment.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-content\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-actions\",\n                  children: [isLoggedIn() && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleReplyClick(comment.id),\n                    className: \"btn-reply\",\n                    children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 31\n                  }, this), isMyComment(comment) && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteComment(comment.id),\n                    className: \"btn-delete\",\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 27\n                }, this), replyTo === comment.id && /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => handleSubmitReply(e, comment.id),\n                  className: \"reply-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-input-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      value: replyText,\n                      onChange: e => setReplyText(e.target.value),\n                      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442...\",\n                      className: \"comment-input\",\n                      rows: \"2\",\n                      disabled: submitting\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 32\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 30\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-form-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn-submit-comment\",\n                      disabled: !replyText.trim() || submitting,\n                      children: submitting ? 'Отправка...' : 'Отправить'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 613,\n                      columnNumber: 32\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => setReplyTo(null),\n                      className: \"btn-cancel\",\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 32\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 28\n                }, this), post.comments.filter(reply => reply.parent === comment.id).map(reply => {\n                  var _reply$author, _reply$author2, _reply$author3;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment reply\",\n                    \"data-comment-id\": reply.id,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-author\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comment-avatar clickable\",\n                        onClick: () => navigate(`/profile/${reply.author.id}`),\n                        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                        children: [(_reply$author = reply.author) !== null && _reply$author !== void 0 && _reply$author.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: reply.author.avatar_url,\n                          alt: getAuthorName(reply.author),\n                          onError: e => {\n                            e.target.style.display = 'none';\n                            e.target.nextSibling.style.display = 'flex';\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 643,\n                          columnNumber: 39\n                        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-initials\",\n                          style: {\n                            display: (_reply$author2 = reply.author) !== null && _reply$author2 !== void 0 && _reply$author2.avatar_url ? 'none' : 'flex'\n                          },\n                          children: getAuthorInitials(reply.author)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 652,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 637,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comment-info\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-author-name clickable\",\n                          onClick: () => navigate(`/profile/${reply.author.id}`),\n                          title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                          children: getAuthorName(reply.author)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 659,\n                          columnNumber: 71\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-author-location\",\n                          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                            icon: faMapMarkerAlt\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 667,\n                            columnNumber: 39\n                          }, this), ((_reply$author3 = reply.author) === null || _reply$author3 === void 0 ? void 0 : _reply$author3.city) || 'Москва']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 666,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-date\",\n                          children: formatDate(reply.created_at)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 670,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 658,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-content\",\n                      children: reply.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 675,\n                      columnNumber: 33\n                    }, this), isMyComment(reply) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-actions\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteComment(reply.id),\n                        className: \"btn-delete\",\n                        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 678,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 35\n                    }, this)]\n                  }, reply.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 60\n                  }, this);\n                })]\n              }, comment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-comments\",\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0435\\u0432. \\u0411\\u0443\\u0434\\u044C\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0432\\u044B\\u043C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"post-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043F\\u043E\\u0441\\u0442\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `info-value status-${post.status}`,\n                children: post.status === 'published' ? 'Опубликован' : 'Черновик'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-value\",\n                children: post.comments_enabled === 'enabled' ? 'Разрешены' : 'Запрещены'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-value\",\n                children: new Date(post.created_at).toLocaleDateString('ru-RU')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 16\n            }, this), post.published_at && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-value\",\n                children: new Date(post.published_at).toLocaleDateString('ru-RU')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 12\n        }, this), post.short_description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-short-description\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.short_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"N1ORyua/JTZ6Ck1mvPTi/+ccxSg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","FontAwesomeIcon","faCalendar","faTag","faArrowLeft","faMapMarkerAlt","faShare","jsxDEV","_jsxDEV","PostDetail","_s","_post$author","_post$author2","_post$author3","_post$category","_post$author4","_post$comments","slug","navigate","post","setPost","loading","setLoading","error","setError","newComment","setNewComment","replyTo","setReplyTo","replyText","setReplyText","submitting","setSubmitting","getAuthorInitials","author","firstName","first_name","lastName","last_name","charAt","toUpperCase","getUserAvatarUrl","userData","avatar_url","avatar","initials","encodeURIComponent","fetchPost","console","log","response","fetch","ok","data","json","comments","length","status","statusText","refreshComments","prev","formatDate","dateString","date","includes","parts","split","day","month","year","Date","padStart","isNaN","getTime","now","diffInMinutes","Math","floor","diffInHours","diffInDays","diffInWeeks","diffInMonths","diffInYears","getAuthorName","fullName","trim","username","handleSubmitComment","e","preventDefault","JSON","parse","localStorage","getItem","newCommentObj","id","content","city","created_at","toISOString","parent","is_approved","token","sessionStorage","method","headers","body","stringify","result","errorText","text","serverError","handleSubmitReply","parentId","newReplyObj","handleReplyClick","commentId","handleDeleteComment","commentElement","document","querySelector","classList","add","filter","comment","isLoggedIn","isMyComment","_comment$author","_comment$author2","_comment$author3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","title","src","alt","onError","target","style","display","nextSibling","published_at","category","name","dangerouslySetInnerHTML","__html","meta_title","meta_description","meta_keywords","comments_enabled","onSubmit","value","onChange","placeholder","rows","disabled","type","map","_comment$author4","_comment$author5","_comment$author6","reply","_reply$author","_reply$author2","_reply$author3","toLocaleDateString","short_description","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/PostDetail/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faCalendar,\n  faTag,\n  faArrowLeft,\n  faMapMarkerAlt,\n  faShare\n} from '@fortawesome/free-solid-svg-icons';\nimport './PostDetail.css';\n\nconst PostDetail = () => {\n  const { slug } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [replyTo, setReplyTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  // Вспомогательные функции\n  const getAuthorInitials = (author) => {\n    if (!author) return 'А';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\n  };\n\n  const getUserAvatarUrl = (userData) => {\n    // Сначала проверяем avatar_url, потом avatar, потом тестовую аватарку\n    if (userData.avatar_url) return userData.avatar_url;\n    if (userData.avatar) return userData.avatar;\n    // Создаем тестовую аватарку с инициалами пользователя\n    const initials = getAuthorInitials(userData);\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\n  };\n\n\n  useEffect(() => {\n    fetchPost();\n  }, [slug]);\n\n    const fetchPost = async () => {\n      try {\n        setLoading(true);\n        console.log('Загружаем пост с slug:', slug);\n        const response = await fetch(`http://localhost:8000/api/posts/${slug}/`);\n        \n        if (response.ok) {\n          const data = await response.json();\n          console.log('Полученные данные поста:', data);\n          console.log('Комментарии в посте:', data.comments);\n          console.log('Количество комментариев:', data.comments ? data.comments.length : 0);\n        \n        setPost(data);\n      } else {\n        console.error('Ошибка загрузки поста:', response.status, response.statusText);\n        setError('Пост не найден');\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки поста:', error);\n      setError('Ошибка загрузки поста');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const refreshComments = async () => {\n    try {\n      console.log('Обновляем комментарии...');\n      const response = await fetch(`http://localhost:8000/api/posts/${slug}/`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Обновленные комментарии:', data.comments);\n        setPost(prev => ({\n          ...prev,\n          comments: data.comments || []\n        }));\n      } else {\n        console.error('Ошибка обновления комментариев:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка обновления комментариев:', error);\n    }\n  };\n\n\n\n  const formatDate = (dateString) => {\n    try {\n      if (!dateString) {\n        return 'Недавно';\n      }\n      \n      let date;\n      \n      // Проверяем, если дата в формате \"DD.MM.YYYY\"\n      if (typeof dateString === 'string' && dateString.includes('.')) {\n        const parts = dateString.split('.');\n        if (parts.length === 3) {\n          const [day, month, year] = parts;\n          date = new Date(`${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`);\n        } else {\n          date = new Date(dateString);\n        }\n      } else {\n        date = new Date(dateString);\n      }\n      \n      if (isNaN(date.getTime())) {\n        return 'Недавно';\n      }\n      \n      const now = new Date();\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n      const diffInHours = Math.floor(diffInMinutes / 60);\n      const diffInDays = Math.floor(diffInHours / 24);\n      const diffInWeeks = Math.floor(diffInDays / 7);\n      const diffInMonths = Math.floor(diffInDays / 30);\n      \n      if (diffInMinutes < 1) {\n        return 'Только что';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes} мин${diffInMinutes === 1 ? 'у' : diffInMinutes < 5 ? 'ы' : ''} назад`;\n      } else if (diffInHours < 24) {\n        return `${diffInHours} час${diffInHours === 1 ? '' : diffInHours < 5 ? 'а' : 'ов'} назад`;\n      } else if (diffInDays < 7) {\n        return `${diffInDays} дн${diffInDays === 1 ? 'ь' : diffInDays < 5 ? 'я' : 'ей'} назад`;\n      } else if (diffInWeeks < 4) {\n        return `${diffInWeeks} нед${diffInWeeks === 1 ? 'елю' : diffInWeeks < 5 ? 'ели' : 'ель'} назад`;\n      } else if (diffInMonths < 12) {\n        return `${diffInMonths} мес${diffInMonths === 1 ? 'яц' : diffInMonths < 5 ? 'яца' : 'яцев'} назад`;\n      } else {\n        const diffInYears = Math.floor(diffInMonths / 12);\n        return `${diffInYears} год${diffInYears === 1 ? '' : diffInYears < 5 ? 'а' : 'ов'} назад`;\n      }\n    } catch (error) {\n      return 'Недавно';\n    }\n  };\n\n  const getAuthorName = (author) => {\n    if (!author) return 'Автор';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    const fullName = `${firstName} ${lastName}`.trim();\n    return fullName || author.username || 'Автор';\n  };\n\n  const handleSubmitComment = async (e) => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n\n    try {\n      setSubmitting(true);\n      \n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n      console.log('Данные пользователя из localStorage:', userData);\n      \n      // Создаем новый комментарий локально для демонстрации\n      const newCommentObj = {\n        id: Date.now(), // Временный ID\n        content: newComment,\n        author: {\n          id: userData.id || 999,\n          first_name: userData.first_name || \"Пользователь\",\n          last_name: userData.last_name || \"Тестовый\",\n          username: userData.username || \"test_user\",\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: null,\n        is_approved: true\n      };\n      \n      console.log('Новый комментарий:', newCommentObj);\n\n      // Очищаем поле ввода\n      setNewComment('');\n      \n      // Отправляем комментарий на сервер\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: newComment,\n              parent: null\n            })\n          });\n\n          if (response.ok) {\n            const result = await response.json();\n            console.log('Комментарий успешно отправлен на сервер:', result);\n            \n            // Обновляем комментарии с сервера\n            await refreshComments();\n          } else {\n            const errorText = await response.text();\n            console.error('Ошибка отправки на сервер:', response.status, errorText);\n            // Добавляем локальный комментарий при ошибке сервера\n            setPost(prev => ({\n              ...prev,\n              comments: [newCommentObj, ...(prev.comments || [])]\n            }));\n          }\n        } else {\n          console.log('Токен не найден, комментарий добавлен локально');\n          // Добавляем локальный комментарий если нет токена\n          setPost(prev => ({\n            ...prev,\n            comments: [newCommentObj, ...(prev.comments || [])]\n          }));\n        }\n      } catch (serverError) {\n        console.error('Ошибка сервера:', serverError);\n        // Добавляем локальный комментарий при ошибке сервера\n        setPost(prev => ({\n          ...prev,\n          comments: [newCommentObj, ...(prev.comments || [])]\n        }));\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке комментария:', error);\n      // Добавляем локальный комментарий при общей ошибке\n      setPost(prev => ({\n        ...prev,\n        comments: [newCommentObj, ...(prev.comments || [])]\n      }));\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleSubmitReply = async (e, parentId) => {\n    e.preventDefault();\n    if (!replyText.trim()) return;\n\n    try {\n      setSubmitting(true);\n      \n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n      \n             // Создаем новый ответ локально для демонстрации\n       const newReplyObj = {\n         id: Date.now(), // Временный ID\n         content: replyText,\n         author: {\n           id: userData.id || 999,\n           first_name: userData.first_name || \"Пользователь\",\n           last_name: userData.last_name || \"Тестовый\",\n           username: userData.username || \"test_user\",\n           avatar: userData.avatar || null,\n           avatar_url: getUserAvatarUrl(userData),\n           city: userData.city || \"Москва\"\n         },\n         created_at: new Date().toISOString(),\n         parent: parentId,\n         is_approved: true\n       };\n\n      // Очищаем поля\n      setReplyText('');\n      setReplyTo(null);\n      \n      // Попытка отправить на сервер (если работает)\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: replyText,\n              parent: parentId\n            })\n          });\n\n          if (response.ok) {\n            console.log('Ответ успешно отправлен на сервер');\n            // Обновляем комментарии с сервера\n            await refreshComments();\n          } else {\n            const errorText = await response.text();\n            console.error('Ошибка отправки ответа на сервер:', response.status, errorText);\n            // Добавляем локальный ответ при ошибке сервера\n            setPost(prev => ({\n              ...prev,\n              comments: [...(prev.comments || []), newReplyObj]\n            }));\n          }\n        }\n      } catch (serverError) {\n        console.log('Сервер недоступен, ответ добавлен локально');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке ответа:', error);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleReplyClick = (commentId) => {\n    setReplyTo(replyTo === commentId ? null : commentId);\n    setReplyText('');\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    // Добавляем класс для анимации удаления\n    const commentElement = document.querySelector(`[data-comment-id=\"${commentId}\"]`);\n    if (commentElement) {\n      commentElement.classList.add('deleting');\n    }\n\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (token) {\n        const response = await fetch(`http://localhost:8000/api/posts/comments/${commentId}/delete/`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.ok) {\n          console.log('Комментарий успешно удален на сервере');\n          // Обновляем комментарии с сервера\n          await refreshComments();\n        } else {\n          const errorText = await response.text();\n          console.error('Ошибка удаления комментария на сервере:', response.status, errorText);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении комментария:', error);\n      // Удаляем комментарий локально при ошибке сервера\n      setPost(prev => ({\n        ...prev,\n        comments: prev.comments.filter(comment => comment.id !== commentId && comment.parent !== commentId)\n      }));\n    }\n  };\n\n  const isLoggedIn = () => {\n    return !!(localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken'));\n  };\n\n  const isMyComment = (comment) => {\n    // Получаем данные текущего пользователя\n    const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n    return comment.author?.id === userData.id || comment.author?.username === 'test_user' || comment.author?.first_name === 'Пользователь';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"post-detail-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Загрузка поста...</p>\n      </div>\n    );\n  }\n\n  if (error || !post) {\n    return (\n      <div className=\"post-detail-error\">\n        <h2>Ошибка</h2>\n        <p>{error || 'Пост не найден'}</p>\n        <button onClick={() => navigate('/')} className=\"btn-back\">\n          <FontAwesomeIcon icon={faArrowLeft} />\n          Вернуться на главную\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"post-detail-container\">\n      {/* Кнопка назад */}\n      <div className=\"post-detail-header\">\n        <button onClick={() => navigate('/')} className=\"btn-back\">\n          <FontAwesomeIcon icon={faArrowLeft} />\n          Назад\n        </button>\n      </div>\n\n      {/* Основной контент */}\n      <div className=\"post-detail-content\">\n        <article className=\"post-article\">\n          {/* Информация об авторе */}\n          <div className=\"post-author-section\">\n            <div className=\"author-info\">\n              <div \n                className=\"author-avatar clickable\"\n                onClick={() => navigate(`/profile/${post.author.id}`)}\n                title=\"Перейти к профилю\"\n              >\n                {post.author?.avatar_url ? (\n                  <img \n                    src={post.author.avatar_url} \n                    alt={getAuthorName(post.author)}\n                    onError={(e) => {\n                      e.target.style.display = 'none';\n                      e.target.nextSibling.style.display = 'flex';\n                    }}\n                  />\n                ) : null}\n                <div className=\"author-initials\" style={{ \n                  display: post.author?.avatar_url ? 'none' : 'flex' \n                }}>\n                  {getAuthorInitials(post.author)}\n                </div>\n              </div>\n              \n              <div className=\"author-details\">\n                <div \n                  className=\"author-name clickable\"\n                  onClick={() => navigate(`/profile/${post.author.id}`)}\n                  title=\"Перейти к профилю\"\n                >\n                  {getAuthorName(post.author)}\n                </div>\n                <div className=\"author-meta\">\n                  <span className=\"author-location\">\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />\n                    {post.author?.city || 'Москва'}\n                  </span>\n                  <span className=\"post-date\">\n                    <FontAwesomeIcon icon={faCalendar} />\n                    {formatDate(post.published_at || post.created_at)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Заголовок статьи */}\n          <div className=\"post-title-section\">\n            <div className=\"post-title-header\">\n              <div className=\"post-title-content\">\n                <div className=\"post-category-display\">\n                  {post.category?.name || 'Общее'}\n                </div>\n                <h1 className=\"post-title\">{post.title}</h1>\n              </div>\n              \n              {/* Кнопка поделиться */}\n              <div className=\"post-share-action\">\n                <button className=\"action-btn share-btn\">\n                  <FontAwesomeIcon icon={faShare} />\n                </button>\n              </div>\n            </div>\n          </div>\n\n           {/* Основной контент */}\n           <div className=\"post-body\">\n             <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.content }} />\n           </div>\n\n          {/* SEO информация (только для автора) */}\n          {post.author?.id === (JSON.parse(localStorage.getItem('userData') || '{}').id) && (\n            <div className=\"post-seo-info\">\n              <h3>SEO информация</h3>\n              <div className=\"seo-fields\">\n                <div className=\"seo-field\">\n                  <label>Meta Title:</label>\n                  <p>{post.meta_title}</p>\n                </div>\n                \n                <div className=\"seo-field\">\n                  <label>Meta Description:</label>\n                  <p>{post.meta_description}</p>\n                </div>\n                \n                <div className=\"seo-field\">\n                  <label>Meta Keywords:</label>\n                  <p>{post.meta_keywords}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n                     {/* Комментарии */}\n           {(post.comments_enabled === 'enabled' || true) && (\n             <div className=\"post-comments\">\n               <h3>Комментарии ({post.comments?.length || 0})</h3>\n               \n               {/* Форма добавления комментария */}\n               {isLoggedIn() && (\n                 <form onSubmit={handleSubmitComment} className=\"comment-form\">\n                   <div className=\"comment-input-wrapper\">\n                     <textarea\n                       value={newComment}\n                       onChange={(e) => setNewComment(e.target.value)}\n                       placeholder=\"Написать комментарий...\"\n                       className=\"comment-input\"\n                       rows=\"3\"\n                       disabled={submitting}\n                     />\n                   </div>\n                   <div className=\"comment-form-actions\">\n                     <button \n                       type=\"submit\" \n                       className=\"btn-submit-comment\"\n                       disabled={!newComment.trim() || submitting}\n                     >\n                       {submitting ? 'Отправка...' : 'Отправить'}\n                     </button>\n                   </div>\n                 </form>\n               )}\n\n               {/* Список комментариев */}\n               {console.log('Комментарии для отображения:', post.comments)}\n               {post.comments && post.comments.length > 0 ? (\n                 <div className=\"comments-list\">\n                   {post.comments\n                     .filter(comment => !comment.parent) // Только основные комментарии\n                     .map(comment => (\n                       <div key={comment.id} className=\"comment\" data-comment-id={comment.id}>\n                                                   <div className=\"comment-author\">\n                            <div \n                              className=\"comment-avatar clickable\"\n                              onClick={() => navigate(`/profile/${comment.author.id}`)}\n                              title=\"Перейти к профилю\"\n                            >\n                              {comment.author?.avatar_url ? (\n                                <img \n                                  src={comment.author.avatar_url} \n                                  alt={getAuthorName(comment.author)}\n                                  onError={(e) => {\n                                    e.target.style.display = 'none';\n                                    e.target.nextSibling.style.display = 'flex';\n                                  }}\n                                />\n                              ) : null}\n                              <div className=\"comment-initials\" style={{ \n                                display: comment.author?.avatar_url ? 'none' : 'flex' \n                              }}>\n                                {getAuthorInitials(comment.author)}\n                              </div>\n                            </div>\n                            <div className=\"comment-info\">\n                              <div \n                                className=\"comment-author-name clickable\"\n                                onClick={() => navigate(`/profile/${comment.author.id}`)}\n                                title=\"Перейти к профилю\"\n                              >\n                                {getAuthorName(comment.author)}\n                              </div>\n                              <div className=\"comment-author-location\">\n                                <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                {comment.author?.city || 'Москва'}\n                              </div>\n                              <div className=\"comment-date\">\n                                {formatDate(comment.created_at)}\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"comment-content\">{comment.content}</div>\n                          \n                          {/* Кнопки действий */}\n                          <div className=\"comment-actions\">\n                            {isLoggedIn() && (\n                              <button \n                                onClick={() => handleReplyClick(comment.id)}\n                                className=\"btn-reply\"\n                              >\n                                Ответить\n                              </button>\n                            )}\n                            {isMyComment(comment) && (\n                              <button \n                                onClick={() => handleDeleteComment(comment.id)}\n                                className=\"btn-delete\"\n                              >\n                                Удалить\n                              </button>\n                            )}\n                          </div>\n\n                         {/* Форма ответа */}\n                         {replyTo === comment.id && (\n                           <form onSubmit={(e) => handleSubmitReply(e, comment.id)} className=\"reply-form\">\n                             <div className=\"comment-input-wrapper\">\n                               <textarea\n                                 value={replyText}\n                                 onChange={(e) => setReplyText(e.target.value)}\n                                 placeholder=\"Написать ответ...\"\n                                 className=\"comment-input\"\n                                 rows=\"2\"\n                                 disabled={submitting}\n                               />\n                             </div>\n                             <div className=\"comment-form-actions\">\n                               <button \n                                 type=\"submit\" \n                                 className=\"btn-submit-comment\"\n                                 disabled={!replyText.trim() || submitting}\n                               >\n                                 {submitting ? 'Отправка...' : 'Отправить'}\n                               </button>\n                               <button \n                                 type=\"button\" \n                                 onClick={() => setReplyTo(null)}\n                                 className=\"btn-cancel\"\n                               >\n                                 Отмена\n                               </button>\n                             </div>\n                           </form>\n                         )}\n\n                         {/* Ответы на комментарий */}\n                         {post.comments\n                           .filter(reply => reply.parent === comment.id)\n                           .map(reply => (\n                                                           <div key={reply.id} className=\"comment reply\" data-comment-id={reply.id}>\n                                <div className=\"comment-author\">\n                                  <div \n                                    className=\"comment-avatar clickable\"\n                                    onClick={() => navigate(`/profile/${reply.author.id}`)}\n                                    title=\"Перейти к профилю\"\n                                  >\n                                    {reply.author?.avatar_url ? (\n                                      <img \n                                        src={reply.author.avatar_url} \n                                        alt={getAuthorName(reply.author)}\n                                        onError={(e) => {\n                                          e.target.style.display = 'none';\n                                          e.target.nextSibling.style.display = 'flex';\n                                        }}\n                                      />\n                                    ) : null}\n                                    <div className=\"comment-initials\" style={{ \n                                      display: reply.author?.avatar_url ? 'none' : 'flex' \n                                    }}>\n                                      {getAuthorInitials(reply.author)}\n                                    </div>\n                                  </div>\n                                  <div className=\"comment-info\">\n                                                                      <div \n                                    className=\"comment-author-name clickable\"\n                                    onClick={() => navigate(`/profile/${reply.author.id}`)}\n                                    title=\"Перейти к профилю\"\n                                  >\n                                    {getAuthorName(reply.author)}\n                                  </div>\n                                    <div className=\"comment-author-location\">\n                                      <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                      {reply.author?.city || 'Москва'}\n                                    </div>\n                                    <div className=\"comment-date\">\n                                      {formatDate(reply.created_at)}\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"comment-content\">{reply.content}</div>\n                                {isMyComment(reply) && (\n                                  <div className=\"comment-actions\">\n                                    <button \n                                      onClick={() => handleDeleteComment(reply.id)}\n                                      className=\"btn-delete\"\n                                    >\n                                      Удалить\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                           ))}\n                       </div>\n                     ))}\n                 </div>\n               ) : (\n                 <p className=\"no-comments\">Пока нет комментариев. Будьте первым!</p>\n               )}\n             </div>\n           )}\n        </article>\n\n                 {/* Боковая панель */}\n         <aside className=\"post-sidebar\">\n           <div className=\"sidebar-section\">\n             <h3>Информация о посте</h3>\n             <div className=\"post-info\">\n               <div className=\"info-item\">\n                 <span className=\"info-label\">Статус:</span>\n                 <span className={`info-value status-${post.status}`}>\n                   {post.status === 'published' ? 'Опубликован' : 'Черновик'}\n                 </span>\n               </div>\n               <div className=\"info-item\">\n                 <span className=\"info-label\">Комментарии:</span>\n                 <span className=\"info-value\">\n                   {post.comments_enabled === 'enabled' ? 'Разрешены' : 'Запрещены'}\n                 </span>\n               </div>\n               <div className=\"info-item\">\n                 <span className=\"info-label\">Дата создания:</span>\n                 <span className=\"info-value\">\n                   {new Date(post.created_at).toLocaleDateString('ru-RU')}\n                 </span>\n               </div>\n               {post.published_at && (\n                 <div className=\"info-item\">\n                   <span className=\"info-label\">Дата публикации:</span>\n                   <span className=\"info-value\">\n                     {new Date(post.published_at).toLocaleDateString('ru-RU')}\n                   </span>\n                 </div>\n               )}\n             </div>\n           </div>\n           \n                       {/* Краткое описание */}\n            {post.short_description && (\n              <div className=\"sidebar-section\">\n                <h3>Краткое описание</h3>\n                <div className=\"post-short-description\">\n                  <p>{post.short_description}</p>\n                </div>\n              </div>\n            )}\n            \n\n         </aside>\n      </div>\n    </div>\n  );\n};\n\nexport default PostDetail;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,UAAU,EACVC,KAAK,EACLC,WAAW,EACXC,cAAc,EACdC,OAAO,QACF,mCAAmC;AAC1C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,aAAA,EAAAC,cAAA,EAAAC,aAAA,EAAAC,cAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAC5B,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMoC,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAI,CAACA,MAAM,EAAE,OAAO,GAAG;IACvB,MAAMC,SAAS,GAAGD,MAAM,CAACE,UAAU,IAAI,EAAE;IACzC,MAAMC,QAAQ,GAAGH,MAAM,CAACI,SAAS,IAAI,EAAE;IACvC,OAAO,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC,CAAC,GAAGF,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC,IAAI,GAAG;EAC3E,CAAC;EAED,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrC;IACA,IAAIA,QAAQ,CAACC,UAAU,EAAE,OAAOD,QAAQ,CAACC,UAAU;IACnD,IAAID,QAAQ,CAACE,MAAM,EAAE,OAAOF,QAAQ,CAACE,MAAM;IAC3C;IACA,MAAMC,QAAQ,GAAGZ,iBAAiB,CAACS,QAAQ,CAAC;IAC5C,OAAO,wDAAwDI,kBAAkB,CAACD,QAAQ,CAAC,EAAE;EAC/F,CAAC;EAGD/C,SAAS,CAAC,MAAM;IACdiD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAAC9B,IAAI,CAAC,CAAC;EAER,MAAM8B,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFzB,UAAU,CAAC,IAAI,CAAC;MAChB0B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEhC,IAAI,CAAC;MAC3C,MAAMiC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClC,IAAI,GAAG,CAAC;MAExE,IAAIiC,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,IAAI,CAAC;QAC7CL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEI,IAAI,CAACE,QAAQ,CAAC;QAClDP,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,IAAI,CAACE,QAAQ,GAAGF,IAAI,CAACE,QAAQ,CAACC,MAAM,GAAG,CAAC,CAAC;QAEnFpC,OAAO,CAACiC,IAAI,CAAC;MACf,CAAC,MAAM;QACLL,OAAO,CAACzB,KAAK,CAAC,wBAAwB,EAAE2B,QAAQ,CAACO,MAAM,EAAEP,QAAQ,CAACQ,UAAU,CAAC;QAC7ElC,QAAQ,CAAC,gBAAgB,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CC,QAAQ,CAAC,uBAAuB,CAAC;IACnC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqC,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFX,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClC,IAAI,GAAG,CAAC;MAExE,IAAIiC,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,IAAI,CAACE,QAAQ,CAAC;QACtDnC,OAAO,CAACwC,IAAI,KAAK;UACf,GAAGA,IAAI;UACPL,QAAQ,EAAEF,IAAI,CAACE,QAAQ,IAAI;QAC7B,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLP,OAAO,CAACzB,KAAK,CAAC,iCAAiC,EAAE2B,QAAQ,CAACO,MAAM,CAAC;MACnE;IACF,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAID,MAAMsC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI;MACF,IAAI,CAACA,UAAU,EAAE;QACf,OAAO,SAAS;MAClB;MAEA,IAAIC,IAAI;;MAER;MACA,IAAI,OAAOD,UAAU,KAAK,QAAQ,IAAIA,UAAU,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC9D,MAAMC,KAAK,GAAGH,UAAU,CAACI,KAAK,CAAC,GAAG,CAAC;QACnC,IAAID,KAAK,CAACT,MAAM,KAAK,CAAC,EAAE;UACtB,MAAM,CAACW,GAAG,EAAEC,KAAK,EAAEC,IAAI,CAAC,GAAGJ,KAAK;UAChCF,IAAI,GAAG,IAAIO,IAAI,CAAC,GAAGD,IAAI,IAAID,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIJ,GAAG,CAACI,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;QAC9E,CAAC,MAAM;UACLR,IAAI,GAAG,IAAIO,IAAI,CAACR,UAAU,CAAC;QAC7B;MACF,CAAC,MAAM;QACLC,IAAI,GAAG,IAAIO,IAAI,CAACR,UAAU,CAAC;MAC7B;MAEA,IAAIU,KAAK,CAACT,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC,EAAE;QACzB,OAAO,SAAS;MAClB;MAEA,MAAMC,GAAG,GAAG,IAAIJ,IAAI,CAAC,CAAC;MACtB,MAAMK,aAAa,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,GAAGX,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MAC5D,MAAMe,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACF,aAAa,GAAG,EAAE,CAAC;MAClD,MAAMI,UAAU,GAAGH,IAAI,CAACC,KAAK,CAACC,WAAW,GAAG,EAAE,CAAC;MAC/C,MAAME,WAAW,GAAGJ,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,CAAC,CAAC;MAC9C,MAAME,YAAY,GAAGL,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,EAAE,CAAC;MAEhD,IAAIJ,aAAa,GAAG,CAAC,EAAE;QACrB,OAAO,YAAY;MACrB,CAAC,MAAM,IAAIA,aAAa,GAAG,EAAE,EAAE;QAC7B,OAAO,GAAGA,aAAa,OAAOA,aAAa,KAAK,CAAC,GAAG,GAAG,GAAGA,aAAa,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,QAAQ;MAChG,CAAC,MAAM,IAAIG,WAAW,GAAG,EAAE,EAAE;QAC3B,OAAO,GAAGA,WAAW,OAAOA,WAAW,KAAK,CAAC,GAAG,EAAE,GAAGA,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,QAAQ;MAC3F,CAAC,MAAM,IAAIC,UAAU,GAAG,CAAC,EAAE;QACzB,OAAO,GAAGA,UAAU,MAAMA,UAAU,KAAK,CAAC,GAAG,GAAG,GAAGA,UAAU,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,QAAQ;MACxF,CAAC,MAAM,IAAIC,WAAW,GAAG,CAAC,EAAE;QAC1B,OAAO,GAAGA,WAAW,OAAOA,WAAW,KAAK,CAAC,GAAG,KAAK,GAAGA,WAAW,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK,QAAQ;MACjG,CAAC,MAAM,IAAIC,YAAY,GAAG,EAAE,EAAE;QAC5B,OAAO,GAAGA,YAAY,OAAOA,YAAY,KAAK,CAAC,GAAG,IAAI,GAAGA,YAAY,GAAG,CAAC,GAAG,KAAK,GAAG,MAAM,QAAQ;MACpG,CAAC,MAAM;QACL,MAAMC,WAAW,GAAGN,IAAI,CAACC,KAAK,CAACI,YAAY,GAAG,EAAE,CAAC;QACjD,OAAO,GAAGC,WAAW,OAAOA,WAAW,KAAK,CAAC,GAAG,EAAE,GAAGA,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,QAAQ;MAC3F;IACF,CAAC,CAAC,OAAO3D,KAAK,EAAE;MACd,OAAO,SAAS;IAClB;EACF,CAAC;EAED,MAAM4D,aAAa,GAAIjD,MAAM,IAAK;IAChC,IAAI,CAACA,MAAM,EAAE,OAAO,OAAO;IAC3B,MAAMC,SAAS,GAAGD,MAAM,CAACE,UAAU,IAAI,EAAE;IACzC,MAAMC,QAAQ,GAAGH,MAAM,CAACI,SAAS,IAAI,EAAE;IACvC,MAAM8C,QAAQ,GAAG,GAAGjD,SAAS,IAAIE,QAAQ,EAAE,CAACgD,IAAI,CAAC,CAAC;IAClD,OAAOD,QAAQ,IAAIlD,MAAM,CAACoD,QAAQ,IAAI,OAAO;EAC/C,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAChE,UAAU,CAAC4D,IAAI,CAAC,CAAC,EAAE;IAExB,IAAI;MACFrD,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACA,MAAMU,QAAQ,GAAGgD,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;MACrE7C,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEP,QAAQ,CAAC;;MAE7D;MACA,MAAMoD,aAAa,GAAG;QACpBC,EAAE,EAAEzB,IAAI,CAACI,GAAG,CAAC,CAAC;QAAE;QAChBsB,OAAO,EAAEvE,UAAU;QACnBS,MAAM,EAAE;UACN6D,EAAE,EAAErD,QAAQ,CAACqD,EAAE,IAAI,GAAG;UACtB3D,UAAU,EAAEM,QAAQ,CAACN,UAAU,IAAI,cAAc;UACjDE,SAAS,EAAEI,QAAQ,CAACJ,SAAS,IAAI,UAAU;UAC3CgD,QAAQ,EAAE5C,QAAQ,CAAC4C,QAAQ,IAAI,WAAW;UAC1C1C,MAAM,EAAEF,QAAQ,CAACE,MAAM,IAAI,IAAI;UAC/BD,UAAU,EAAEF,gBAAgB,CAACC,QAAQ,CAAC;UACtCuD,IAAI,EAAEvD,QAAQ,CAACuD,IAAI,IAAI;QACzB,CAAC;QACDC,UAAU,EAAE,IAAI5B,IAAI,CAAC,CAAC,CAAC6B,WAAW,CAAC,CAAC;QACpCC,MAAM,EAAE,IAAI;QACZC,WAAW,EAAE;MACf,CAAC;MAEDrD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE6C,aAAa,CAAC;;MAEhD;MACApE,aAAa,CAAC,EAAE,CAAC;;MAEjB;MACA,IAAI;QACF,MAAM4E,KAAK,GAAGV,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIU,cAAc,CAACV,OAAO,CAAC,aAAa,CAAC;QAC1F,IAAIS,KAAK,EAAE;UACT,MAAMpD,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClC,IAAI,YAAY,EAAE;YAChFuF,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,eAAe,EAAE,UAAUH,KAAK,EAAE;cAClC,cAAc,EAAE;YAClB,CAAC;YACDI,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;cACnBX,OAAO,EAAEvE,UAAU;cACnB2E,MAAM,EAAE;YACV,CAAC;UACH,CAAC,CAAC;UAEF,IAAIlD,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMwD,MAAM,GAAG,MAAM1D,QAAQ,CAACI,IAAI,CAAC,CAAC;YACpCN,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE2D,MAAM,CAAC;;YAE/D;YACA,MAAMjD,eAAe,CAAC,CAAC;UACzB,CAAC,MAAM;YACL,MAAMkD,SAAS,GAAG,MAAM3D,QAAQ,CAAC4D,IAAI,CAAC,CAAC;YACvC9D,OAAO,CAACzB,KAAK,CAAC,4BAA4B,EAAE2B,QAAQ,CAACO,MAAM,EAAEoD,SAAS,CAAC;YACvE;YACAzF,OAAO,CAACwC,IAAI,KAAK;cACf,GAAGA,IAAI;cACPL,QAAQ,EAAE,CAACuC,aAAa,EAAE,IAAIlC,IAAI,CAACL,QAAQ,IAAI,EAAE,CAAC;YACpD,CAAC,CAAC,CAAC;UACL;QACF,CAAC,MAAM;UACLP,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;UAC7D;UACA7B,OAAO,CAACwC,IAAI,KAAK;YACf,GAAGA,IAAI;YACPL,QAAQ,EAAE,CAACuC,aAAa,EAAE,IAAIlC,IAAI,CAACL,QAAQ,IAAI,EAAE,CAAC;UACpD,CAAC,CAAC,CAAC;QACL;MACF,CAAC,CAAC,OAAOwD,WAAW,EAAE;QACpB/D,OAAO,CAACzB,KAAK,CAAC,iBAAiB,EAAEwF,WAAW,CAAC;QAC7C;QACA3F,OAAO,CAACwC,IAAI,KAAK;UACf,GAAGA,IAAI;UACPL,QAAQ,EAAE,CAACuC,aAAa,EAAE,IAAIlC,IAAI,CAACL,QAAQ,IAAI,EAAE,CAAC;QACpD,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD;MACAH,OAAO,CAACwC,IAAI,KAAK;QACf,GAAGA,IAAI;QACPL,QAAQ,EAAE,CAACuC,aAAa,EAAE,IAAIlC,IAAI,CAACL,QAAQ,IAAI,EAAE,CAAC;MACpD,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRvB,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMgF,iBAAiB,GAAG,MAAAA,CAAOxB,CAAC,EAAEyB,QAAQ,KAAK;IAC/CzB,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC5D,SAAS,CAACwD,IAAI,CAAC,CAAC,EAAE;IAEvB,IAAI;MACFrD,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACA,MAAMU,QAAQ,GAAGgD,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;;MAE9D;MACN,MAAMqB,WAAW,GAAG;QAClBnB,EAAE,EAAEzB,IAAI,CAACI,GAAG,CAAC,CAAC;QAAE;QAChBsB,OAAO,EAAEnE,SAAS;QAClBK,MAAM,EAAE;UACN6D,EAAE,EAAErD,QAAQ,CAACqD,EAAE,IAAI,GAAG;UACtB3D,UAAU,EAAEM,QAAQ,CAACN,UAAU,IAAI,cAAc;UACjDE,SAAS,EAAEI,QAAQ,CAACJ,SAAS,IAAI,UAAU;UAC3CgD,QAAQ,EAAE5C,QAAQ,CAAC4C,QAAQ,IAAI,WAAW;UAC1C1C,MAAM,EAAEF,QAAQ,CAACE,MAAM,IAAI,IAAI;UAC/BD,UAAU,EAAEF,gBAAgB,CAACC,QAAQ,CAAC;UACtCuD,IAAI,EAAEvD,QAAQ,CAACuD,IAAI,IAAI;QACzB,CAAC;QACDC,UAAU,EAAE,IAAI5B,IAAI,CAAC,CAAC,CAAC6B,WAAW,CAAC,CAAC;QACpCC,MAAM,EAAEa,QAAQ;QAChBZ,WAAW,EAAE;MACf,CAAC;;MAEF;MACAvE,YAAY,CAAC,EAAE,CAAC;MAChBF,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAI;QACF,MAAM0E,KAAK,GAAGV,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIU,cAAc,CAACV,OAAO,CAAC,aAAa,CAAC;QAC1F,IAAIS,KAAK,EAAE;UACT,MAAMpD,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmClC,IAAI,YAAY,EAAE;YAChFuF,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,eAAe,EAAE,UAAUH,KAAK,EAAE;cAClC,cAAc,EAAE;YAClB,CAAC;YACDI,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;cACnBX,OAAO,EAAEnE,SAAS;cAClBuE,MAAM,EAAEa;YACV,CAAC;UACH,CAAC,CAAC;UAEF,IAAI/D,QAAQ,CAACE,EAAE,EAAE;YACfJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;YAChD;YACA,MAAMU,eAAe,CAAC,CAAC;UACzB,CAAC,MAAM;YACL,MAAMkD,SAAS,GAAG,MAAM3D,QAAQ,CAAC4D,IAAI,CAAC,CAAC;YACvC9D,OAAO,CAACzB,KAAK,CAAC,mCAAmC,EAAE2B,QAAQ,CAACO,MAAM,EAAEoD,SAAS,CAAC;YAC9E;YACAzF,OAAO,CAACwC,IAAI,KAAK;cACf,GAAGA,IAAI;cACPL,QAAQ,EAAE,CAAC,IAAIK,IAAI,CAACL,QAAQ,IAAI,EAAE,CAAC,EAAE2D,WAAW;YAClD,CAAC,CAAC,CAAC;UACL;QACF;MACF,CAAC,CAAC,OAAOH,WAAW,EAAE;QACpB/D,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MAC3D;IACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,SAAS;MACRS,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMmF,gBAAgB,GAAIC,SAAS,IAAK;IACtCxF,UAAU,CAACD,OAAO,KAAKyF,SAAS,GAAG,IAAI,GAAGA,SAAS,CAAC;IACpDtF,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMuF,mBAAmB,GAAG,MAAOD,SAAS,IAAK;IAC/C;IACA,MAAME,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,qBAAqBJ,SAAS,IAAI,CAAC;IACjF,IAAIE,cAAc,EAAE;MAClBA,cAAc,CAACG,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IAC1C;IAEA,IAAI;MACF,MAAMpB,KAAK,GAAGV,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIU,cAAc,CAACV,OAAO,CAAC,aAAa,CAAC;MAC1F,IAAIS,KAAK,EAAE;QACT,MAAMpD,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4CiE,SAAS,UAAU,EAAE;UAC5FZ,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUH,KAAK,EAAE;YAClC,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIpD,QAAQ,CAACE,EAAE,EAAE;UACfJ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;UACpD;UACA,MAAMU,eAAe,CAAC,CAAC;QACzB,CAAC,MAAM;UACL,MAAMkD,SAAS,GAAG,MAAM3D,QAAQ,CAAC4D,IAAI,CAAC,CAAC;UACvC9D,OAAO,CAACzB,KAAK,CAAC,yCAAyC,EAAE2B,QAAQ,CAACO,MAAM,EAAEoD,SAAS,CAAC;QACtF;MACF;IACF,CAAC,CAAC,OAAOtF,KAAK,EAAE;MACdyB,OAAO,CAACzB,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD;MACAH,OAAO,CAACwC,IAAI,KAAK;QACf,GAAGA,IAAI;QACPL,QAAQ,EAAEK,IAAI,CAACL,QAAQ,CAACoE,MAAM,CAACC,OAAO,IAAIA,OAAO,CAAC7B,EAAE,KAAKqB,SAAS,IAAIQ,OAAO,CAACxB,MAAM,KAAKgB,SAAS;MACpG,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAO,CAAC,EAAEjC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIU,cAAc,CAACV,OAAO,CAAC,aAAa,CAAC,CAAC;EACzF,CAAC;EAED,MAAMiC,WAAW,GAAIF,OAAO,IAAK;IAAA,IAAAG,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;IAC/B;IACA,MAAMvF,QAAQ,GAAGgD,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;IACrE,OAAO,EAAAkC,eAAA,GAAAH,OAAO,CAAC1F,MAAM,cAAA6F,eAAA,uBAAdA,eAAA,CAAgBhC,EAAE,MAAKrD,QAAQ,CAACqD,EAAE,IAAI,EAAAiC,gBAAA,GAAAJ,OAAO,CAAC1F,MAAM,cAAA8F,gBAAA,uBAAdA,gBAAA,CAAgB1C,QAAQ,MAAK,WAAW,IAAI,EAAA2C,gBAAA,GAAAL,OAAO,CAAC1F,MAAM,cAAA+F,gBAAA,uBAAdA,gBAAA,CAAgB7F,UAAU,MAAK,cAAc;EACxI,CAAC;EAED,IAAIf,OAAO,EAAE;IACX,oBACEb,OAAA;MAAK0H,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC3H,OAAA;QAAK0H,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvC/H,OAAA;QAAA2H,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEV;EAEA,IAAIhH,KAAK,IAAI,CAACJ,IAAI,EAAE;IAClB,oBACEX,OAAA;MAAK0H,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC3H,OAAA;QAAA2H,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf/H,OAAA;QAAA2H,QAAA,EAAI5G,KAAK,IAAI;MAAgB;QAAA6G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC/H,OAAA;QAAQgI,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,GAAG,CAAE;QAACgH,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACxD3H,OAAA,CAACP,eAAe;UAACwI,IAAI,EAAErI;QAAY;UAAAgI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kHAExC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACE/H,OAAA;IAAK0H,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAEpC3H,OAAA;MAAK0H,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjC3H,OAAA;QAAQgI,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,GAAG,CAAE;QAACgH,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACxD3H,OAAA,CAACP,eAAe;UAACwI,IAAI,EAAErI;QAAY;UAAAgI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kCAExC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN/H,OAAA;MAAK0H,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC3H,OAAA;QAAS0H,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAE/B3H,OAAA;UAAK0H,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAClC3H,OAAA;YAAK0H,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B3H,OAAA;cACE0H,SAAS,EAAC,yBAAyB;cACnCM,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,YAAYC,IAAI,CAACe,MAAM,CAAC6D,EAAE,EAAE,CAAE;cACtD2C,KAAK,EAAC,8FAAmB;cAAAP,QAAA,GAExB,CAAAxH,YAAA,GAAAQ,IAAI,CAACe,MAAM,cAAAvB,YAAA,eAAXA,YAAA,CAAagC,UAAU,gBACtBnC,OAAA;gBACEmI,GAAG,EAAExH,IAAI,CAACe,MAAM,CAACS,UAAW;gBAC5BiG,GAAG,EAAEzD,aAAa,CAAChE,IAAI,CAACe,MAAM,CAAE;gBAChC2G,OAAO,EAAGrD,CAAC,IAAK;kBACdA,CAAC,CAACsD,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;kBAC/BxD,CAAC,CAACsD,MAAM,CAACG,WAAW,CAACF,KAAK,CAACC,OAAO,GAAG,MAAM;gBAC7C;cAAE;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,GACA,IAAI,eACR/H,OAAA;gBAAK0H,SAAS,EAAC,iBAAiB;gBAACa,KAAK,EAAE;kBACtCC,OAAO,EAAE,CAAApI,aAAA,GAAAO,IAAI,CAACe,MAAM,cAAAtB,aAAA,eAAXA,aAAA,CAAa+B,UAAU,GAAG,MAAM,GAAG;gBAC9C,CAAE;gBAAAwF,QAAA,EACClG,iBAAiB,CAACd,IAAI,CAACe,MAAM;cAAC;gBAAAkG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEN/H,OAAA;cAAK0H,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B3H,OAAA;gBACE0H,SAAS,EAAC,uBAAuB;gBACjCM,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,YAAYC,IAAI,CAACe,MAAM,CAAC6D,EAAE,EAAE,CAAE;gBACtD2C,KAAK,EAAC,8FAAmB;gBAAAP,QAAA,EAExBhD,aAAa,CAAChE,IAAI,CAACe,MAAM;cAAC;gBAAAkG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxB,CAAC,eACN/H,OAAA;gBAAK0H,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBAC1B3H,OAAA;kBAAM0H,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,gBAC/B3H,OAAA,CAACP,eAAe;oBAACwI,IAAI,EAAEpI;kBAAe;oBAAA+H,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,EACxC,EAAA1H,aAAA,GAAAM,IAAI,CAACe,MAAM,cAAArB,aAAA,uBAAXA,aAAA,CAAaoF,IAAI,KAAI,QAAQ;gBAAA;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC,eACP/H,OAAA;kBAAM0H,SAAS,EAAC,WAAW;kBAAAC,QAAA,gBACzB3H,OAAA,CAACP,eAAe;oBAACwI,IAAI,EAAEvI;kBAAW;oBAAAkI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,EACpC1E,UAAU,CAAC1C,IAAI,CAAC+H,YAAY,IAAI/H,IAAI,CAAC+E,UAAU,CAAC;gBAAA;kBAAAkC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN/H,OAAA;UAAK0H,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjC3H,OAAA;YAAK0H,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC3H,OAAA;cAAK0H,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBACjC3H,OAAA;gBAAK0H,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EACnC,EAAArH,cAAA,GAAAK,IAAI,CAACgI,QAAQ,cAAArI,cAAA,uBAAbA,cAAA,CAAesI,IAAI,KAAI;cAAO;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACN/H,OAAA;gBAAI0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAEhH,IAAI,CAACuH;cAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC,eAGN/H,OAAA;cAAK0H,SAAS,EAAC,mBAAmB;cAAAC,QAAA,eAChC3H,OAAA;gBAAQ0H,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,eACtC3H,OAAA,CAACP,eAAe;kBAACwI,IAAI,EAAEnI;gBAAQ;kBAAA8H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGL/H,OAAA;UAAK0H,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxB3H,OAAA;YAAK0H,SAAS,EAAC,cAAc;YAACmB,uBAAuB,EAAE;cAAEC,MAAM,EAAEnI,IAAI,CAAC6E;YAAQ;UAAE;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC,EAGN,EAAAxH,aAAA,GAAAI,IAAI,CAACe,MAAM,cAAAnB,aAAA,uBAAXA,aAAA,CAAagF,EAAE,MAAML,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAACE,EAAG,iBAC5EvF,OAAA;UAAK0H,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B3H,OAAA;YAAA2H,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvB/H,OAAA;YAAK0H,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB3H,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAA2H,QAAA,EAAO;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC1B/H,OAAA;gBAAA2H,QAAA,EAAIhH,IAAI,CAACoI;cAAU;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,eAEN/H,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAA2H,QAAA,EAAO;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAChC/H,OAAA;gBAAA2H,QAAA,EAAIhH,IAAI,CAACqI;cAAgB;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eAEN/H,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAA2H,QAAA,EAAO;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7B/H,OAAA;gBAAA2H,QAAA,EAAIhH,IAAI,CAACsI;cAAa;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGC,CAACpH,IAAI,CAACuI,gBAAgB,KAAK,SAAS,IAAI,IAAI,kBAC3ClJ,OAAA;UAAK0H,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B3H,OAAA;YAAA2H,QAAA,GAAI,sEAAa,EAAC,EAAAnH,cAAA,GAAAG,IAAI,CAACoC,QAAQ,cAAAvC,cAAA,uBAAbA,cAAA,CAAewC,MAAM,KAAI,CAAC,EAAC,GAAC;UAAA;YAAA4E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAGlDV,UAAU,CAAC,CAAC,iBACXrH,OAAA;YAAMmJ,QAAQ,EAAEpE,mBAAoB;YAAC2C,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3D3H,OAAA;cAAK0H,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eACpC3H,OAAA;gBACEoJ,KAAK,EAAEnI,UAAW;gBAClBoI,QAAQ,EAAGrE,CAAC,IAAK9D,aAAa,CAAC8D,CAAC,CAACsD,MAAM,CAACc,KAAK,CAAE;gBAC/CE,WAAW,EAAC,wHAAyB;gBACrC5B,SAAS,EAAC,eAAe;gBACzB6B,IAAI,EAAC,GAAG;gBACRC,QAAQ,EAAEjI;cAAW;gBAAAqG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN/H,OAAA;cAAK0H,SAAS,EAAC,sBAAsB;cAAAC,QAAA,eACnC3H,OAAA;gBACEyJ,IAAI,EAAC,QAAQ;gBACb/B,SAAS,EAAC,oBAAoB;gBAC9B8B,QAAQ,EAAE,CAACvI,UAAU,CAAC4D,IAAI,CAAC,CAAC,IAAItD,UAAW;gBAAAoG,QAAA,EAE1CpG,UAAU,GAAG,aAAa,GAAG;cAAW;gBAAAqG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACP,EAGAvF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE9B,IAAI,CAACoC,QAAQ,CAAC,EAC1DpC,IAAI,CAACoC,QAAQ,IAAIpC,IAAI,CAACoC,QAAQ,CAACC,MAAM,GAAG,CAAC,gBACxChD,OAAA;YAAK0H,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3BhH,IAAI,CAACoC,QAAQ,CACXoE,MAAM,CAACC,OAAO,IAAI,CAACA,OAAO,CAACxB,MAAM,CAAC,CAAC;YAAA,CACnC8D,GAAG,CAACtC,OAAO;cAAA,IAAAuC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;cAAA,oBACV7J,OAAA;gBAAsB0H,SAAS,EAAC,SAAS;gBAAC,mBAAiBN,OAAO,CAAC7B,EAAG;gBAAAoC,QAAA,gBAC1C3H,OAAA;kBAAK0H,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,gBACtD3H,OAAA;oBACE0H,SAAS,EAAC,0BAA0B;oBACpCM,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,YAAY0G,OAAO,CAAC1F,MAAM,CAAC6D,EAAE,EAAE,CAAE;oBACzD2C,KAAK,EAAC,8FAAmB;oBAAAP,QAAA,GAExB,CAAAgC,gBAAA,GAAAvC,OAAO,CAAC1F,MAAM,cAAAiI,gBAAA,eAAdA,gBAAA,CAAgBxH,UAAU,gBACzBnC,OAAA;sBACEmI,GAAG,EAAEf,OAAO,CAAC1F,MAAM,CAACS,UAAW;sBAC/BiG,GAAG,EAAEzD,aAAa,CAACyC,OAAO,CAAC1F,MAAM,CAAE;sBACnC2G,OAAO,EAAGrD,CAAC,IAAK;wBACdA,CAAC,CAACsD,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;wBAC/BxD,CAAC,CAACsD,MAAM,CAACG,WAAW,CAACF,KAAK,CAACC,OAAO,GAAG,MAAM;sBAC7C;oBAAE;sBAAAZ,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,GACA,IAAI,eACR/H,OAAA;sBAAK0H,SAAS,EAAC,kBAAkB;sBAACa,KAAK,EAAE;wBACvCC,OAAO,EAAE,CAAAoB,gBAAA,GAAAxC,OAAO,CAAC1F,MAAM,cAAAkI,gBAAA,eAAdA,gBAAA,CAAgBzH,UAAU,GAAG,MAAM,GAAG;sBACjD,CAAE;sBAAAwF,QAAA,EACClG,iBAAiB,CAAC2F,OAAO,CAAC1F,MAAM;oBAAC;sBAAAkG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC/B,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,eACN/H,OAAA;oBAAK0H,SAAS,EAAC,cAAc;oBAAAC,QAAA,gBAC3B3H,OAAA;sBACE0H,SAAS,EAAC,+BAA+B;sBACzCM,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,YAAY0G,OAAO,CAAC1F,MAAM,CAAC6D,EAAE,EAAE,CAAE;sBACzD2C,KAAK,EAAC,8FAAmB;sBAAAP,QAAA,EAExBhD,aAAa,CAACyC,OAAO,CAAC1F,MAAM;oBAAC;sBAAAkG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC3B,CAAC,eACN/H,OAAA;sBAAK0H,SAAS,EAAC,yBAAyB;sBAAAC,QAAA,gBACtC3H,OAAA,CAACP,eAAe;wBAACwI,IAAI,EAAEpI;sBAAe;wBAAA+H,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,EACxC,EAAA8B,gBAAA,GAAAzC,OAAO,CAAC1F,MAAM,cAAAmI,gBAAA,uBAAdA,gBAAA,CAAgBpE,IAAI,KAAI,QAAQ;oBAAA;sBAAAmC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B,CAAC,eACN/H,OAAA;sBAAK0H,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAC1BtE,UAAU,CAAC+D,OAAO,CAAC1B,UAAU;oBAAC;sBAAAkC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5B,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACN/H,OAAA;kBAAK0H,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,EAAEP,OAAO,CAAC5B;gBAAO;kBAAAoC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAGxD/H,OAAA;kBAAK0H,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,GAC7BN,UAAU,CAAC,CAAC,iBACXrH,OAAA;oBACEgI,OAAO,EAAEA,CAAA,KAAMrB,gBAAgB,CAACS,OAAO,CAAC7B,EAAE,CAAE;oBAC5CmC,SAAS,EAAC,WAAW;oBAAAC,QAAA,EACtB;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CACT,EACAT,WAAW,CAACF,OAAO,CAAC,iBACnBpH,OAAA;oBACEgI,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAACO,OAAO,CAAC7B,EAAE,CAAE;oBAC/CmC,SAAS,EAAC,YAAY;oBAAAC,QAAA,EACvB;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CACT;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC,EAGN5G,OAAO,KAAKiG,OAAO,CAAC7B,EAAE,iBACrBvF,OAAA;kBAAMmJ,QAAQ,EAAGnE,CAAC,IAAKwB,iBAAiB,CAACxB,CAAC,EAAEoC,OAAO,CAAC7B,EAAE,CAAE;kBAACmC,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBAC7E3H,OAAA;oBAAK0H,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,eACpC3H,OAAA;sBACEoJ,KAAK,EAAE/H,SAAU;sBACjBgI,QAAQ,EAAGrE,CAAC,IAAK1D,YAAY,CAAC0D,CAAC,CAACsD,MAAM,CAACc,KAAK,CAAE;sBAC9CE,WAAW,EAAC,oFAAmB;sBAC/B5B,SAAS,EAAC,eAAe;sBACzB6B,IAAI,EAAC,GAAG;sBACRC,QAAQ,EAAEjI;oBAAW;sBAAAqG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC,eACN/H,OAAA;oBAAK0H,SAAS,EAAC,sBAAsB;oBAAAC,QAAA,gBACnC3H,OAAA;sBACEyJ,IAAI,EAAC,QAAQ;sBACb/B,SAAS,EAAC,oBAAoB;sBAC9B8B,QAAQ,EAAE,CAACnI,SAAS,CAACwD,IAAI,CAAC,CAAC,IAAItD,UAAW;sBAAAoG,QAAA,EAEzCpG,UAAU,GAAG,aAAa,GAAG;oBAAW;sBAAAqG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnC,CAAC,eACT/H,OAAA;sBACEyJ,IAAI,EAAC,QAAQ;sBACbzB,OAAO,EAAEA,CAAA,KAAM5G,UAAU,CAAC,IAAI,CAAE;sBAChCsG,SAAS,EAAC,YAAY;sBAAAC,QAAA,EACvB;oBAED;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACN,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CACP,EAGApH,IAAI,CAACoC,QAAQ,CACXoE,MAAM,CAAC2C,KAAK,IAAIA,KAAK,CAAClE,MAAM,KAAKwB,OAAO,CAAC7B,EAAE,CAAC,CAC5CmE,GAAG,CAACI,KAAK;kBAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA;kBAAA,oBACsBjK,OAAA;oBAAoB0H,SAAS,EAAC,eAAe;oBAAC,mBAAiBoC,KAAK,CAACvE,EAAG;oBAAAoC,QAAA,gBACnG3H,OAAA;sBAAK0H,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,gBAC7B3H,OAAA;wBACE0H,SAAS,EAAC,0BAA0B;wBACpCM,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,YAAYoJ,KAAK,CAACpI,MAAM,CAAC6D,EAAE,EAAE,CAAE;wBACvD2C,KAAK,EAAC,8FAAmB;wBAAAP,QAAA,GAExB,CAAAoC,aAAA,GAAAD,KAAK,CAACpI,MAAM,cAAAqI,aAAA,eAAZA,aAAA,CAAc5H,UAAU,gBACvBnC,OAAA;0BACEmI,GAAG,EAAE2B,KAAK,CAACpI,MAAM,CAACS,UAAW;0BAC7BiG,GAAG,EAAEzD,aAAa,CAACmF,KAAK,CAACpI,MAAM,CAAE;0BACjC2G,OAAO,EAAGrD,CAAC,IAAK;4BACdA,CAAC,CAACsD,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;4BAC/BxD,CAAC,CAACsD,MAAM,CAACG,WAAW,CAACF,KAAK,CAACC,OAAO,GAAG,MAAM;0BAC7C;wBAAE;0BAAAZ,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACH,CAAC,GACA,IAAI,eACR/H,OAAA;0BAAK0H,SAAS,EAAC,kBAAkB;0BAACa,KAAK,EAAE;4BACvCC,OAAO,EAAE,CAAAwB,cAAA,GAAAF,KAAK,CAACpI,MAAM,cAAAsI,cAAA,eAAZA,cAAA,CAAc7H,UAAU,GAAG,MAAM,GAAG;0BAC/C,CAAE;0BAAAwF,QAAA,EACClG,iBAAiB,CAACqI,KAAK,CAACpI,MAAM;wBAAC;0BAAAkG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC7B,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,eACN/H,OAAA;wBAAK0H,SAAS,EAAC,cAAc;wBAAAC,QAAA,gBACO3H,OAAA;0BAClC0H,SAAS,EAAC,+BAA+B;0BACzCM,OAAO,EAAEA,CAAA,KAAMtH,QAAQ,CAAC,YAAYoJ,KAAK,CAACpI,MAAM,CAAC6D,EAAE,EAAE,CAAE;0BACvD2C,KAAK,EAAC,8FAAmB;0BAAAP,QAAA,EAExBhD,aAAa,CAACmF,KAAK,CAACpI,MAAM;wBAAC;0BAAAkG,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACzB,CAAC,eACJ/H,OAAA;0BAAK0H,SAAS,EAAC,yBAAyB;0BAAAC,QAAA,gBACtC3H,OAAA,CAACP,eAAe;4BAACwI,IAAI,EAAEpI;0BAAe;4BAAA+H,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAE,CAAC,EACxC,EAAAkC,cAAA,GAAAH,KAAK,CAACpI,MAAM,cAAAuI,cAAA,uBAAZA,cAAA,CAAcxE,IAAI,KAAI,QAAQ;wBAAA;0BAAAmC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC5B,CAAC,eACN/H,OAAA;0BAAK0H,SAAS,EAAC,cAAc;0BAAAC,QAAA,EAC1BtE,UAAU,CAACyG,KAAK,CAACpE,UAAU;wBAAC;0BAAAkC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC1B,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,eACN/H,OAAA;sBAAK0H,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,EAAEmC,KAAK,CAACtE;oBAAO;sBAAAoC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,EACrDT,WAAW,CAACwC,KAAK,CAAC,iBACjB9J,OAAA;sBAAK0H,SAAS,EAAC,iBAAiB;sBAAAC,QAAA,eAC9B3H,OAAA;wBACEgI,OAAO,EAAEA,CAAA,KAAMnB,mBAAmB,CAACiD,KAAK,CAACvE,EAAE,CAAE;wBAC7CmC,SAAS,EAAC,YAAY;wBAAAC,QAAA,EACvB;sBAED;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACN,CACN;kBAAA,GAlDoC+B,KAAK,CAACvE,EAAE;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAmD1C,CAAC;gBAAA,CACR,CAAC;cAAA,GAtJIX,OAAO,CAAC7B,EAAE;gBAAAqC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAuJf,CAAC;YAAA,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,gBAEN/H,OAAA;YAAG0H,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACpE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAGT/H,OAAA;QAAO0H,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC7B3H,OAAA;UAAK0H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B3H,OAAA;YAAA2H,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B/H,OAAA;YAAK0H,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxB3H,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC3C/H,OAAA;gBAAM0H,SAAS,EAAE,qBAAqB/G,IAAI,CAACsC,MAAM,EAAG;gBAAA0E,QAAA,EACjDhH,IAAI,CAACsC,MAAM,KAAK,WAAW,GAAG,aAAa,GAAG;cAAU;gBAAA2E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN/H,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChD/H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACzBhH,IAAI,CAACuI,gBAAgB,KAAK,SAAS,GAAG,WAAW,GAAG;cAAW;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACN/H,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAClD/H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACzB,IAAI7D,IAAI,CAACnD,IAAI,CAAC+E,UAAU,CAAC,CAACwE,kBAAkB,CAAC,OAAO;cAAC;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,EACLpH,IAAI,CAAC+H,YAAY,iBAChB1I,OAAA;cAAK0H,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxB3H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpD/H,OAAA;gBAAM0H,SAAS,EAAC,YAAY;gBAAAC,QAAA,EACzB,IAAI7D,IAAI,CAACnD,IAAI,CAAC+H,YAAY,CAAC,CAACwB,kBAAkB,CAAC,OAAO;cAAC;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EAGJpH,IAAI,CAACwJ,iBAAiB,iBACrBnK,OAAA;UAAK0H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B3H,OAAA;YAAA2H,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB/H,OAAA;YAAK0H,SAAS,EAAC,wBAAwB;YAAAC,QAAA,eACrC3H,OAAA;cAAA2H,QAAA,EAAIhH,IAAI,CAACwJ;YAAiB;cAAAvC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7H,EAAA,CA9tBID,UAAU;EAAA,QACGV,SAAS,EACTC,WAAW;AAAA;AAAA4K,EAAA,GAFxBnK,UAAU;AAguBhB,eAAeA,UAAU;AAAC,IAAAmK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}