{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\SimpleChat\\\\SimpleChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport './SimpleChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleChat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      chatWebSocket.leaveChat();\n    };\n  }, [userId]);\n  const setupWebSocket = () => {\n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', message => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n    chatWebSocket.onMessage('user_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n\n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n    chatWebSocket.onMessage('user_stop_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n      }\n    }\n    return null;\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n  const loadChatMessages = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/async/chats/${userId}/messages/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.messages) {\n          setMessages(data.messages);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n\n    // Отправляем сообщение через WebSocket\n    chatWebSocket.sendMessage(userId, messageContent, 'text');\n\n    // Останавливаем индикатор печати\n    chatWebSocket.stopTyping(userId);\n  };\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n\n    // Управление индикатором печати\n    if (e.target.value.trim()) {\n      chatWebSocket.startTyping(userId);\n\n      // Очищаем предыдущий таймаут\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      // Устанавливаем новый таймаут для остановки индикатора\n      typingTimeoutRef.current = setTimeout(() => {\n        chatWebSocket.stopTyping(userId);\n      }, 1000);\n    } else {\n      chatWebSocket.stopTyping(userId);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n  const displayName = user ? user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : user.first_name || user.username || 'Пользователь' : 'Пользователь';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"user-name\",\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-title\",\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-subtitle\",\n          children: \"\\u0421\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A \\u043D\\u0435 \\u0432\\u0438\\u0434\\u0438\\u0442 \\u044D\\u0442\\u0443 \\u043F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0443.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map(message => {\n          // Получаем ID пользователя из userData\n          const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n          let currentUserId = null;\n          if (userDataString) {\n            try {\n              const userData = JSON.parse(userDataString);\n              currentUserId = parseInt(userData.id);\n            } catch (error) {\n              console.error('Ошибка парсинга userData:', error);\n            }\n          }\n          const messageSenderId = parseInt(message.sender);\n          const isMyMessage = messageSenderId === currentUserId;\n\n          // Получаем информацию об отправителе\n          const senderInfo = message.sender_info || {};\n          const senderName = senderInfo.first_name && senderInfo.last_name ? `${senderInfo.first_name} ${senderInfo.last_name}` : senderInfo.first_name || senderInfo.username || 'Пользователь';\n          const senderAvatar = senderInfo.avatar || '/images/default-avatar.svg';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${isMyMessage ? 'my-message' : 'incoming-message'}`,\n            children: [!isMyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: senderAvatar,\n                alt: senderName,\n                onError: e => {\n                  e.target.src = '/images/default-avatar.png';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [!isMyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sender-name\",\n                children: senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                style: isMyMessage ? {\n                  backgroundColor: '#007bff',\n                  color: 'white'\n                } : {\n                  backgroundColor: '#ffffff',\n                  color: 'black'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this);\n        }), isTyping && typingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-dots\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-text\",\n            children: [typingUser, \" \\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0435\\u0442...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n          value: newMessage,\n          onChange: handleInputChange,\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !newMessage.trim() || loading,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleChat, \"3lvM6yLYGQW+XNLgnkS6s7NCmRM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SimpleChat;\nexport default SimpleChat;\nvar _c;\n$RefreshReg$(_c, \"SimpleChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","FontAwesomeIcon","faArrowLeft","faPaperPlane","chatWebSocket","jsxDEV","_jsxDEV","SimpleChat","_s","userId","navigate","messages","setMessages","newMessage","setNewMessage","user","setUser","loading","setLoading","isTyping","setIsTyping","typingUser","setTypingUser","messagesEndRef","typingTimeoutRef","loadUserData","loadChatMessages","setupWebSocket","current","clearTimeout","leaveChat","connect","joinChat","onMessage","message","prev","scrollToBottom","data","user_id","getCurrentUserId","user_name","setTimeout","userDataString","localStorage","getItem","sessionStorage","userData","JSON","parse","parseInt","id","error","console","_messagesEndRef$curre","scrollIntoView","behavior","token","response","fetch","headers","ok","json","success","handleSendMessage","e","preventDefault","trim","messageContent","sendMessage","stopTyping","handleInputChange","target","value","startTyping","displayName","first_name","last_name","username","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","length","map","currentUserId","messageSenderId","sender","isMyMessage","senderInfo","sender_info","senderName","senderAvatar","avatar","src","alt","onError","style","backgroundColor","color","content","Date","created_at","toLocaleTimeString","hour","minute","ref","type","placeholder","onChange","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/SimpleChat/SimpleChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport './SimpleChat.css';\n\nconst SimpleChat = () => {\n  const { userId } = useParams();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      chatWebSocket.leaveChat();\n    };\n  }, [userId]);\n\n  const setupWebSocket = () => {\n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n\n    chatWebSocket.onMessage('user_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n        \n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n\n    chatWebSocket.onMessage('user_stop_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n      }\n    }\n    return null;\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n\n  const loadChatMessages = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/async/chats/${userId}/messages/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.messages) {\n          setMessages(data.messages);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    \n    // Отправляем сообщение через WebSocket\n    chatWebSocket.sendMessage(userId, messageContent, 'text');\n    \n    // Останавливаем индикатор печати\n    chatWebSocket.stopTyping(userId);\n  };\n\n  const handleInputChange = (e) => {\n    setNewMessage(e.target.value);\n    \n    // Управление индикатором печати\n    if (e.target.value.trim()) {\n      chatWebSocket.startTyping(userId);\n      \n      // Очищаем предыдущий таймаут\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      \n      // Устанавливаем новый таймаут для остановки индикатора\n      typingTimeoutRef.current = setTimeout(() => {\n        chatWebSocket.stopTyping(userId);\n      }, 1000);\n    } else {\n      chatWebSocket.stopTyping(userId);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n\n  const displayName = user ? \n    (user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : \n     user.first_name || user.username || 'Пользователь') : \n    'Пользователь';\n\n  return (\n    <div className=\"simple-chat\">\n      <div className=\"chat-header\">\n        <button className=\"back-button\" onClick={() => navigate(-1)}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n          <span>Переписки</span>\n        </button>\n        <div className=\"chat-user-info\">\n          <h3 className=\"user-name\">{displayName}</h3>\n        </div>\n      </div>\n\n      <div className=\"messages-container\">\n        {messages.length === 0 ? (\n          <div className=\"empty-messages\">\n            <p className=\"empty-title\">Сообщений нет.</p>\n            <p className=\"empty-subtitle\">Собеседник не видит эту переписку.</p>\n          </div>\n        ) : (\n          <div className=\"messages-list\">\n            {messages.map((message) => {\n              // Получаем ID пользователя из userData\n              const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n              let currentUserId = null;\n              if (userDataString) {\n                try {\n                  const userData = JSON.parse(userDataString);\n                  currentUserId = parseInt(userData.id);\n                } catch (error) {\n                  console.error('Ошибка парсинга userData:', error);\n                }\n              }\n              \n              const messageSenderId = parseInt(message.sender);\n              const isMyMessage = messageSenderId === currentUserId;\n              \n              // Получаем информацию об отправителе\n              const senderInfo = message.sender_info || {};\n              const senderName = senderInfo.first_name && senderInfo.last_name \n                ? `${senderInfo.first_name} ${senderInfo.last_name}`\n                : senderInfo.first_name || senderInfo.username || 'Пользователь';\n              const senderAvatar = senderInfo.avatar || '/images/default-avatar.svg';\n\n              return (\n                <div key={message.id} className={`message ${isMyMessage ? 'my-message' : 'incoming-message'}`}>\n                  {!isMyMessage && (\n                    <div className=\"message-avatar\">\n                      <img \n                        src={senderAvatar} \n                        alt={senderName}\n                        onError={(e) => {\n                          e.target.src = '/images/default-avatar.png';\n                        }}\n                      />\n                    </div>\n                  )}\n                  <div className=\"message-wrapper\">\n                    {!isMyMessage && (\n                      <div className=\"message-sender-name\">{senderName}</div>\n                    )}\n                    <div className=\"message-content\" style={isMyMessage ? {backgroundColor: '#007bff', color: 'white'} : {backgroundColor: '#ffffff', color: 'black'}}>\n                      <p>{message.content}</p>\n                      <span className=\"message-time\">\n                        {new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        })}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            \n            {/* Индикатор печати */}\n            {isTyping && typingUser && (\n              <div className=\"typing-indicator\">\n                <div className=\"typing-dots\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n                <span className=\"typing-text\">{typingUser} печатает...</span>\n              </div>\n            )}\n            \n            {/* Элемент для автоматической прокрутки */}\n            <div ref={messagesEndRef} />\n          </div>\n        )}\n      </div>\n\n      <div className=\"message-input-container\">\n        <div className=\"message-input-wrapper\">\n          <input\n            type=\"text\"\n            className=\"message-input\"\n            placeholder=\"Ваше сообщение\"\n            value={newMessage}\n            onChange={handleInputChange}\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(e)}\n          />\n          <button \n            className=\"send-button\" \n            onClick={handleSendMessage}\n            disabled={!newMessage.trim() || loading}\n          >\n            <FontAwesomeIcon icon={faPaperPlane} />\n            <span>Отправить</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}