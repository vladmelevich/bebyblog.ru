{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ArchivePage\\\\ArchivePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookmark, faUser, faMapMarkerAlt, faCalendar, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport './ArchivePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchivePage = () => {\n  _s();\n  const [archivedPosts, setArchivedPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Отладочная информация о пользователе\n    const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userData) {\n      try {\n        const user = JSON.parse(userData);\n        console.log('👤 Текущий пользователь в ArchivePage:', user);\n\n        // Проверяем, что пользователь \"владиславмелевич\"\n        if (user.username === 'владиславмелевич') {\n          console.log('✅ Правильный пользователь!');\n        } else {\n          console.log('❌ Неправильный пользователь! Нужно войти под \"владиславмелевич\"');\n        }\n      } catch (e) {\n        console.log('❌ Ошибка парсинга данных пользователя:', e);\n      }\n    } else {\n      console.log('❌ Данные пользователя не найдены в ArchivePage');\n    }\n\n    // Сначала попробуем получить токен, затем загрузить архив\n    getTokenAndLoadArchive();\n  }, []);\n  const getTokenAndLoadArchive = async () => {\n    try {\n      // Пытаемся получить токен для пользователя владиславмелевич\n      const response = await fetch('http://localhost:8000/api/users/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: 'владиславмелевич',\n          password: '123456'\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('accessToken', data.access);\n        localStorage.setItem('userData', JSON.stringify(data.user));\n        console.log('✅ Получен новый токен');\n        fetchArchivedPosts();\n      } else {\n        console.log('❌ Не удалось получить токен, пробуем загрузить архив с текущим токеном');\n        fetchArchivedPosts();\n      }\n    } catch (error) {\n      console.log('❌ Ошибка получения токена:', error);\n      fetchArchivedPosts();\n    }\n  };\n  const fetchArchivedPosts = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n\n      // Проверяем токен и получаем информацию о пользователе\n      if (token) {\n        try {\n          const userResponse = await fetch('http://localhost:8000/api/users/profile/', {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (userResponse.ok) {\n            const userData = await userResponse.json();\n            console.log('👤 Текущий авторизованный пользователь:', userData);\n          } else {\n            console.log('❌ Ошибка получения профиля пользователя:', userResponse.status);\n          }\n        } catch (error) {\n          console.log('❌ Ошибка при проверке пользователя:', error);\n        }\n      }\n      console.log('🔍 Загрузка архива...');\n      console.log('🔑 Токен:', token ? `Есть (${token.substring(0, 20)}...)` : 'Нет');\n\n      // Проверяем данные пользователя\n      const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n      if (userData) {\n        try {\n          const user = JSON.parse(userData);\n          console.log('👤 Текущий пользователь:', user);\n        } catch (e) {\n          console.log('❌ Ошибка парсинга данных пользователя:', e);\n        }\n      } else {\n        console.log('❌ Данные пользователя не найдены');\n      }\n      if (!token) {\n        setError('Необходима авторизация');\n        setLoading(false);\n        return;\n      }\n      console.log('🔗 Отправляем запрос к API архива...');\n      const response = await fetch('http://localhost:8000/api/users/archive/', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Статус ответа:', response.status);\n      console.log('Заголовки ответа:', response.headers);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('✅ Данные от API:', data);\n        console.log('📊 Количество постов:', data.results ? data.results.length : 0);\n        if (data.results && data.results.length > 0) {\n          console.log('📋 Посты в архиве:');\n          data.results.forEach((post, index) => {\n            var _post$author;\n            console.log(`  ${index + 1}. \"${post.title}\" (ID: ${post.id})`);\n            console.log(`     Автор: ${((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || 'Неизвестно'}`);\n          });\n        } else {\n          console.log('📭 Архив пуст или данные не получены');\n        }\n        setArchivedPosts(data.results || []);\n      } else {\n        const errorText = await response.text();\n        console.error('❌ Ошибка API:', response.status, errorText);\n        setError('Ошибка загрузки архива');\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки архива:', error);\n      setError('Ошибка загрузки архива');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    } catch (error) {\n      return 'Недавно';\n    }\n  };\n  const getAuthorInitials = author => {\n    if (!author) return 'А';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\n  };\n  const getUserAvatarUrl = userData => {\n    if (userData.avatar) return userData.avatar;\n    const initials = getAuthorInitials(userData);\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0430\\u0440\\u0445\\u0438\\u0432\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchArchivedPosts,\n        className: \"btn-retry\",\n        children: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"archive-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumbs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"breadcrumbs\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"breadcrumb-link\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          className: \"breadcrumb-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-link active\",\n          children: \"\\u0410\\u0440\\u0445\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive-title\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBookmark,\n          className: \"archive-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041C\\u043E\\u0439 \\u0430\\u0440\\u0445\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"archive-description\",\n        children: \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u0441\\u043E\\u0431\\u0440\\u0430\\u043D\\u044B \\u0432\\u0441\\u0435 \\u043F\\u043E\\u0441\\u0442\\u044B, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0435 \\u0432\\u044B \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438 \\u0434\\u043B\\u044F \\u0441\\u0435\\u0431\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u041E\\u0442\\u043B\\u0430\\u0434\\u043A\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 14\n          }, this), \" \\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430 (F12) \\u0434\\u043B\\u044F \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0439 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchArchivedPosts,\n        className: \"refresh-btn\",\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0440\\u0445\\u0438\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Очищаем данные пользователя и перенаправляем на логин\n          localStorage.removeItem('userData');\n          localStorage.removeItem('accessToken');\n          sessionStorage.removeItem('userData');\n          sessionStorage.removeItem('accessToken');\n          window.location.href = '/login';\n        },\n        className: \"login-btn\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u043F\\u043E\\u0434 \\u0432\\u043B\\u0430\\u0434\\u0438\\u0441\\u043B\\u0430\\u0432\\u043C\\u0435\\u043B\\u0435\\u0432\\u0438\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Принудительно устанавливаем данные пользователя владиславмелевич\n          const userData = {\n            id: 5,\n            username: 'владиславмелевич',\n            first_name: 'Владислав',\n            last_name: 'Мелевич',\n            email: 'vladislav@example.com'\n          };\n          localStorage.setItem('userData', JSON.stringify(userData));\n          // Обновляем страницу\n          window.location.reload();\n        },\n        className: \"force-login-btn\",\n        children: \"\\u041F\\u0440\\u0438\\u043D\\u0443\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0432\\u043E\\u0439\\u0442\\u0438 \\u043A\\u0430\\u043A \\u0432\\u043B\\u0430\\u0434\\u0438\\u0441\\u043B\\u0430\\u0432\\u043C\\u0435\\u043B\\u0435\\u0432\\u0438\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Принудительно показываем тестовые посты\n          const testPosts = [{\n            id: 12,\n            title: 'Выходные и муж!!!!!!!!!!',\n            slug: 'post-1',\n            content: 'Тестовый контент',\n            short_description: 'Описание поста',\n            status: 'published',\n            created_at: '2025-08-31T22:42:39.719329Z',\n            published_at: '2025-08-31T22:42:39.719329Z',\n            author: {\n              id: 5,\n              first_name: 'Владислав',\n              last_name: 'Мелевич',\n              username: 'владиславмелевич',\n              avatar: null,\n              city: 'Минск'\n            },\n            category: {\n              id: 1,\n              name: 'Зачатие',\n              slug: 'zachatie'\n            },\n            archived_at: '2025-08-31T22:42:39.719329Z'\n          }, {\n            id: 11,\n            title: 'Зачатие',\n            slug: 'post-11',\n            content: 'Тестовый контент',\n            short_description: 'Описание поста',\n            status: 'published',\n            created_at: '2025-08-31T22:42:39.719329Z',\n            published_at: '2025-08-31T22:42:39.719329Z',\n            author: {\n              id: 4,\n              first_name: 'Юлия',\n              last_name: 'Мелевич',\n              username: 'юлиямелевич',\n              avatar: null,\n              city: 'Минск'\n            },\n            category: {\n              id: 1,\n              name: 'Зачатие',\n              slug: 'zachatie'\n            },\n            archived_at: '2025-08-31T22:42:39.719329Z'\n          }];\n          setArchivedPosts(testPosts);\n          console.log('✅ Принудительно установлены тестовые посты');\n        },\n        className: \"test-posts-btn\",\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u043F\\u043E\\u0441\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            // Пытаемся получить токен для пользователя владиславмелевич\n            const response = await fetch('http://localhost:8000/api/users/login/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: 'владиславмелевич',\n                password: '123456' // Попробуем другой пароль\n              })\n            });\n            if (response.ok) {\n              const data = await response.json();\n              localStorage.setItem('accessToken', data.access);\n              localStorage.setItem('userData', JSON.stringify(data.user));\n              console.log('✅ Успешный вход под владиславмелевич');\n              window.location.reload();\n            } else {\n              console.log('❌ Ошибка входа:', response.status);\n              // Попробуем другой пароль\n              const response2 = await fetch('http://localhost:8000/api/users/login/', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: 'владиславмелевич',\n                  password: 'password' // Еще один вариант\n                })\n              });\n              if (response2.ok) {\n                const data2 = await response2.json();\n                localStorage.setItem('accessToken', data2.access);\n                localStorage.setItem('userData', JSON.stringify(data2.user));\n                console.log('✅ Успешный вход под владиславмелевич (второй пароль)');\n                window.location.reload();\n              } else {\n                console.log('❌ Ошибка входа с вторым паролем:', response2.status);\n              }\n            }\n          } catch (error) {\n            console.log('❌ Ошибка при попытке входа:', error);\n          }\n        },\n        className: \"login-api-btn\",\n        children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0442\\u043E\\u043A\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-content\",\n      children: archivedPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive-empty\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBookmark,\n          className: \"empty-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0410\\u0440\\u0445\\u0438\\u0432 \\u043F\\u0443\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u044B \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u043F\\u043E\\u0441\\u0442\\u0430 \\u0432 \\u0430\\u0440\\u0445\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts\",\n          className: \"btn-browse-posts\",\n          children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archived-posts-grid\",\n        children: archivedPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"archived-post-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-avatar\",\n                children: [post.author.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: post.author.avatar,\n                  alt: post.author.first_name,\n                  onError: e => {\n                    e.target.style.display = 'none';\n                    e.target.nextSibling.style.display = 'flex';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-initials\",\n                  style: {\n                    display: post.author.avatar ? 'none' : 'flex'\n                  },\n                  children: getAuthorInitials(post.author)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-name\",\n                  children: [post.author.first_name, \" \", post.author.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"post-time\",\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faCalendar\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 27\n                    }, this), formatDate(post.created_at)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"post-location\",\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faMapMarkerAlt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 27\n                    }, this), post.author.city || 'Не указан']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"post-title\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/post-detail/${post.slug}`,\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this), post.category && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-category\",\n              children: post.category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 21\n            }, this), post.short_description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-excerpt\",\n              children: post.short_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-actions\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/post-detail/${post.slug}`,\n                className: \"read-more\",\n                children: \"\\u0427\\u0438\\u0442\\u0430\\u0442\\u044C \\u0434\\u0430\\u043B\\u0435\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"archived-date\",\n                children: [\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u043E: \", formatDate(post.archived_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchivePage, \"NibEE20+yZ8PVwdyPUlLAfxV2X4=\");\n_c = ArchivePage;\nexport default ArchivePage;\nvar _c;\n$RefreshReg$(_c, \"ArchivePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","FontAwesomeIcon","faBookmark","faUser","faMapMarkerAlt","faCalendar","faArrowLeft","jsxDEV","_jsxDEV","ArchivePage","_s","archivedPosts","setArchivedPosts","loading","setLoading","error","setError","userData","localStorage","getItem","sessionStorage","user","JSON","parse","console","log","username","e","getTokenAndLoadArchive","response","fetch","method","headers","body","stringify","password","ok","data","json","setItem","access","fetchArchivedPosts","token","userResponse","status","substring","results","length","forEach","post","index","_post$author","title","id","author","errorText","text","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getAuthorInitials","firstName","first_name","lastName","last_name","charAt","toUpperCase","getUserAvatarUrl","avatar","initials","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","icon","removeItem","window","location","href","email","reload","testPosts","slug","content","short_description","created_at","published_at","city","category","name","archived_at","response2","data2","map","src","alt","onError","target","style","display","nextSibling","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ArchivePage/ArchivePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faBookmark, \r\n  faUser, \r\n  faMapMarkerAlt, \r\n  faCalendar,\r\n  faArrowLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './ArchivePage.css';\r\n\r\nconst ArchivePage = () => {\r\n  const [archivedPosts, setArchivedPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Отладочная информация о пользователе\r\n    const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\r\n    if (userData) {\r\n      try {\r\n        const user = JSON.parse(userData);\r\n        console.log('👤 Текущий пользователь в ArchivePage:', user);\r\n        \r\n        // Проверяем, что пользователь \"владиславмелевич\"\r\n        if (user.username === 'владиславмелевич') {\r\n          console.log('✅ Правильный пользователь!');\r\n        } else {\r\n          console.log('❌ Неправильный пользователь! Нужно войти под \"владиславмелевич\"');\r\n        }\r\n      } catch (e) {\r\n        console.log('❌ Ошибка парсинга данных пользователя:', e);\r\n      }\r\n    } else {\r\n      console.log('❌ Данные пользователя не найдены в ArchivePage');\r\n    }\r\n    \r\n    // Сначала попробуем получить токен, затем загрузить архив\r\n    getTokenAndLoadArchive();\r\n  }, []);\r\n\r\n  const getTokenAndLoadArchive = async () => {\r\n    try {\r\n      // Пытаемся получить токен для пользователя владиславмелевич\r\n      const response = await fetch('http://localhost:8000/api/users/login/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: 'владиславмелевич',\r\n          password: '123456'\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('accessToken', data.access);\r\n        localStorage.setItem('userData', JSON.stringify(data.user));\r\n        console.log('✅ Получен новый токен');\r\n        fetchArchivedPosts();\r\n      } else {\r\n        console.log('❌ Не удалось получить токен, пробуем загрузить архив с текущим токеном');\r\n        fetchArchivedPosts();\r\n      }\r\n    } catch (error) {\r\n      console.log('❌ Ошибка получения токена:', error);\r\n      fetchArchivedPosts();\r\n    }\r\n  };\r\n\r\n  const fetchArchivedPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      \r\n      // Проверяем токен и получаем информацию о пользователе\r\n      if (token) {\r\n        try {\r\n          const userResponse = await fetch('http://localhost:8000/api/users/profile/', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          \r\n          if (userResponse.ok) {\r\n            const userData = await userResponse.json();\r\n            console.log('👤 Текущий авторизованный пользователь:', userData);\r\n          } else {\r\n            console.log('❌ Ошибка получения профиля пользователя:', userResponse.status);\r\n          }\r\n        } catch (error) {\r\n          console.log('❌ Ошибка при проверке пользователя:', error);\r\n        }\r\n      }\r\n      \r\n      console.log('🔍 Загрузка архива...');\r\n      console.log('🔑 Токен:', token ? `Есть (${token.substring(0, 20)}...)` : 'Нет');\r\n      \r\n      // Проверяем данные пользователя\r\n      const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\r\n      if (userData) {\r\n        try {\r\n          const user = JSON.parse(userData);\r\n          console.log('👤 Текущий пользователь:', user);\r\n        } catch (e) {\r\n          console.log('❌ Ошибка парсинга данных пользователя:', e);\r\n        }\r\n      } else {\r\n        console.log('❌ Данные пользователя не найдены');\r\n      }\r\n      \r\n      if (!token) {\r\n        setError('Необходима авторизация');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('🔗 Отправляем запрос к API архива...');\r\n      const response = await fetch('http://localhost:8000/api/users/archive/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Статус ответа:', response.status);\r\n      console.log('Заголовки ответа:', response.headers);\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('✅ Данные от API:', data);\r\n        console.log('📊 Количество постов:', data.results ? data.results.length : 0);\r\n        \r\n        if (data.results && data.results.length > 0) {\r\n          console.log('📋 Посты в архиве:');\r\n          data.results.forEach((post, index) => {\r\n            console.log(`  ${index + 1}. \"${post.title}\" (ID: ${post.id})`);\r\n            console.log(`     Автор: ${post.author?.username || 'Неизвестно'}`);\r\n          });\r\n        } else {\r\n          console.log('📭 Архив пуст или данные не получены');\r\n        }\r\n        \r\n        setArchivedPosts(data.results || []);\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error('❌ Ошибка API:', response.status, errorText);\r\n        setError('Ошибка загрузки архива');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки архива:', error);\r\n      setError('Ошибка загрузки архива');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('ru-RU', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n    } catch (error) {\r\n      return 'Недавно';\r\n    }\r\n  };\r\n\r\n  const getAuthorInitials = (author) => {\r\n    if (!author) return 'А';\r\n    const firstName = author.first_name || '';\r\n    const lastName = author.last_name || '';\r\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\r\n  };\r\n\r\n  const getUserAvatarUrl = (userData) => {\r\n    if (userData.avatar) return userData.avatar;\r\n    const initials = getAuthorInitials(userData);\r\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"archive-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Загрузка архива...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"archive-error\">\r\n        <h2>Ошибка</h2>\r\n        <p>{error}</p>\r\n        <button onClick={fetchArchivedPosts} className=\"btn-retry\">\r\n          Попробовать снова\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"archive-page\">\r\n      {/* Хлебные крошки */}\r\n      <div className=\"breadcrumbs-container\">\r\n        <nav className=\"breadcrumbs\">\r\n          <Link to=\"/\" className=\"breadcrumb-link\">Главная</Link>\r\n          <FontAwesomeIcon icon={faArrowLeft} className=\"breadcrumb-separator\" />\r\n          <span className=\"breadcrumb-link active\">Архив</span>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Заголовок */}\r\n      <div className=\"archive-header\">\r\n        <div className=\"archive-title\">\r\n          <FontAwesomeIcon icon={faBookmark} className=\"archive-icon\" />\r\n          <h1>Мой архив</h1>\r\n        </div>\r\n        <p className=\"archive-description\">\r\n          Здесь собраны все посты, которые вы сохранили для себя\r\n        </p>\r\n        <div className=\"debug-info\">\r\n          <p><strong>Отладка:</strong> Проверьте консоль браузера (F12) для подробной информации</p>\r\n        </div>\r\n        <button onClick={fetchArchivedPosts} className=\"refresh-btn\">\r\n          Обновить архив\r\n        </button>\r\n        <button onClick={() => {\r\n          // Очищаем данные пользователя и перенаправляем на логин\r\n          localStorage.removeItem('userData');\r\n          localStorage.removeItem('accessToken');\r\n          sessionStorage.removeItem('userData');\r\n          sessionStorage.removeItem('accessToken');\r\n          window.location.href = '/login';\r\n        }} className=\"login-btn\">\r\n          Войти под владиславмелевич\r\n        </button>\r\n        <button onClick={() => {\r\n          // Принудительно устанавливаем данные пользователя владиславмелевич\r\n          const userData = {\r\n            id: 5,\r\n            username: 'владиславмелевич',\r\n            first_name: 'Владислав',\r\n            last_name: 'Мелевич',\r\n            email: 'vladislav@example.com'\r\n          };\r\n          localStorage.setItem('userData', JSON.stringify(userData));\r\n          // Обновляем страницу\r\n          window.location.reload();\r\n        }} className=\"force-login-btn\">\r\n          Принудительно войти как владиславмелевич\r\n        </button>\r\n        <button onClick={() => {\r\n          // Принудительно показываем тестовые посты\r\n          const testPosts = [\r\n            {\r\n              id: 12,\r\n              title: 'Выходные и муж!!!!!!!!!!',\r\n              slug: 'post-1',\r\n              content: 'Тестовый контент',\r\n              short_description: 'Описание поста',\r\n              status: 'published',\r\n              created_at: '2025-08-31T22:42:39.719329Z',\r\n              published_at: '2025-08-31T22:42:39.719329Z',\r\n              author: {\r\n                id: 5,\r\n                first_name: 'Владислав',\r\n                last_name: 'Мелевич',\r\n                username: 'владиславмелевич',\r\n                avatar: null,\r\n                city: 'Минск'\r\n              },\r\n              category: {\r\n                id: 1,\r\n                name: 'Зачатие',\r\n                slug: 'zachatie'\r\n              },\r\n              archived_at: '2025-08-31T22:42:39.719329Z'\r\n            },\r\n            {\r\n              id: 11,\r\n              title: 'Зачатие',\r\n              slug: 'post-11',\r\n              content: 'Тестовый контент',\r\n              short_description: 'Описание поста',\r\n              status: 'published',\r\n              created_at: '2025-08-31T22:42:39.719329Z',\r\n              published_at: '2025-08-31T22:42:39.719329Z',\r\n              author: {\r\n                id: 4,\r\n                first_name: 'Юлия',\r\n                last_name: 'Мелевич',\r\n                username: 'юлиямелевич',\r\n                avatar: null,\r\n                city: 'Минск'\r\n              },\r\n              category: {\r\n                id: 1,\r\n                name: 'Зачатие',\r\n                slug: 'zachatie'\r\n              },\r\n              archived_at: '2025-08-31T22:42:39.719329Z'\r\n            }\r\n          ];\r\n          setArchivedPosts(testPosts);\r\n          console.log('✅ Принудительно установлены тестовые посты');\r\n        }} className=\"test-posts-btn\">\r\n          Показать тестовые посты\r\n        </button>\r\n        <button onClick={async () => {\r\n          try {\r\n            // Пытаемся получить токен для пользователя владиславмелевич\r\n            const response = await fetch('http://localhost:8000/api/users/login/', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({\r\n                username: 'владиславмелевич',\r\n                password: '123456' // Попробуем другой пароль\r\n              })\r\n            });\r\n            \r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              localStorage.setItem('accessToken', data.access);\r\n              localStorage.setItem('userData', JSON.stringify(data.user));\r\n              console.log('✅ Успешный вход под владиславмелевич');\r\n              window.location.reload();\r\n            } else {\r\n              console.log('❌ Ошибка входа:', response.status);\r\n              // Попробуем другой пароль\r\n              const response2 = await fetch('http://localhost:8000/api/users/login/', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  username: 'владиславмелевич',\r\n                  password: 'password' // Еще один вариант\r\n                })\r\n              });\r\n              \r\n              if (response2.ok) {\r\n                const data2 = await response2.json();\r\n                localStorage.setItem('accessToken', data2.access);\r\n                localStorage.setItem('userData', JSON.stringify(data2.user));\r\n                console.log('✅ Успешный вход под владиславмелевич (второй пароль)');\r\n                window.location.reload();\r\n              } else {\r\n                console.log('❌ Ошибка входа с вторым паролем:', response2.status);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.log('❌ Ошибка при попытке входа:', error);\r\n          }\r\n        }} className=\"login-api-btn\">\r\n          Получить новый токен\r\n        </button>\r\n      </div>\r\n\r\n      {/* Список постов */}\r\n      <div className=\"archive-content\">\r\n        {archivedPosts.length === 0 ? (\r\n          <div className=\"archive-empty\">\r\n            <FontAwesomeIcon icon={faBookmark} className=\"empty-icon\" />\r\n            <h3>Архив пуст</h3>\r\n            <p>Вы пока не сохранили ни одного поста в архив</p>\r\n            <Link to=\"/posts\" className=\"btn-browse-posts\">\r\n              Просмотреть посты\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"archived-posts-grid\">\r\n            {archivedPosts.map((post) => (\r\n              <div key={post.id} className=\"archived-post-card\">\r\n                <div className=\"post-header\">\r\n                  <div className=\"author-info\">\r\n                    <div className=\"author-avatar\">\r\n                      {post.author.avatar ? (\r\n                        <img \r\n                          src={post.author.avatar} \r\n                          alt={post.author.first_name}\r\n                          onError={(e) => {\r\n                            e.target.style.display = 'none';\r\n                            e.target.nextSibling.style.display = 'flex';\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                      <div className=\"author-initials\" style={{ \r\n                        display: post.author.avatar ? 'none' : 'flex' \r\n                      }}>\r\n                        {getAuthorInitials(post.author)}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"author-details\">\r\n                      <div className=\"author-name\">\r\n                        {post.author.first_name} {post.author.last_name}\r\n                      </div>\r\n                      <div className=\"post-meta\">\r\n                        <span className=\"post-time\">\r\n                          <FontAwesomeIcon icon={faCalendar} />\r\n                          {formatDate(post.created_at)}\r\n                        </span>\r\n                        <span className=\"post-location\">\r\n                          <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n                          {post.author.city || 'Не указан'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"post-content\">\r\n                  <h3 className=\"post-title\">\r\n                    <Link to={`/post-detail/${post.slug}`}>\r\n                      {post.title}\r\n                    </Link>\r\n                  </h3>\r\n                  \r\n                  {post.category && (\r\n                    <div className=\"post-category\">\r\n                      {post.category.name}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {post.short_description && (\r\n                    <p className=\"post-excerpt\">\r\n                      {post.short_description}\r\n                    </p>\r\n                  )}\r\n                  \r\n                  <div className=\"post-actions\">\r\n                    <Link to={`/post-detail/${post.slug}`} className=\"read-more\">\r\n                      Читать далее\r\n                    </Link>\r\n                    <span className=\"archived-date\">\r\n                      Сохранено: {formatDate(post.archived_at)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchivePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}