{"ast":null,"code":"// Утилита для работы с пользователями\n\n// Получить информацию о пользователе по ID\nexport const getUserInfo = async userId => {\n  try {\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n    if (!token) {\n      return {\n        id: userId,\n        name: `Пользователь ${userId}`,\n        avatar: null\n      };\n    }\n    const response = await fetch(`http://localhost:8000/api/users/profile/${userId}/`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      var _data$user, _data$user2, _data$user3;\n      const data = await response.json();\n      return {\n        id: userId,\n        name: ((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.first_name) || ((_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.username) || `Пользователь ${userId}`,\n        avatar: ((_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.avatar) || null\n      };\n    } else {\n      return {\n        id: userId,\n        name: `Пользователь ${userId}`,\n        avatar: null\n      };\n    }\n  } catch (error) {\n    console.error('Ошибка при получении информации о пользователе:', error);\n    return {\n      id: userId,\n      name: `Пользователь ${userId}`,\n      avatar: null\n    };\n  }\n};\n\n// Получить инициалы пользователя\nexport const getUserInitials = userName => {\n  var _names$, _names$2;\n  if (!userName) return 'А';\n  const names = userName.split(' ');\n  return `${((_names$ = names[0]) === null || _names$ === void 0 ? void 0 : _names$.charAt(0)) || 'А'}${((_names$2 = names[1]) === null || _names$2 === void 0 ? void 0 : _names$2.charAt(0)) || ''}`.toUpperCase();\n};\n\n// Форматировать дату\nexport const formatDate = dateString => {\n  if (!dateString) return 'Недавно';\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n  if (diffInHours < 1) return 'Только что';\n  if (diffInHours < 24) return `${diffInHours} ч назад`;\n  const diffInDays = Math.floor(diffInHours / 24);\n  if (diffInDays < 7) return `${diffInDays} дн назад`;\n  return date.toLocaleDateString('ru-RU');\n};","map":{"version":3,"names":["getUserInfo","userId","token","localStorage","getItem","sessionStorage","id","name","avatar","response","fetch","headers","ok","_data$user","_data$user2","_data$user3","data","json","user","first_name","username","error","console","getUserInitials","userName","_names$","_names$2","names","split","charAt","toUpperCase","formatDate","dateString","date","Date","now","diffInHours","Math","floor","diffInDays","toLocaleDateString"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/utils/userUtils.js"],"sourcesContent":["// Утилита для работы с пользователями\r\n\r\n// Получить информацию о пользователе по ID\r\nexport const getUserInfo = async (userId) => {\r\n  try {\r\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n    \r\n    if (!token) {\r\n      return {\r\n        id: userId,\r\n        name: `Пользователь ${userId}`,\r\n        avatar: null\r\n      };\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:8000/api/users/profile/${userId}/`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      return {\r\n        id: userId,\r\n        name: data.user?.first_name || data.user?.username || `Пользователь ${userId}`,\r\n        avatar: data.user?.avatar || null\r\n      };\r\n    } else {\r\n      return {\r\n        id: userId,\r\n        name: `Пользователь ${userId}`,\r\n        avatar: null\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка при получении информации о пользователе:', error);\r\n    return {\r\n      id: userId,\r\n      name: `Пользователь ${userId}`,\r\n      avatar: null\r\n    };\r\n  }\r\n};\r\n\r\n// Получить инициалы пользователя\r\nexport const getUserInitials = (userName) => {\r\n  if (!userName) return 'А';\r\n  const names = userName.split(' ');\r\n  return `${names[0]?.charAt(0) || 'А'}${names[1]?.charAt(0) || ''}`.toUpperCase();\r\n};\r\n\r\n// Форматировать дату\r\nexport const formatDate = (dateString) => {\r\n  if (!dateString) return 'Недавно';\r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\r\n  \r\n  if (diffInHours < 1) return 'Только что';\r\n  if (diffInHours < 24) return `${diffInHours} ч назад`;\r\n  \r\n  const diffInDays = Math.floor(diffInHours / 24);\r\n  if (diffInDays < 7) return `${diffInDays} дн назад`;\r\n  \r\n  return date.toLocaleDateString('ru-RU');\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}