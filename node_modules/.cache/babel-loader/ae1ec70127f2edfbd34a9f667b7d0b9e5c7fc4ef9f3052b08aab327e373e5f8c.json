{"ast":null,"code":"// Утилита для работы с пользователями\n\n// Тестовая функция для получения моковых данных пользователя\nexport const getMockUserInfo = userId => {\n  console.log('Используем моковые данные для пользователя:', userId);\n  return {\n    id: userId,\n    name: `Тестовый пользователь ${userId}`,\n    avatar: null\n  };\n};\n\n// Получить информацию о пользователе по ID\nexport const getUserInfo = async userId => {\n  try {\n    console.log('Получаем информацию о пользователе:', userId);\n\n    // Для тестирования используем моковые данные\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Режим разработки, используем моковые данные');\n      return getMockUserInfo(userId);\n    }\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n    console.log('Токен найден:', !!token);\n    if (!token) {\n      console.log('Токен не найден, возвращаем базовую информацию');\n      return {\n        id: userId,\n        name: `Пользователь ${userId}`,\n        avatar: null\n      };\n    }\n    console.log('Делаем API-запрос к:', `http://localhost:8000/api/users/profile/${userId}/`);\n    const response = await fetch(`http://localhost:8000/api/users/profile/${userId}/`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Ответ API:', response.status, response.statusText);\n    if (response.ok) {\n      var _data$user, _data$user2, _data$user3;\n      const data = await response.json();\n      console.log('Данные пользователя:', data);\n      const userName = ((_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.first_name) || ((_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.username) || `Пользователь ${userId}`;\n      const userAvatar = ((_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.avatar) || null;\n      console.log('Имя пользователя:', userName);\n      console.log('Аватар пользователя:', userAvatar);\n      return {\n        id: userId,\n        name: userName,\n        avatar: userAvatar\n      };\n    } else {\n      console.log('API вернул ошибку, возвращаем базовую информацию');\n      return {\n        id: userId,\n        name: `Пользователь ${userId}`,\n        avatar: null\n      };\n    }\n  } catch (error) {\n    console.error('Ошибка при получении информации о пользователе:', error);\n    console.log('Возвращаем базовую информацию из-за ошибки');\n    return {\n      id: userId,\n      name: `Пользователь ${userId}`,\n      avatar: null\n    };\n  }\n};\n\n// Получить инициалы пользователя\nexport const getUserInitials = userName => {\n  var _names$, _names$2;\n  if (!userName) return 'А';\n  const names = userName.split(' ');\n  return `${((_names$ = names[0]) === null || _names$ === void 0 ? void 0 : _names$.charAt(0)) || 'А'}${((_names$2 = names[1]) === null || _names$2 === void 0 ? void 0 : _names$2.charAt(0)) || ''}`.toUpperCase();\n};\n\n// Форматировать дату\nexport const formatDate = dateString => {\n  if (!dateString) return 'Недавно';\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n  if (diffInHours < 1) return 'Только что';\n  if (diffInHours < 24) return `${diffInHours} ч назад`;\n  const diffInDays = Math.floor(diffInHours / 24);\n  if (diffInDays < 7) return `${diffInDays} дн назад`;\n  return date.toLocaleDateString('ru-RU');\n};","map":{"version":3,"names":["getMockUserInfo","userId","console","log","id","name","avatar","getUserInfo","process","env","NODE_ENV","token","localStorage","getItem","sessionStorage","response","fetch","headers","status","statusText","ok","_data$user","_data$user2","_data$user3","data","json","userName","user","first_name","username","userAvatar","error","getUserInitials","_names$","_names$2","names","split","charAt","toUpperCase","formatDate","dateString","date","Date","now","diffInHours","Math","floor","diffInDays","toLocaleDateString"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/utils/userUtils.js"],"sourcesContent":["// Утилита для работы с пользователями\r\n\r\n// Тестовая функция для получения моковых данных пользователя\r\nexport const getMockUserInfo = (userId) => {\r\n  console.log('Используем моковые данные для пользователя:', userId);\r\n  return {\r\n    id: userId,\r\n    name: `Тестовый пользователь ${userId}`,\r\n    avatar: null\r\n  };\r\n};\r\n\r\n// Получить информацию о пользователе по ID\r\nexport const getUserInfo = async (userId) => {\r\n  try {\r\n    console.log('Получаем информацию о пользователе:', userId);\r\n    \r\n    // Для тестирования используем моковые данные\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log('Режим разработки, используем моковые данные');\r\n      return getMockUserInfo(userId);\r\n    }\r\n    \r\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n    console.log('Токен найден:', !!token);\r\n    \r\n    if (!token) {\r\n      console.log('Токен не найден, возвращаем базовую информацию');\r\n      return {\r\n        id: userId,\r\n        name: `Пользователь ${userId}`,\r\n        avatar: null\r\n      };\r\n    }\r\n\r\n    console.log('Делаем API-запрос к:', `http://localhost:8000/api/users/profile/${userId}/`);\r\n    \r\n    const response = await fetch(`http://localhost:8000/api/users/profile/${userId}/`, {\r\n      headers: {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    console.log('Ответ API:', response.status, response.statusText);\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('Данные пользователя:', data);\r\n      \r\n      const userName = data.user?.first_name || data.user?.username || `Пользователь ${userId}`;\r\n      const userAvatar = data.user?.avatar || null;\r\n      \r\n      console.log('Имя пользователя:', userName);\r\n      console.log('Аватар пользователя:', userAvatar);\r\n      \r\n      return {\r\n        id: userId,\r\n        name: userName,\r\n        avatar: userAvatar\r\n      };\r\n    } else {\r\n      console.log('API вернул ошибку, возвращаем базовую информацию');\r\n      return {\r\n        id: userId,\r\n        name: `Пользователь ${userId}`,\r\n        avatar: null\r\n      };\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка при получении информации о пользователе:', error);\r\n    console.log('Возвращаем базовую информацию из-за ошибки');\r\n    return {\r\n      id: userId,\r\n      name: `Пользователь ${userId}`,\r\n      avatar: null\r\n    };\r\n  }\r\n};\r\n\r\n// Получить инициалы пользователя\r\nexport const getUserInitials = (userName) => {\r\n  if (!userName) return 'А';\r\n  const names = userName.split(' ');\r\n  return `${names[0]?.charAt(0) || 'А'}${names[1]?.charAt(0) || ''}`.toUpperCase();\r\n};\r\n\r\n// Форматировать дату\r\nexport const formatDate = (dateString) => {\r\n  if (!dateString) return 'Недавно';\r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\r\n  \r\n  if (diffInHours < 1) return 'Только что';\r\n  if (diffInHours < 24) return `${diffInHours} ч назад`;\r\n  \r\n  const diffInDays = Math.floor(diffInHours / 24);\r\n  if (diffInDays < 7) return `${diffInDays} дн назад`;\r\n  \r\n  return date.toLocaleDateString('ru-RU');\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}