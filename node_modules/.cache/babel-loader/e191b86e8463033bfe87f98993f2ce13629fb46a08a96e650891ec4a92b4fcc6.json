{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ChatPage\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faPaperPlane, faEdit, faTrash, faCheck, faTimes, faUser, faMessage } from '@fortawesome/free-solid-svg-icons';\nimport { getChat, saveMessage, updateMessage, deleteMessage } from '../../utils/chatStorage';\nimport { getUserInfo, getMockUserInfo, getUserInfoFromStorage } from '../../utils/userUtils';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const messagesEndRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Проверяем userId сразу при загрузке\n  console.log('ChatPage загружен с userId:', userId);\n  console.log('Тип userId:', typeof userId);\n  if (!userId) {\n    console.error('userId не найден в параметрах');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: ID \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Загружаем пользователя и сообщения\n  useEffect(() => {\n    const loadChat = async () => {\n      try {\n        console.log('Загружаем чат для пользователя:', userId);\n\n        // Загружаем существующие сообщения\n        const existingMessages = getChat(userId);\n        console.log('Существующие сообщения:', existingMessages);\n        setMessages(existingMessages);\n\n        // Получаем информацию о пользователе\n        console.log('Запрашиваем информацию о пользователе...');\n\n        // Сначала проверяем localStorage на наличие реальных данных\n        const storedUserInfo = getUserInfoFromStorage(userId);\n        if (storedUserInfo && storedUserInfo.name && storedUserInfo.name !== `Пользователь ${userId}`) {\n          console.log('Найдена реальная информация о пользователе в localStorage:', storedUserInfo);\n          setUser(storedUserInfo);\n          setIsLoading(false);\n          return;\n        }\n\n        // Если в localStorage нет реальных данных, делаем API-запрос\n        try {\n          const userInfo = await getUserInfo(userId);\n          console.log('Получена информация о пользователе через API:', userInfo);\n          if (userInfo && userInfo.name && userInfo.name !== `Пользователь ${userId}`) {\n            console.log('Используем реальные данные пользователя:', userInfo);\n            setUser(userInfo);\n          } else {\n            console.log('Реальные данные не получены, используем моковые данные');\n            const mockUserInfo = getMockUserInfo(userId);\n            setUser(mockUserInfo);\n          }\n        } catch (apiError) {\n          console.error('Ошибка API, используем моковые данные:', apiError);\n          const mockUserInfo = getMockUserInfo(userId);\n          setUser(mockUserInfo);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Ошибка при загрузке чата:', error);\n        // Fallback на моковые данные\n        const fallbackUser = getMockUserInfo(userId);\n        console.log('Используем fallback информацию:', fallbackUser);\n        setUser(fallbackUser);\n        setIsLoading(false);\n      }\n    };\n    loadChat();\n  }, [userId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const messageData = {\n        text: newMessage.trim(),\n        sender: 'user'\n      };\n\n      // Сохраняем сообщение в localStorage\n      const savedMessage = saveMessage(userId, messageData);\n      if (savedMessage) {\n        setMessages(prev => [...prev, savedMessage]);\n        setNewMessage('');\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleEditMessage = messageId => {\n    const message = messages.find(msg => msg.id === messageId);\n    if (message) {\n      setEditingMessageId(messageId);\n      setEditText(message.text);\n    }\n  };\n  const handleSaveEdit = () => {\n    if (editText.trim() && editingMessageId) {\n      // Обновляем сообщение в localStorage\n      const success = updateMessage(userId, editingMessageId, editText.trim());\n      if (success) {\n        setMessages(prev => prev.map(msg => msg.id === editingMessageId ? {\n          ...msg,\n          text: editText.trim(),\n          isEdited: true,\n          editedAt: new Date().toISOString()\n        } : msg));\n        setEditingMessageId(null);\n        setEditText('');\n      }\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingMessageId(null);\n    setEditText('');\n  };\n  const handleDeleteMessage = messageId => {\n    if (window.confirm('Вы уверены, что хотите удалить это сообщение?')) {\n      // Удаляем сообщение из localStorage\n      const success = deleteMessage(userId, messageId);\n      if (success) {\n        setMessages(prev => prev.filter(msg => msg.id !== messageId));\n      }\n    }\n  };\n  const handleUseMockData = () => {\n    console.log('Принудительно используем моковые данные');\n    const mockUserInfo = getMockUserInfo(userId);\n    console.log('Созданные моковые данные:', mockUserInfo);\n    setUser(mockUserInfo);\n  };\n  const handleClearStorage = () => {\n    console.log('Очищаем localStorage для пользователя:', userId);\n    try {\n      const storedUsers = localStorage.getItem('userProfiles');\n      if (storedUsers) {\n        const users = JSON.parse(storedUsers);\n        delete users[userId];\n        localStorage.setItem('userProfiles', JSON.stringify(users));\n        console.log('localStorage очищен для пользователя:', userId);\n      }\n    } catch (error) {\n      console.error('Ошибка при очистке localStorage:', error);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    const date = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === today.toDateString()) {\n      return 'Сегодня';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Вчера';\n    } else {\n      return date.toLocaleDateString('ru-RU');\n    }\n  };\n  if (isLoading) {\n    console.log('Состояние загрузки: isLoading = true');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0447\\u0430\\u0442\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('Рендерим чат. Состояние пользователя:', user);\n  console.log('Состояние загрузки: isLoading = false');\n  console.log('Тип данных пользователя:', typeof user);\n  console.log('ID пользователя:', user === null || user === void 0 ? void 0 : user.id);\n  console.log('Имя пользователя:', user === null || user === void 0 ? void 0 : user.name);\n  console.log('Город пользователя:', user === null || user === void 0 ? void 0 : user.city);\n\n  // Проверяем, что у нас есть информация о пользователе\n  if (!user) {\n    console.log('Информация о пользователе отсутствует, показываем загрузку');\n    // Fallback на моковые данные прямо в рендере\n    const fallbackUser = getMockUserInfo(userId);\n    console.log('Используем fallback в рендере:', fallbackUser);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUser(fallbackUser),\n        style: {\n          marginTop: '20px',\n          padding: '10px 20px',\n          background: '#667eea',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          cursor: 'pointer'\n        },\n        children: \"\\u041F\\u0440\\u0438\\u043D\\u0443\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'rgba(255, 255, 255, 0.9)',\n        padding: '10px',\n        margin: '10px',\n        borderRadius: '8px',\n        fontSize: '12px',\n        color: '#333'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u041E\\u0442\\u043B\\u0430\\u0434\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), \" userId=\", userId, \", user=\", JSON.stringify(user), \", isLoading=\", isLoading.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: [console.log('Рендерим аватар пользователя:', user === null || user === void 0 ? void 0 : user.avatar), console.log('Тип аватара:', typeof (user === null || user === void 0 ? void 0 : user.avatar)), user !== null && user !== void 0 && user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-placeholder\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"user-name\",\n            children: [console.log('Рендерим имя пользователя:', user === null || user === void 0 ? void 0 : user.name), console.log('Тип имени:', typeof (user === null || user === void 0 ? void 0 : user.name)), (user === null || user === void 0 ? void 0 : user.name) || 'Загрузка...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), (user === null || user === void 0 ? void 0 : user.city) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-city\",\n            children: [\"\\uD83D\\uDCCD \", user.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: '#666',\n              fontSize: '12px'\n            },\n            children: [\"ID: \", user === null || user === void 0 ? void 0 : user.id, \" | \\u0418\\u043C\\u044F: \", user === null || user === void 0 ? void 0 : user.name, \" | \\u0413\\u043E\\u0440\\u043E\\u0434: \", user === null || user === void 0 ? void 0 : user.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: '#999',\n              fontSize: '10px',\n              display: 'block',\n              marginTop: '2px'\n            },\n            children: [\"\\u0422\\u0438\\u043F \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445: \", typeof user, \" | JSON: \", JSON.stringify(user)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUseMockData,\n              style: {\n                marginTop: '5px',\n                padding: '2px 8px',\n                fontSize: '10px',\n                background: '#667eea',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u043C\\u043E\\u043A\\u043E\\u0432\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClearStorage,\n              style: {\n                marginTop: '5px',\n                padding: '2px 8px',\n                fontSize: '10px',\n                background: '#e74c3c',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C localStorage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-chat-icon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0427\\u0430\\u0442 \\u043F\\u0443\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u0433\\u043E\\u0432\\u043E\\u0440, \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0432 \\u043F\\u0435\\u0440\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user-message' : 'other-message'}`,\n          children: editingMessageId === message.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-message-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"edit-textarea\",\n              value: editText,\n              onChange: e => setEditText(e.target.value),\n              placeholder: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn save-btn\",\n                onClick: handleSaveEdit,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn cancel-btn\",\n                onClick: handleCancelEdit,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this), message.isEdited && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edited-indicator\",\n                children: \"(\\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u043E)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: formatTime(message.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 21\n            }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn edit-btn\",\n                onClick: () => handleEditMessage(message.id),\n                title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEdit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn delete-btn\",\n                onClick: () => handleDeleteMessage(message.id),\n                title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"message-input\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !newMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"vOFVrmKqaRFuweakJpDm1qMSMHc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","FontAwesomeIcon","faArrowLeft","faPaperPlane","faEdit","faTrash","faCheck","faTimes","faUser","faMessage","getChat","saveMessage","updateMessage","deleteMessage","getUserInfo","getMockUserInfo","getUserInfoFromStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","userId","navigate","messagesEndRef","messages","setMessages","newMessage","setNewMessage","editingMessageId","setEditingMessageId","editText","setEditText","user","setUser","isLoading","setIsLoading","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","loadChat","existingMessages","storedUserInfo","name","userInfo","mockUserInfo","apiError","fallbackUser","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","messageData","text","sender","savedMessage","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleEditMessage","messageId","message","find","msg","id","handleSaveEdit","success","map","isEdited","editedAt","Date","toISOString","handleCancelEdit","handleDeleteMessage","window","confirm","filter","handleUseMockData","handleClearStorage","storedUsers","localStorage","getItem","users","JSON","parse","setItem","stringify","formatTime","timestamp","date","toLocaleTimeString","hour","minute","formatDate","today","yesterday","setDate","getDate","toDateString","toLocaleDateString","city","style","marginTop","padding","background","color","border","borderRadius","cursor","margin","fontSize","toString","icon","avatar","src","alt","display","process","env","NODE_ENV","length","value","onChange","target","placeholder","autoFocus","title","ref","onKeyPress","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ChatPage/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faArrowLeft, \r\n  faPaperPlane, \r\n  faEdit, \r\n  faTrash, \r\n  faCheck, \r\n  faTimes,\r\n  faUser,\r\n  faMessage\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { getChat, saveMessage, updateMessage, deleteMessage } from '../../utils/chatStorage';\r\nimport { getUserInfo, getMockUserInfo, getUserInfoFromStorage } from '../../utils/userUtils';\r\nimport './ChatPage.css';\r\n\r\nconst ChatPage = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const messagesEndRef = useRef(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [editingMessageId, setEditingMessageId] = useState(null);\r\n  const [editText, setEditText] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Проверяем userId сразу при загрузке\r\n  console.log('ChatPage загружен с userId:', userId);\r\n  console.log('Тип userId:', typeof userId);\r\n  \r\n  if (!userId) {\r\n    console.error('userId не найден в параметрах');\r\n    return (\r\n      <div className=\"chat-loading\">\r\n        <p>Ошибка: ID пользователя не найден</p>\r\n        <button onClick={() => navigate(-1)}>Вернуться назад</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Загружаем пользователя и сообщения\r\n  useEffect(() => {\r\n    const loadChat = async () => {\r\n      try {\r\n        console.log('Загружаем чат для пользователя:', userId);\r\n        \r\n        // Загружаем существующие сообщения\r\n        const existingMessages = getChat(userId);\r\n        console.log('Существующие сообщения:', existingMessages);\r\n        setMessages(existingMessages);\r\n\r\n        // Получаем информацию о пользователе\r\n        console.log('Запрашиваем информацию о пользователе...');\r\n        \r\n        // Сначала проверяем localStorage на наличие реальных данных\r\n        const storedUserInfo = getUserInfoFromStorage(userId);\r\n        if (storedUserInfo && storedUserInfo.name && storedUserInfo.name !== `Пользователь ${userId}`) {\r\n          console.log('Найдена реальная информация о пользователе в localStorage:', storedUserInfo);\r\n          setUser(storedUserInfo);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Если в localStorage нет реальных данных, делаем API-запрос\r\n        try {\r\n          const userInfo = await getUserInfo(userId);\r\n          console.log('Получена информация о пользователе через API:', userInfo);\r\n          \r\n          if (userInfo && userInfo.name && userInfo.name !== `Пользователь ${userId}`) {\r\n            console.log('Используем реальные данные пользователя:', userInfo);\r\n            setUser(userInfo);\r\n          } else {\r\n            console.log('Реальные данные не получены, используем моковые данные');\r\n            const mockUserInfo = getMockUserInfo(userId);\r\n            setUser(mockUserInfo);\r\n          }\r\n        } catch (apiError) {\r\n          console.error('Ошибка API, используем моковые данные:', apiError);\r\n          const mockUserInfo = getMockUserInfo(userId);\r\n          setUser(mockUserInfo);\r\n        }\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке чата:', error);\r\n        // Fallback на моковые данные\r\n        const fallbackUser = getMockUserInfo(userId);\r\n        console.log('Используем fallback информацию:', fallbackUser);\r\n        setUser(fallbackUser);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadChat();\r\n  }, [userId]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      const messageData = {\r\n        text: newMessage.trim(),\r\n        sender: 'user'\r\n      };\r\n\r\n      // Сохраняем сообщение в localStorage\r\n      const savedMessage = saveMessage(userId, messageData);\r\n      \r\n      if (savedMessage) {\r\n        setMessages(prev => [...prev, savedMessage]);\r\n        setNewMessage('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleEditMessage = (messageId) => {\r\n    const message = messages.find(msg => msg.id === messageId);\r\n    if (message) {\r\n      setEditingMessageId(messageId);\r\n      setEditText(message.text);\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    if (editText.trim() && editingMessageId) {\r\n      // Обновляем сообщение в localStorage\r\n      const success = updateMessage(userId, editingMessageId, editText.trim());\r\n      \r\n      if (success) {\r\n        setMessages(prev => prev.map(msg => \r\n          msg.id === editingMessageId \r\n            ? { ...msg, text: editText.trim(), isEdited: true, editedAt: new Date().toISOString() }\r\n            : msg\r\n        ));\r\n        setEditingMessageId(null);\r\n        setEditText('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingMessageId(null);\r\n    setEditText('');\r\n  };\r\n\r\n  const handleDeleteMessage = (messageId) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить это сообщение?')) {\r\n      // Удаляем сообщение из localStorage\r\n      const success = deleteMessage(userId, messageId);\r\n      \r\n      if (success) {\r\n        setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUseMockData = () => {\r\n    console.log('Принудительно используем моковые данные');\r\n    const mockUserInfo = getMockUserInfo(userId);\r\n    console.log('Созданные моковые данные:', mockUserInfo);\r\n    setUser(mockUserInfo);\r\n  };\r\n\r\n  const handleClearStorage = () => {\r\n    console.log('Очищаем localStorage для пользователя:', userId);\r\n    try {\r\n      const storedUsers = localStorage.getItem('userProfiles');\r\n      if (storedUsers) {\r\n        const users = JSON.parse(storedUsers);\r\n        delete users[userId];\r\n        localStorage.setItem('userProfiles', JSON.stringify(users));\r\n        console.log('localStorage очищен для пользователя:', userId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при очистке localStorage:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString('ru-RU', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Сегодня';\r\n    } else if (date.toDateString() === yesterday.toDateString()) {\r\n      return 'Вчера';\r\n    } else {\r\n      return date.toLocaleDateString('ru-RU');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    console.log('Состояние загрузки: isLoading = true');\r\n    return (\r\n      <div className=\"chat-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Загрузка чата...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log('Рендерим чат. Состояние пользователя:', user);\r\n  console.log('Состояние загрузки: isLoading = false');\r\n  console.log('Тип данных пользователя:', typeof user);\r\n  console.log('ID пользователя:', user?.id);\r\n  console.log('Имя пользователя:', user?.name);\r\n  console.log('Город пользователя:', user?.city);\r\n\r\n  // Проверяем, что у нас есть информация о пользователе\r\n  if (!user) {\r\n    console.log('Информация о пользователе отсутствует, показываем загрузку');\r\n    // Fallback на моковые данные прямо в рендере\r\n    const fallbackUser = getMockUserInfo(userId);\r\n    console.log('Используем fallback в рендере:', fallbackUser);\r\n    return (\r\n      <div className=\"chat-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Загрузка информации о пользователе...</p>\r\n        <button \r\n          onClick={() => setUser(fallbackUser)}\r\n          style={{ \r\n            marginTop: '20px', \r\n            padding: '10px 20px', \r\n            background: '#667eea', \r\n            color: 'white', \r\n            border: 'none', \r\n            borderRadius: '8px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Принудительно загрузить данные\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      {/* Отладочная информация вверху */}\r\n      <div style={{ \r\n        background: 'rgba(255, 255, 255, 0.9)', \r\n        padding: '10px', \r\n        margin: '10px', \r\n        borderRadius: '8px',\r\n        fontSize: '12px',\r\n        color: '#333'\r\n      }}>\r\n        <strong>Отладка:</strong> userId={userId}, user={JSON.stringify(user)}, isLoading={isLoading.toString()}\r\n      </div>\r\n      \r\n      {/* Заголовок чата */}\r\n      <div className=\"chat-header\">\r\n        <button className=\"back-button\" onClick={() => navigate(-1)}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n        </button>\r\n        \r\n        <div className=\"chat-user-info\">\r\n          <div className=\"user-avatar\">\r\n            {console.log('Рендерим аватар пользователя:', user?.avatar)}\r\n            {console.log('Тип аватара:', typeof user?.avatar)}\r\n            {user?.avatar ? (\r\n              <img src={user.avatar} alt={user.name} />\r\n            ) : (\r\n              <div className=\"avatar-placeholder\">\r\n                <FontAwesomeIcon icon={faUser} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"user-details\">\r\n            <h3 className=\"user-name\">\r\n              {console.log('Рендерим имя пользователя:', user?.name)}\r\n              {console.log('Тип имени:', typeof user?.name)}\r\n              {user?.name || 'Загрузка...'}\r\n            </h3>\r\n            {user?.city && (\r\n              <span className=\"user-city\">\r\n                📍 {user.city}\r\n              </span>\r\n            )}\r\n            {/* Отладочная информация всегда видна */}\r\n            <small style={{ color: '#666', fontSize: '12px' }}>\r\n              ID: {user?.id} | Имя: {user?.name} | Город: {user?.city}\r\n            </small>\r\n            <small style={{ color: '#999', fontSize: '10px', display: 'block', marginTop: '2px' }}>\r\n              Тип данных: {typeof user} | JSON: {JSON.stringify(user)}\r\n            </small>\r\n            {process.env.NODE_ENV === 'development' && (\r\n              <>\r\n                <button \r\n                  onClick={handleUseMockData}\r\n                  style={{ \r\n                    marginTop: '5px', \r\n                    padding: '2px 8px', \r\n                    fontSize: '10px', \r\n                    background: '#667eea', \r\n                    color: 'white', \r\n                    border: 'none', \r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  Использовать моковые данные\r\n                </button>\r\n                <button \r\n                  onClick={handleClearStorage}\r\n                  style={{ \r\n                    marginTop: '5px', \r\n                    padding: '2px 8px', \r\n                    fontSize: '10px', \r\n                    background: '#e74c3c', \r\n                    color: 'white', \r\n                    border: 'none', \r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  Очистить localStorage\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Контейнер сообщений */}\r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"empty-chat\">\r\n            <div className=\"empty-chat-icon\">\r\n              <FontAwesomeIcon icon={faMessage} />\r\n            </div>\r\n            <h3>Чат пуст</h3>\r\n            <p>Начните разговор, отправив первое сообщение</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"messages-list\">\r\n            {messages.map((message) => (\r\n              <div key={message.id} className={`message ${message.sender === 'user' ? 'user-message' : 'other-message'}`}>\r\n                {editingMessageId === message.id ? (\r\n                  <div className=\"edit-message-form\">\r\n                    <textarea\r\n                      className=\"edit-textarea\"\r\n                      value={editText}\r\n                      onChange={(e) => setEditText(e.target.value)}\r\n                      placeholder=\"Редактировать сообщение...\"\r\n                      autoFocus\r\n                    />\r\n                    <div className=\"edit-actions\">\r\n                      <button \r\n                        className=\"edit-btn save-btn\" \r\n                        onClick={handleSaveEdit}\r\n                      >\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                      </button>\r\n                      <button \r\n                        className=\"edit-btn cancel-btn\" \r\n                        onClick={handleCancelEdit}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"message-content\">\r\n                      <p className=\"message-text\">{message.text}</p>\r\n                      {message.isEdited && (\r\n                        <span className=\"edited-indicator\">(изменено)</span>\r\n                      )}\r\n                      <div className=\"message-meta\">\r\n                        <span className=\"message-time\">{formatTime(message.timestamp)}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Кнопки действий для сообщений пользователя */}\r\n                    {message.sender === 'user' && (\r\n                      <div className=\"message-actions\">\r\n                        <button \r\n                          className=\"action-btn edit-btn\" \r\n                          onClick={() => handleEditMessage(message.id)}\r\n                          title=\"Редактировать\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faEdit} />\r\n                        </button>\r\n                        <button \r\n                          className=\"action-btn delete-btn\" \r\n                          onClick={() => handleDeleteMessage(message.id)}\r\n                          title=\"Удалить\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Форма ввода сообщения */}\r\n      <div className=\"message-input-container\">\r\n        <div className=\"message-input-wrapper\">\r\n          <textarea\r\n            className=\"message-input\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Введите сообщение...\"\r\n            rows=\"1\"\r\n          />\r\n          <button \r\n            className=\"send-button\" \r\n            onClick={handleSendMessage}\r\n            disabled={!newMessage.trim()}\r\n          >\r\n            <FontAwesomeIcon icon={faPaperPlane} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}