{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\NotificationPanel\\\\NotificationPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faTimes, faUserPlus, faComments, faHeart, faComment, faCheck, faEye } from '@fortawesome/free-solid-svg-icons';\nimport './NotificationPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationPanel = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const panelRef = useRef(null);\n  useEffect(() => {\n    loadNotifications();\n    // Обновляем уведомления каждые 30 секунд\n    const interval = setInterval(loadNotifications, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    // Закрываем панель при клике вне её\n    const handleClickOutside = event => {\n      if (panelRef.current && !panelRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen]);\n  const isLoggedIn = () => {\n    return !!(localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken'));\n  };\n  const getAuthHeaders = () => {\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n    return {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n  };\n  const loadNotifications = async () => {\n    if (!isLoggedIn()) return;\n    try {\n      const response = await fetch('http://localhost:8000/api/users/notifications/', {\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setNotifications(data.notifications || []);\n        setUnreadCount(data.unread_count || 0);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки уведомлений:', error);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      const response = await fetch(`http://localhost:8000/api/users/notifications/${notificationId}/read/`, {\n        method: 'POST',\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        setNotifications(prev => prev.map(notification => notification.id === notificationId ? {\n          ...notification,\n          is_read: true\n        } : notification));\n        setUnreadCount(prev => Math.max(0, prev - 1));\n      }\n    } catch (error) {\n      console.error('Ошибка отметки уведомления:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/users/notifications/mark-all-read/', {\n        method: 'POST',\n        headers: getAuthHeaders()\n      });\n      if (response.ok) {\n        setNotifications(prev => prev.map(notification => ({\n          ...notification,\n          is_read: true\n        })));\n        setUnreadCount(0);\n      }\n    } catch (error) {\n      console.error('Ошибка отметки всех уведомлений:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'follow':\n        return faUserPlus;\n      case 'message':\n        return faComments;\n      case 'like':\n        return faHeart;\n      case 'comment':\n        return faComment;\n      default:\n        return faBell;\n    }\n  };\n  const getNotificationText = notification => {\n    var _notification$sender, _notification$sender2;\n    const senderName = ((_notification$sender = notification.sender) === null || _notification$sender === void 0 ? void 0 : _notification$sender.full_name) || ((_notification$sender2 = notification.sender) === null || _notification$sender2 === void 0 ? void 0 : _notification$sender2.username) || 'Пользователь';\n    switch (notification.notification_type) {\n      case 'follow':\n        return `${senderName} подписался на вас`;\n      case 'message':\n        return `${senderName} отправил вам сообщение`;\n      case 'like':\n        return `${senderName} поставил лайк вашему посту`;\n      case 'comment':\n        return `${senderName} прокомментировал ваш пост`;\n      default:\n        return notification.message || 'Новое уведомление';\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Только что';\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\n    if (diffInHours < 1) return 'Только что';\n    if (diffInHours < 24) return `${diffInHours} ч назад`;\n    const diffInDays = Math.floor(diffInHours / 24);\n    if (diffInDays < 7) return `${diffInDays} дн назад`;\n    return date.toLocaleDateString('ru-RU');\n  };\n  const handleNotificationClick = notification => {\n    var _notification$sender3;\n    if (!notification.is_read) {\n      markAsRead(notification.id);\n    }\n\n    // Закрываем панель\n    setIsOpen(false);\n\n    // Здесь можно добавить переход к профилю или посту\n    if ((_notification$sender3 = notification.sender) !== null && _notification$sender3 !== void 0 && _notification$sender3.id) {\n      window.location.href = `/user/${notification.sender.id}`;\n    }\n  };\n  if (!isLoggedIn()) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-panel-container\",\n    ref: panelRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-trigger\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faBell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-actions\",\n          children: [unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mark-all-read-btn\",\n            onClick: markAllAsRead,\n            disabled: loading,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this), \"\\u0412\\u0441\\u0435 \\u043F\\u0440\\u043E\\u0447\\u0438\\u0442\\u0430\\u043D\\u043E\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setIsOpen(false),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-list\",\n        children: notifications.length > 0 ? notifications.slice(0, 10).map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.is_read ? 'unread' : ''}`,\n          onClick: () => handleNotificationClick(notification),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-icon\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: getNotificationIcon(notification.notification_type)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-text\",\n              children: getNotificationText(notification)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-time\",\n              children: formatDate(notification.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this), !notification.is_read && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unread-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this)]\n        }, notification.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-notifications\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faBell\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0439 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), notifications.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"view-all-btn\",\n          children: [\"\\u041F\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C \\u0432\\u0441\\u0435 (\", notifications.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationPanel, \"oknnvEfpzPzeYrGcJkGAu5B3R9s=\");\n_c = NotificationPanel;\nexport default NotificationPanel;\nvar _c;\n$RefreshReg$(_c, \"NotificationPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faBell","faTimes","faUserPlus","faComments","faHeart","faComment","faCheck","faEye","jsxDEV","_jsxDEV","NotificationPanel","_s","isOpen","setIsOpen","notifications","setNotifications","unreadCount","setUnreadCount","loading","setLoading","panelRef","loadNotifications","interval","setInterval","clearInterval","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","isLoggedIn","localStorage","getItem","sessionStorage","getAuthHeaders","token","response","fetch","headers","ok","data","json","unread_count","error","console","markAsRead","notificationId","method","prev","map","notification","id","is_read","Math","max","markAllAsRead","getNotificationIcon","type","getNotificationText","_notification$sender","_notification$sender2","senderName","sender","full_name","username","notification_type","message","formatDate","dateString","date","Date","now","diffInHours","floor","diffInDays","toLocaleDateString","handleNotificationClick","_notification$sender3","window","location","href","className","ref","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","slice","created_at","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/NotificationPanel/NotificationPanel.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faBell,\r\n  faTimes,\r\n  faUserPlus,\r\n  faComments,\r\n  faHeart,\r\n  faComment,\r\n  faCheck,\r\n  faEye\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './NotificationPanel.css';\r\n\r\nconst NotificationPanel = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const panelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    loadNotifications();\r\n    // Обновляем уведомления каждые 30 секунд\r\n    const interval = setInterval(loadNotifications, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Закрываем панель при клике вне её\r\n    const handleClickOutside = (event) => {\r\n      if (panelRef.current && !panelRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  const isLoggedIn = () => {\r\n    return !!(localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken'));\r\n  };\r\n\r\n  const getAuthHeaders = () => {\r\n    const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    };\r\n  };\r\n\r\n  const loadNotifications = async () => {\r\n    if (!isLoggedIn()) return;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/users/notifications/', {\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setNotifications(data.notifications || []);\r\n        setUnreadCount(data.unread_count || 0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки уведомлений:', error);\r\n    }\r\n  };\r\n\r\n  const markAsRead = async (notificationId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8000/api/users/notifications/${notificationId}/read/`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setNotifications(prev => \r\n          prev.map(notification => \r\n            notification.id === notificationId \r\n              ? { ...notification, is_read: true }\r\n              : notification\r\n          )\r\n        );\r\n        setUnreadCount(prev => Math.max(0, prev - 1));\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отметки уведомления:', error);\r\n    }\r\n  };\r\n\r\n  const markAllAsRead = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/users/notifications/mark-all-read/', {\r\n        method: 'POST',\r\n        headers: getAuthHeaders()\r\n      });\r\n      \r\n      if (response.ok) {\r\n        setNotifications(prev => \r\n          prev.map(notification => ({ ...notification, is_read: true }))\r\n        );\r\n        setUnreadCount(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отметки всех уведомлений:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getNotificationIcon = (type) => {\r\n    switch (type) {\r\n      case 'follow':\r\n        return faUserPlus;\r\n      case 'message':\r\n        return faComments;\r\n      case 'like':\r\n        return faHeart;\r\n      case 'comment':\r\n        return faComment;\r\n      default:\r\n        return faBell;\r\n    }\r\n  };\r\n\r\n  const getNotificationText = (notification) => {\r\n    const senderName = notification.sender?.full_name || notification.sender?.username || 'Пользователь';\r\n    \r\n    switch (notification.notification_type) {\r\n      case 'follow':\r\n        return `${senderName} подписался на вас`;\r\n      case 'message':\r\n        return `${senderName} отправил вам сообщение`;\r\n      case 'like':\r\n        return `${senderName} поставил лайк вашему посту`;\r\n      case 'comment':\r\n        return `${senderName} прокомментировал ваш пост`;\r\n      default:\r\n        return notification.message || 'Новое уведомление';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'Только что';\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffInHours = Math.floor((now - date) / (1000 * 60 * 60));\r\n    \r\n    if (diffInHours < 1) return 'Только что';\r\n    if (diffInHours < 24) return `${diffInHours} ч назад`;\r\n    \r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    if (diffInDays < 7) return `${diffInDays} дн назад`;\r\n    \r\n    return date.toLocaleDateString('ru-RU');\r\n  };\r\n\r\n  const handleNotificationClick = (notification) => {\r\n    if (!notification.is_read) {\r\n      markAsRead(notification.id);\r\n    }\r\n    \r\n    // Закрываем панель\r\n    setIsOpen(false);\r\n    \r\n    // Здесь можно добавить переход к профилю или посту\r\n    if (notification.sender?.id) {\r\n      window.location.href = `/user/${notification.sender.id}`;\r\n    }\r\n  };\r\n\r\n  if (!isLoggedIn()) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"notification-panel-container\" ref={panelRef}>\r\n      {/* Кнопка уведомлений */}\r\n      <button \r\n        className=\"notification-trigger\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <FontAwesomeIcon icon={faBell} />\r\n        {unreadCount > 0 && (\r\n          <span className=\"notification-badge\">{unreadCount}</span>\r\n        )}\r\n      </button>\r\n\r\n      {/* Панель уведомлений */}\r\n      {isOpen && (\r\n        <div className=\"notification-panel\">\r\n          <div className=\"notification-header\">\r\n            <h3>Уведомления</h3>\r\n            <div className=\"notification-actions\">\r\n              {unreadCount > 0 && (\r\n                <button \r\n                  className=\"mark-all-read-btn\"\r\n                  onClick={markAllAsRead}\r\n                  disabled={loading}\r\n                >\r\n                  <FontAwesomeIcon icon={faCheck} />\r\n                  Все прочитано\r\n                </button>\r\n              )}\r\n              <button \r\n                className=\"close-btn\"\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"notification-list\">\r\n            {notifications.length > 0 ? (\r\n              notifications.slice(0, 10).map((notification) => (\r\n                <div \r\n                  key={notification.id} \r\n                  className={`notification-item ${!notification.is_read ? 'unread' : ''}`}\r\n                  onClick={() => handleNotificationClick(notification)}\r\n                >\r\n                  <div className=\"notification-icon\">\r\n                    <FontAwesomeIcon icon={getNotificationIcon(notification.notification_type)} />\r\n                  </div>\r\n                  <div className=\"notification-content\">\r\n                    <div className=\"notification-text\">\r\n                      {getNotificationText(notification)}\r\n                    </div>\r\n                    <div className=\"notification-time\">\r\n                      {formatDate(notification.created_at)}\r\n                    </div>\r\n                  </div>\r\n                  {!notification.is_read && (\r\n                    <div className=\"unread-indicator\"></div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"empty-notifications\">\r\n                <FontAwesomeIcon icon={faBell} />\r\n                <p>Уведомлений пока нет</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {notifications.length > 10 && (\r\n            <div className=\"notification-footer\">\r\n              <button className=\"view-all-btn\">\r\n                Посмотреть все ({notifications.length})\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,KAAK,QACA,mCAAmC;AAC1C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMwB,QAAQ,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdwB,iBAAiB,CAAC,CAAC;IACnB;IACA,MAAMC,QAAQ,GAAGC,WAAW,CAACF,iBAAiB,EAAE,KAAK,CAAC;IACtD,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACd;IACA,MAAM4B,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIN,QAAQ,CAACO,OAAO,IAAI,CAACP,QAAQ,CAACO,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAChEhB,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IAED,IAAID,MAAM,EAAE;MACVkB,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC5D;IAEA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,MAAMqB,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAO,CAAC,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,aAAa,CAAC,CAAC;EACzF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,aAAa,CAAC;IAC1F,OAAO;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUG,KAAK;IAClC,CAAC;EACH,CAAC;EAED,MAAMjB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACY,UAAU,CAAC,CAAC,EAAE;IAEnB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,EAAE;QAC7EC,OAAO,EAAEJ,cAAc,CAAC;MAC1B,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC7B,gBAAgB,CAAC4B,IAAI,CAAC7B,aAAa,IAAI,EAAE,CAAC;QAC1CG,cAAc,CAAC0B,IAAI,CAACE,YAAY,IAAI,CAAC,CAAC;MACxC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,cAAc,IAAK;IAC3C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiDS,cAAc,QAAQ,EAAE;QACpGC,MAAM,EAAE,MAAM;QACdT,OAAO,EAAEJ,cAAc,CAAC;MAC1B,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACG,EAAE,EAAE;QACf3B,gBAAgB,CAACoC,IAAI,IACnBA,IAAI,CAACC,GAAG,CAACC,YAAY,IACnBA,YAAY,CAACC,EAAE,KAAKL,cAAc,GAC9B;UAAE,GAAGI,YAAY;UAAEE,OAAO,EAAE;QAAK,CAAC,GAClCF,YACN,CACF,CAAC;QACDpC,cAAc,CAACkC,IAAI,IAAIK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,IAAI,GAAG,CAAC,CAAC,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCvC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMoB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8D,EAAE;QAC3FU,MAAM,EAAE,MAAM;QACdT,OAAO,EAAEJ,cAAc,CAAC;MAC1B,CAAC,CAAC;MAEF,IAAIE,QAAQ,CAACG,EAAE,EAAE;QACf3B,gBAAgB,CAACoC,IAAI,IACnBA,IAAI,CAACC,GAAG,CAACC,YAAY,KAAK;UAAE,GAAGA,YAAY;UAAEE,OAAO,EAAE;QAAK,CAAC,CAAC,CAC/D,CAAC;QACDtC,cAAc,CAAC,CAAC,CAAC;MACnB;IACF,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMwC,mBAAmB,GAAIC,IAAI,IAAK;IACpC,QAAQA,IAAI;MACV,KAAK,QAAQ;QACX,OAAO1D,UAAU;MACnB,KAAK,SAAS;QACZ,OAAOC,UAAU;MACnB,KAAK,MAAM;QACT,OAAOC,OAAO;MAChB,KAAK,SAAS;QACZ,OAAOC,SAAS;MAClB;QACE,OAAOL,MAAM;IACjB;EACF,CAAC;EAED,MAAM6D,mBAAmB,GAAIR,YAAY,IAAK;IAAA,IAAAS,oBAAA,EAAAC,qBAAA;IAC5C,MAAMC,UAAU,GAAG,EAAAF,oBAAA,GAAAT,YAAY,CAACY,MAAM,cAAAH,oBAAA,uBAAnBA,oBAAA,CAAqBI,SAAS,OAAAH,qBAAA,GAAIV,YAAY,CAACY,MAAM,cAAAF,qBAAA,uBAAnBA,qBAAA,CAAqBI,QAAQ,KAAI,cAAc;IAEpG,QAAQd,YAAY,CAACe,iBAAiB;MACpC,KAAK,QAAQ;QACX,OAAO,GAAGJ,UAAU,oBAAoB;MAC1C,KAAK,SAAS;QACZ,OAAO,GAAGA,UAAU,yBAAyB;MAC/C,KAAK,MAAM;QACT,OAAO,GAAGA,UAAU,6BAA6B;MACnD,KAAK,SAAS;QACZ,OAAO,GAAGA,UAAU,4BAA4B;MAClD;QACE,OAAOX,YAAY,CAACgB,OAAO,IAAI,mBAAmB;IACtD;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,YAAY;IACpC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,MAAMG,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;IACtB,MAAME,WAAW,GAAGnB,IAAI,CAACoB,KAAK,CAAC,CAACF,GAAG,GAAGF,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAE/D,IAAIG,WAAW,GAAG,CAAC,EAAE,OAAO,YAAY;IACxC,IAAIA,WAAW,GAAG,EAAE,EAAE,OAAO,GAAGA,WAAW,UAAU;IAErD,MAAME,UAAU,GAAGrB,IAAI,CAACoB,KAAK,CAACD,WAAW,GAAG,EAAE,CAAC;IAC/C,IAAIE,UAAU,GAAG,CAAC,EAAE,OAAO,GAAGA,UAAU,WAAW;IAEnD,OAAOL,IAAI,CAACM,kBAAkB,CAAC,OAAO,CAAC;EACzC,CAAC;EAED,MAAMC,uBAAuB,GAAI1B,YAAY,IAAK;IAAA,IAAA2B,qBAAA;IAChD,IAAI,CAAC3B,YAAY,CAACE,OAAO,EAAE;MACzBP,UAAU,CAACK,YAAY,CAACC,EAAE,CAAC;IAC7B;;IAEA;IACAzC,SAAS,CAAC,KAAK,CAAC;;IAEhB;IACA,KAAAmE,qBAAA,GAAI3B,YAAY,CAACY,MAAM,cAAAe,qBAAA,eAAnBA,qBAAA,CAAqB1B,EAAE,EAAE;MAC3B2B,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,SAAS9B,YAAY,CAACY,MAAM,CAACX,EAAE,EAAE;IAC1D;EACF,CAAC;EAED,IAAI,CAACrB,UAAU,CAAC,CAAC,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,oBACExB,OAAA;IAAK2E,SAAS,EAAC,8BAA8B;IAACC,GAAG,EAAEjE,QAAS;IAAAkE,QAAA,gBAE1D7E,OAAA;MACE2E,SAAS,EAAC,sBAAsB;MAChCG,OAAO,EAAEA,CAAA,KAAM1E,SAAS,CAAC,CAACD,MAAM,CAAE;MAAA0E,QAAA,gBAElC7E,OAAA,CAACV,eAAe;QAACyF,IAAI,EAAExF;MAAO;QAAAyF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChC5E,WAAW,GAAG,CAAC,iBACdP,OAAA;QAAM2E,SAAS,EAAC,oBAAoB;QAAAE,QAAA,EAAEtE;MAAW;QAAAyE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACzD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,EAGRhF,MAAM,iBACLH,OAAA;MAAK2E,SAAS,EAAC,oBAAoB;MAAAE,QAAA,gBACjC7E,OAAA;QAAK2E,SAAS,EAAC,qBAAqB;QAAAE,QAAA,gBAClC7E,OAAA;UAAA6E,QAAA,EAAI;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBnF,OAAA;UAAK2E,SAAS,EAAC,sBAAsB;UAAAE,QAAA,GAClCtE,WAAW,GAAG,CAAC,iBACdP,OAAA;YACE2E,SAAS,EAAC,mBAAmB;YAC7BG,OAAO,EAAE7B,aAAc;YACvBmC,QAAQ,EAAE3E,OAAQ;YAAAoE,QAAA,gBAElB7E,OAAA,CAACV,eAAe;cAACyF,IAAI,EAAElF;YAAQ;cAAAmF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,6EAEpC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACDnF,OAAA;YACE2E,SAAS,EAAC,WAAW;YACrBG,OAAO,EAAEA,CAAA,KAAM1E,SAAS,CAAC,KAAK,CAAE;YAAAyE,QAAA,eAEhC7E,OAAA,CAACV,eAAe;cAACyF,IAAI,EAAEvF;YAAQ;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnF,OAAA;QAAK2E,SAAS,EAAC,mBAAmB;QAAAE,QAAA,EAC/BxE,aAAa,CAACgF,MAAM,GAAG,CAAC,GACvBhF,aAAa,CAACiF,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC3C,GAAG,CAAEC,YAAY,iBAC1C5C,OAAA;UAEE2E,SAAS,EAAE,qBAAqB,CAAC/B,YAAY,CAACE,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;UACxEgC,OAAO,EAAEA,CAAA,KAAMR,uBAAuB,CAAC1B,YAAY,CAAE;UAAAiC,QAAA,gBAErD7E,OAAA;YAAK2E,SAAS,EAAC,mBAAmB;YAAAE,QAAA,eAChC7E,OAAA,CAACV,eAAe;cAACyF,IAAI,EAAE7B,mBAAmB,CAACN,YAAY,CAACe,iBAAiB;YAAE;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC,eACNnF,OAAA;YAAK2E,SAAS,EAAC,sBAAsB;YAAAE,QAAA,gBACnC7E,OAAA;cAAK2E,SAAS,EAAC,mBAAmB;cAAAE,QAAA,EAC/BzB,mBAAmB,CAACR,YAAY;YAAC;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,eACNnF,OAAA;cAAK2E,SAAS,EAAC,mBAAmB;cAAAE,QAAA,EAC/BhB,UAAU,CAACjB,YAAY,CAAC2C,UAAU;YAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACL,CAACvC,YAAY,CAACE,OAAO,iBACpB9C,OAAA;YAAK2E,SAAS,EAAC;UAAkB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACxC;QAAA,GAjBIvC,YAAY,CAACC,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBjB,CACN,CAAC,gBAEFnF,OAAA;UAAK2E,SAAS,EAAC,qBAAqB;UAAAE,QAAA,gBAClC7E,OAAA,CAACV,eAAe;YAACyF,IAAI,EAAExF;UAAO;YAAAyF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjCnF,OAAA;YAAA6E,QAAA,EAAG;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAEL9E,aAAa,CAACgF,MAAM,GAAG,EAAE,iBACxBrF,OAAA;QAAK2E,SAAS,EAAC,qBAAqB;QAAAE,QAAA,eAClC7E,OAAA;UAAQ2E,SAAS,EAAC,cAAc;UAAAE,QAAA,GAAC,mFACf,EAACxE,aAAa,CAACgF,MAAM,EAAC,GACxC;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjF,EAAA,CA1PID,iBAAiB;AAAAuF,EAAA,GAAjBvF,iBAAiB;AA4PvB,eAAeA,iBAAiB;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}