{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\PostDetail\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../utils/profile';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faMapMarkerAlt, faCalendar, faShare, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport DeleteConfirmModal from './DeleteConfirmModal';\nimport ShareModal from './ShareModal';\nimport './PostDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  var _post$author2, _post$author3, _post$author4, _post$category, _post$comments;\n  const {\n    slug\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [replyTo, setReplyTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showShareModal, setShowShareModal] = useState(false);\n\n  // Вспомогательные функции\n  const getAuthorInitials = author => {\n    if (!author) return 'А';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\n  };\n  const getUserAvatarUrl = userData => {\n    // Сначала проверяем avatar_url, потом avatar, потом тестовую аватарку\n    if (userData.avatar_url) return userData.avatar_url;\n    if (userData.avatar) return userData.avatar;\n    // Создаем тестовую аватарку с инициалами пользователя\n    const initials = getAuthorInitials(userData);\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\n  };\n  const fetchPost = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Получаем токен авторизации\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n      const response = await fetch(`http://localhost:8000/api/posts/${slug}/`, {\n        headers: headers\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Загруженный пост:', data); // Для отладки\n        setPost(data);\n      } else {\n        console.error('Ошибка получения поста:', response.status, response.statusText);\n        setError('Пост не найден');\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки поста:', error);\n      setError('Ошибка загрузки поста');\n    } finally {\n      setLoading(false);\n    }\n  }, [slug]);\n  useEffect(() => {\n    // Проверяем slug перед выполнением любых действий\n    const problematicSlugs = ['post', 'api', 'admin', 'static', 'media', 'login', 'register', 'logout', 'create', 'edit', 'delete'];\n    if (slug && slug.trim() !== '' && !problematicSlugs.includes(slug)) {\n      fetchPost();\n    } else {\n      setError('Неверный адрес страницы');\n      setLoading(false);\n    }\n  }, [slug, fetchPost]);\n  const formatDate = dateString => {\n    try {\n      if (!dateString) {\n        return 'Недавно';\n      }\n      let date;\n\n      // Проверяем, если дата в формате \"DD.MM.YYYY\"\n      if (typeof dateString === 'string' && dateString.includes('.')) {\n        const parts = dateString.split('.');\n        if (parts.length === 3) {\n          const [day, month, year] = parts;\n          date = new Date(`${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`);\n        } else {\n          date = new Date(dateString);\n        }\n      } else {\n        date = new Date(dateString);\n      }\n      if (isNaN(date.getTime())) {\n        return 'Недавно';\n      }\n      const now = new Date();\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n      const diffInHours = Math.floor(diffInMinutes / 60);\n      const diffInDays = Math.floor(diffInHours / 24);\n      const diffInWeeks = Math.floor(diffInDays / 7);\n      const diffInMonths = Math.floor(diffInDays / 30);\n      if (diffInMinutes < 1) {\n        return 'Только что';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes} мин${diffInMinutes === 1 ? 'у' : diffInMinutes < 5 ? 'ы' : ''} назад`;\n      } else if (diffInHours < 24) {\n        return `${diffInHours} час${diffInHours === 1 ? '' : diffInHours < 5 ? 'а' : 'ов'} назад`;\n      } else if (diffInDays < 7) {\n        return `${diffInDays} дн${diffInDays === 1 ? 'ь' : diffInDays < 5 ? 'я' : 'ей'} назад`;\n      } else if (diffInWeeks < 4) {\n        return `${diffInWeeks} нед${diffInWeeks === 1 ? 'елю' : diffInWeeks < 5 ? 'ели' : 'ель'} назад`;\n      } else if (diffInMonths < 12) {\n        return `${diffInMonths} мес${diffInMonths === 1 ? 'яц' : diffInMonths < 5 ? 'яца' : 'яцев'} назад`;\n      } else {\n        const diffInYears = Math.floor(diffInMonths / 12);\n        return `${diffInYears} год${diffInYears === 1 ? '' : diffInYears < 5 ? 'а' : 'ов'} назад`;\n      }\n    } catch (error) {\n      return 'Недавно';\n    }\n  };\n  const getAuthorName = author => {\n    if (!author) return 'Автор';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    const fullName = `${firstName} ${lastName}`.trim();\n    return fullName || author.username || 'Автор';\n  };\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n    try {\n      setSubmitting(true);\n\n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n\n      // Проверяем, есть ли данные пользователя\n      if (!userData.id || !userData.first_name || !userData.last_name) {\n        console.error('Данные пользователя не найдены:', userData);\n        setError('Ошибка: данные пользователя не найдены. Попробуйте перезайти в аккаунт.');\n        return;\n      }\n      console.log('Данные пользователя из localStorage:', userData); // Для отладки\n\n      // Создаем новый комментарий локально для демонстрации\n      const newCommentObj = {\n        id: Date.now(),\n        // Временный ID\n        content: newComment,\n        author: {\n          id: userData.id,\n          first_name: userData.first_name,\n          last_name: userData.last_name,\n          username: userData.username,\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: null,\n        is_approved: true\n      };\n      console.log('Новый комментарий:', newCommentObj); // Для отладки\n\n      // Добавляем комментарий в начало массива, чтобы он отображался первым\n      setPost(prev => ({\n        ...prev,\n        comments: [newCommentObj, ...(prev.comments || [])]\n      }));\n      setNewComment('');\n\n      // Попытка отправить на сервер (если работает)\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: newComment,\n              parent: null\n            })\n          });\n          if (response.ok) {\n            console.log('Комментарий успешно отправлен на сервер');\n          } else {\n            console.log('Ошибка отправки на сервер, но комментарий добавлен локально');\n          }\n        }\n      } catch (serverError) {\n        console.log('Сервер недоступен, комментарий добавлен локально');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке комментария:', error);\n      setError('Ошибка при отправке комментария');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const handleSubmitReply = async (e, parentId) => {\n    e.preventDefault();\n    if (!replyText.trim()) return;\n    try {\n      setSubmitting(true);\n\n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n\n      // Проверяем, есть ли данные пользователя\n      if (!userData.id || !userData.first_name || !userData.last_name) {\n        console.error('Данные пользователя не найдены:', userData);\n        setError('Ошибка: данные пользователя не найдены. Попробуйте перезайти в аккаунт.');\n        return;\n      }\n\n      // Создаем новый ответ локально для демонстрации\n      const newReplyObj = {\n        id: Date.now(),\n        // Временный ID\n        content: replyText,\n        author: {\n          id: userData.id,\n          first_name: userData.first_name,\n          last_name: userData.last_name,\n          username: userData.username,\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: parentId,\n        is_approved: true\n      };\n\n      // Добавляем ответ к посту\n      setPost(prev => ({\n        ...prev,\n        comments: [...(prev.comments || []), newReplyObj]\n      }));\n      setReplyText('');\n      setReplyTo(null);\n\n      // Попытка отправить на сервер (если работает)\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: replyText,\n              parent: parentId\n            })\n          });\n          if (response.ok) {\n            console.log('Ответ успешно отправлен на сервер');\n          } else {\n            console.log('Ошибка отправки на сервер, но ответ добавлен локально');\n          }\n        }\n      } catch (serverError) {\n        console.log('Сервер недоступен, ответ добавлен локально');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке ответа:', error);\n      setError('Ошибка при отправке ответа');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const handleReplyClick = commentId => {\n    setReplyTo(replyTo === commentId ? null : commentId);\n    setReplyText('');\n  };\n  const handleEditPost = () => {\n    if (post && post.slug) {\n      navigate(`/edit-post/${post.slug}`);\n    }\n  };\n  const handleDeletePost = () => {\n    if (!post || !post.slug) {\n      setError('Ошибка: пост не найден');\n      return;\n    }\n    setShowDeleteModal(true);\n  };\n  const handleSharePost = () => {\n    setShowShareModal(true);\n  };\n  const confirmDeletePost = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/api/posts/${post.slug}/delete/`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        setShowDeleteModal(false);\n        navigate('/');\n      } else {\n        setError('Ошибка при удалении поста');\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении поста:', error);\n      setError('Ошибка при удалении поста');\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    // Добавляем класс для анимации удаления\n    const commentElement = document.querySelector(`[data-comment-id=\"${commentId}\"]`);\n    if (commentElement) {\n      commentElement.classList.add('deleting');\n    }\n\n    // Удаляем комментарий через небольшую задержку для анимации\n    setTimeout(() => {\n      setPost(prev => ({\n        ...prev,\n        comments: prev.comments.filter(comment => comment.id !== commentId && comment.parent !== commentId)\n      }));\n    }, 300);\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (token) {\n        const response = await fetch(`http://localhost:8000/api/posts/comments/${commentId}/delete/`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          console.log('Комментарий успешно удален на сервере');\n        } else {\n          console.log('Ошибка удаления комментария на сервере, но удален локально');\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении комментария:', error);\n      // Комментарий уже удален локально, так что ничего не делаем\n    }\n  };\n  const isLoggedIn = () => {\n    return !!(localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken'));\n  };\n  const isAuthor = () => {\n    if (!post || !isLoggedIn()) return false;\n    try {\n      var _post$author;\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n      return userData.id === ((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.id);\n    } catch (error) {\n      console.error('Ошибка при парсинге данных пользователя:', error);\n      return false;\n    }\n  };\n  const isMyComment = comment => {\n    try {\n      var _comment$author;\n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n      return ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.id) === userData.id;\n    } catch (error) {\n      console.error('Ошибка при парсинге данных пользователя:', error);\n      return false;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u043F\\u043E\\u0441\\u0442\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error || 'Пост не найден'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn-back\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u0433\\u043B\\u0430\\u0432\\u043D\\u0443\\u044E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"btn-back\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), \"\\u041D\\u0430\\u0437\\u0430\\u0434\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"post-article\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-author-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"author-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-avatar clickable\",\n              onClick: () => navigate(getProfileUrl(post.author.id)),\n              title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n              children: [(_post$author2 = post.author) !== null && _post$author2 !== void 0 && _post$author2.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.author.avatar_url,\n                alt: getAuthorName(post.author),\n                onError: e => {\n                  e.target.style.display = 'none';\n                  e.target.nextSibling.style.display = 'flex';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-initials\",\n                style: {\n                  display: (_post$author3 = post.author) !== null && _post$author3 !== void 0 && _post$author3.avatar_url ? 'none' : 'flex'\n                },\n                children: getAuthorInitials(post.author)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-name clickable\",\n                onClick: () => navigate(getProfileUrl(post.author.id)),\n                title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                children: getAuthorName(post.author)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"author-location\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faMapMarkerAlt\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 21\n                  }, this), ((_post$author4 = post.author) === null || _post$author4 === void 0 ? void 0 : _post$author4.city) || 'Москва']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"post-date\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCalendar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 21\n                  }, this), formatDate(post.published_at || post.created_at)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-title-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-title-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-title-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-category-display\",\n                \"data-category\": ((_post$category = post.category) === null || _post$category === void 0 ? void 0 : _post$category.name) || 'Общее',\n                children: post.status === 'draft' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"draft-badge\",\n                  children: \"\\u0427\\u0435\\u0440\\u043D\\u043E\\u0432\\u0438\\u043A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"post-title\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-actions-header\",\n              children: [isAuthor() && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-btn edit-btn\",\n                  onClick: handleEditPost,\n                  title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faEdit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-btn delete-btn\",\n                  onClick: handleDeletePost,\n                  title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTrash\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn share-btn\",\n                onClick: handleSharePost,\n                title: \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F \\u043F\\u043E\\u0441\\u0442\\u043E\\u043C\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faShare\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            dangerouslySetInnerHTML: {\n              __html: post.content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 12\n        }, this), (() => {\n          try {\n            var _post$author5;\n            const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n            return ((_post$author5 = post.author) === null || _post$author5 === void 0 ? void 0 : _post$author5.id) === userData.id;\n          } catch (error) {\n            return false;\n          }\n        })() && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-seo-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"SEO \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"seo-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seo-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meta Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.meta_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seo-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meta Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.meta_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seo-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Meta Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.meta_keywords\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), (post.comments_enabled === 'enabled' || post.comments_enabled === undefined) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-comments\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438 (\", ((_post$comments = post.comments) === null || _post$comments === void 0 ? void 0 : _post$comments.length) || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 18\n          }, this), isLoggedIn() ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmitComment,\n            className: \"comment-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-input-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: newComment,\n                onChange: e => setNewComment(e.target.value),\n                placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439...\",\n                className: \"comment-input\",\n                rows: \"3\",\n                disabled: submitting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-form-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn-submit-comment\",\n                disabled: !newComment.trim() || submitting,\n                children: submitting ? 'Отправка...' : 'Отправить'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-login-prompt\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0427\\u0442\\u043E\\u0431\\u044B \\u043E\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439, \\u043F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/auth\",\n                children: \"\\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 63\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 18\n          }, this), post.comments && post.comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-list\",\n            children: post.comments.filter(comment => !comment.parent) // Только основные комментарии\n            .map(comment => {\n              var _comment$author2, _comment$author3, _comment$author4;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment\",\n                \"data-comment-id\": comment.id,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-author\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-avatar clickable\",\n                    onClick: () => navigate(getProfileUrl(comment.author.id)),\n                    title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                    children: [(_comment$author2 = comment.author) !== null && _comment$author2 !== void 0 && _comment$author2.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: comment.author.avatar_url,\n                      alt: getAuthorName(comment.author),\n                      onError: e => {\n                        e.target.style.display = 'none';\n                        e.target.nextSibling.style.display = 'flex';\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 637,\n                      columnNumber: 33\n                    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-initials\",\n                      style: {\n                        display: (_comment$author3 = comment.author) !== null && _comment$author3 !== void 0 && _comment$author3.avatar_url ? 'none' : 'flex'\n                      },\n                      children: getAuthorInitials(comment.author)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-author-name clickable\",\n                      onClick: () => navigate(getProfileUrl(comment.author.id)),\n                      title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                      children: getAuthorName(comment.author)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 653,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-author-location\",\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faMapMarkerAlt\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 661,\n                        columnNumber: 33\n                      }, this), ((_comment$author4 = comment.author) === null || _comment$author4 === void 0 ? void 0 : _comment$author4.city) || 'Москва']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 660,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-date\",\n                      children: formatDate(comment.created_at)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 664,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-content\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-actions\",\n                  children: [isLoggedIn() && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleReplyClick(comment.id),\n                    className: \"btn-reply\",\n                    children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 674,\n                    columnNumber: 31\n                  }, this), isMyComment(comment) && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteComment(comment.id),\n                    className: \"btn-delete\",\n                    children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 27\n                }, this), replyTo === comment.id && /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => handleSubmitReply(e, comment.id),\n                  className: \"reply-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-input-wrapper\",\n                    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                      value: replyText,\n                      onChange: e => setReplyText(e.target.value),\n                      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442...\",\n                      className: \"comment-input\",\n                      rows: \"2\",\n                      disabled: submitting\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 695,\n                      columnNumber: 32\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 30\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-form-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn-submit-comment\",\n                      disabled: !replyText.trim() || submitting,\n                      children: submitting ? 'Отправка...' : 'Отправить'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 705,\n                      columnNumber: 32\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => setReplyTo(null),\n                      className: \"btn-cancel\",\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 712,\n                      columnNumber: 32\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 704,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 28\n                }, this), post.comments.filter(reply => reply.parent === comment.id).map(reply => {\n                  var _reply$author, _reply$author2, _reply$author3;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment reply\",\n                    \"data-comment-id\": reply.id,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-author\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comment-avatar clickable\",\n                        onClick: () => navigate(getProfileUrl(reply.author.id)),\n                        title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                        children: [(_reply$author = reply.author) !== null && _reply$author !== void 0 && _reply$author.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: reply.author.avatar_url,\n                          alt: getAuthorName(reply.author),\n                          onError: e => {\n                            e.target.style.display = 'none';\n                            e.target.nextSibling.style.display = 'flex';\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 735,\n                          columnNumber: 39\n                        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-initials\",\n                          style: {\n                            display: (_reply$author2 = reply.author) !== null && _reply$author2 !== void 0 && _reply$author2.avatar_url ? 'none' : 'flex'\n                          },\n                          children: getAuthorInitials(reply.author)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 744,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comment-info\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-author-name clickable\",\n                          onClick: () => navigate(getProfileUrl(reply.author.id)),\n                          title: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044E\",\n                          children: getAuthorName(reply.author)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 751,\n                          columnNumber: 107\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-author-location\",\n                          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                            icon: faMapMarkerAlt\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 759,\n                            columnNumber: 39\n                          }, this), ((_reply$author3 = reply.author) === null || _reply$author3 === void 0 ? void 0 : _reply$author3.city) || 'Москва']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 758,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"comment-date\",\n                          children: formatDate(reply.created_at)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 762,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 750,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 728,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-content\",\n                      children: reply.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 767,\n                      columnNumber: 33\n                    }, this), isMyComment(reply) && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"comment-actions\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleDeleteComment(reply.id),\n                        className: \"btn-delete\",\n                        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 770,\n                        columnNumber: 37\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 35\n                    }, this)]\n                  }, reply.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 727,\n                    columnNumber: 60\n                  }, this);\n                })]\n              }, comment.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 18\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-comments\",\n            children: \"\\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0435\\u0432. \\u0411\\u0443\\u0434\\u044C\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0432\\u044B\\u043C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"post-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043F\\u043E\\u0441\\u0442\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `info-value status-${post.status}`,\n                children: post.status === 'published' ? 'Опубликован' : 'Черновик'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-value\",\n                children: post.comments_enabled === 'enabled' || post.comments_enabled === undefined ? 'Разрешены' : 'Запрещены'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-value\",\n                children: new Date(post.created_at).toLocaleDateString('ru-RU')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 16\n            }, this), post.published_at && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-label\",\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"info-value\",\n                children: new Date(post.published_at).toLocaleDateString('ru-RU')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 12\n        }, this), post.short_description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-short-description\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.short_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteConfirmModal, {\n      isOpen: showDeleteModal,\n      onClose: () => setShowDeleteModal(false),\n      onConfirm: confirmDeletePost,\n      postTitle: (post === null || post === void 0 ? void 0 : post.title) || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShareModal, {\n      isOpen: showShareModal,\n      onClose: () => setShowShareModal(false),\n      post: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"qKwr8dsDskH+6kMHYXfZ0aS3VL4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","Link","getProfileUrl","FontAwesomeIcon","faArrowLeft","faMapMarkerAlt","faCalendar","faShare","faEdit","faTrash","DeleteConfirmModal","ShareModal","jsxDEV","_jsxDEV","Fragment","_Fragment","PostDetail","_s","_post$author2","_post$author3","_post$author4","_post$category","_post$comments","slug","navigate","post","setPost","loading","setLoading","error","setError","newComment","setNewComment","replyTo","setReplyTo","replyText","setReplyText","submitting","setSubmitting","showDeleteModal","setShowDeleteModal","showShareModal","setShowShareModal","getAuthorInitials","author","firstName","first_name","lastName","last_name","charAt","toUpperCase","getUserAvatarUrl","userData","avatar_url","avatar","initials","encodeURIComponent","fetchPost","token","localStorage","getItem","sessionStorage","headers","response","fetch","ok","data","json","console","log","status","statusText","problematicSlugs","trim","includes","formatDate","dateString","date","parts","split","length","day","month","year","Date","padStart","isNaN","getTime","now","diffInMinutes","Math","floor","diffInHours","diffInDays","diffInWeeks","diffInMonths","diffInYears","getAuthorName","fullName","username","handleSubmitComment","e","preventDefault","JSON","parse","id","newCommentObj","content","city","created_at","toISOString","parent","is_approved","prev","comments","method","body","stringify","serverError","handleSubmitReply","parentId","newReplyObj","handleReplyClick","commentId","handleEditPost","handleDeletePost","handleSharePost","confirmDeletePost","handleDeleteComment","commentElement","document","querySelector","classList","add","setTimeout","filter","comment","isLoggedIn","isAuthor","_post$author","isMyComment","_comment$author","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","title","src","alt","onError","target","style","display","nextSibling","published_at","category","name","dangerouslySetInnerHTML","__html","_post$author5","meta_title","meta_description","meta_keywords","comments_enabled","undefined","onSubmit","value","onChange","placeholder","rows","disabled","type","to","map","_comment$author2","_comment$author3","_comment$author4","reply","_reply$author","_reply$author2","_reply$author3","toLocaleDateString","short_description","isOpen","onClose","onConfirm","postTitle","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/PostDetail/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { getProfileUrl } from '../../utils/profile';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faArrowLeft, \n  faMapMarkerAlt, \n  faCalendar, \n  faShare,\n  faEdit,\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport DeleteConfirmModal from './DeleteConfirmModal';\nimport ShareModal from './ShareModal';\nimport './PostDetail.css';\n\nconst PostDetail = () => {\n  const { slug } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [replyTo, setReplyTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [showShareModal, setShowShareModal] = useState(false);\n\n  // Вспомогательные функции\n  const getAuthorInitials = (author) => {\n    if (!author) return 'А';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\n  };\n\n  const getUserAvatarUrl = (userData) => {\n    // Сначала проверяем avatar_url, потом avatar, потом тестовую аватарку\n    if (userData.avatar_url) return userData.avatar_url;\n    if (userData.avatar) return userData.avatar;\n    // Создаем тестовую аватарку с инициалами пользователя\n    const initials = getAuthorInitials(userData);\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\n  };\n\n  const fetchPost = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Получаем токен авторизации\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const headers = {\n        'Content-Type': 'application/json',\n      };\n      \n      if (token) {\n        headers['Authorization'] = `Bearer ${token}`;\n      }\n      \n      const response = await fetch(`http://localhost:8000/api/posts/${slug}/`, {\n        headers: headers\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        console.log('Загруженный пост:', data); // Для отладки\n        setPost(data);\n      } else {\n        console.error('Ошибка получения поста:', response.status, response.statusText);\n        setError('Пост не найден');\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки поста:', error);\n      setError('Ошибка загрузки поста');\n    } finally {\n      setLoading(false);\n    }\n  }, [slug]);\n\n  useEffect(() => {\n    // Проверяем slug перед выполнением любых действий\n    const problematicSlugs = ['post', 'api', 'admin', 'static', 'media', 'login', 'register', 'logout', 'create', 'edit', 'delete'];\n    \n    if (slug && \n        slug.trim() !== '' && \n        !problematicSlugs.includes(slug)) {\n      fetchPost();\n    } else {\n      setError('Неверный адрес страницы');\n      setLoading(false);\n    }\n  }, [slug, fetchPost]);\n\n\n  const formatDate = (dateString) => {\n    try {\n      if (!dateString) {\n        return 'Недавно';\n      }\n      \n      let date;\n      \n      // Проверяем, если дата в формате \"DD.MM.YYYY\"\n      if (typeof dateString === 'string' && dateString.includes('.')) {\n        const parts = dateString.split('.');\n        if (parts.length === 3) {\n          const [day, month, year] = parts;\n          date = new Date(`${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`);\n        } else {\n          date = new Date(dateString);\n        }\n      } else {\n        date = new Date(dateString);\n      }\n      \n      if (isNaN(date.getTime())) {\n        return 'Недавно';\n      }\n      \n      const now = new Date();\n      const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n      const diffInHours = Math.floor(diffInMinutes / 60);\n      const diffInDays = Math.floor(diffInHours / 24);\n      const diffInWeeks = Math.floor(diffInDays / 7);\n      const diffInMonths = Math.floor(diffInDays / 30);\n      \n      if (diffInMinutes < 1) {\n        return 'Только что';\n      } else if (diffInMinutes < 60) {\n        return `${diffInMinutes} мин${diffInMinutes === 1 ? 'у' : diffInMinutes < 5 ? 'ы' : ''} назад`;\n      } else if (diffInHours < 24) {\n        return `${diffInHours} час${diffInHours === 1 ? '' : diffInHours < 5 ? 'а' : 'ов'} назад`;\n      } else if (diffInDays < 7) {\n        return `${diffInDays} дн${diffInDays === 1 ? 'ь' : diffInDays < 5 ? 'я' : 'ей'} назад`;\n      } else if (diffInWeeks < 4) {\n        return `${diffInWeeks} нед${diffInWeeks === 1 ? 'елю' : diffInWeeks < 5 ? 'ели' : 'ель'} назад`;\n      } else if (diffInMonths < 12) {\n        return `${diffInMonths} мес${diffInMonths === 1 ? 'яц' : diffInMonths < 5 ? 'яца' : 'яцев'} назад`;\n      } else {\n        const diffInYears = Math.floor(diffInMonths / 12);\n        return `${diffInYears} год${diffInYears === 1 ? '' : diffInYears < 5 ? 'а' : 'ов'} назад`;\n      }\n    } catch (error) {\n      return 'Недавно';\n    }\n  };\n\n  const getAuthorName = (author) => {\n    if (!author) return 'Автор';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    const fullName = `${firstName} ${lastName}`.trim();\n    return fullName || author.username || 'Автор';\n  };\n\n  const handleSubmitComment = async (e) => {\n    e.preventDefault();\n    if (!newComment.trim()) return;\n\n    try {\n      setSubmitting(true);\n      \n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n      \n      // Проверяем, есть ли данные пользователя\n      if (!userData.id || !userData.first_name || !userData.last_name) {\n        console.error('Данные пользователя не найдены:', userData);\n        setError('Ошибка: данные пользователя не найдены. Попробуйте перезайти в аккаунт.');\n        return;\n      }\n      \n      console.log('Данные пользователя из localStorage:', userData); // Для отладки\n      \n      // Создаем новый комментарий локально для демонстрации\n      const newCommentObj = {\n        id: Date.now(), // Временный ID\n        content: newComment,\n        author: {\n          id: userData.id,\n          first_name: userData.first_name,\n          last_name: userData.last_name,\n          username: userData.username,\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: null,\n        is_approved: true\n      };\n      \n      console.log('Новый комментарий:', newCommentObj); // Для отладки\n\n      // Добавляем комментарий в начало массива, чтобы он отображался первым\n      setPost(prev => ({\n        ...prev,\n        comments: [newCommentObj, ...(prev.comments || [])]\n      }));\n      \n      setNewComment('');\n      \n      // Попытка отправить на сервер (если работает)\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: newComment,\n              parent: null\n            })\n          });\n\n          if (response.ok) {\n            console.log('Комментарий успешно отправлен на сервер');\n          } else {\n            console.log('Ошибка отправки на сервер, но комментарий добавлен локально');\n          }\n        }\n      } catch (serverError) {\n        console.log('Сервер недоступен, комментарий добавлен локально');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке комментария:', error);\n      setError('Ошибка при отправке комментария');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleSubmitReply = async (e, parentId) => {\n    e.preventDefault();\n    if (!replyText.trim()) return;\n\n    try {\n      setSubmitting(true);\n      \n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n      \n      // Проверяем, есть ли данные пользователя\n      if (!userData.id || !userData.first_name || !userData.last_name) {\n        console.error('Данные пользователя не найдены:', userData);\n        setError('Ошибка: данные пользователя не найдены. Попробуйте перезайти в аккаунт.');\n        return;\n      }\n      \n      // Создаем новый ответ локально для демонстрации\n      const newReplyObj = {\n        id: Date.now(), // Временный ID\n        content: replyText,\n        author: {\n          id: userData.id,\n          first_name: userData.first_name,\n          last_name: userData.last_name,\n          username: userData.username,\n          avatar: userData.avatar || null,\n          avatar_url: getUserAvatarUrl(userData),\n          city: userData.city || \"Москва\"\n        },\n        created_at: new Date().toISOString(),\n        parent: parentId,\n        is_approved: true\n      };\n\n      // Добавляем ответ к посту\n      setPost(prev => ({\n        ...prev,\n        comments: [...(prev.comments || []), newReplyObj]\n      }));\n      \n      setReplyText('');\n      setReplyTo(null);\n      \n      // Попытка отправить на сервер (если работает)\n      try {\n        const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n        if (token) {\n          const response = await fetch(`http://localhost:8000/api/posts/${slug}/comments/`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              content: replyText,\n              parent: parentId\n            })\n          });\n\n          if (response.ok) {\n            console.log('Ответ успешно отправлен на сервер');\n          } else {\n            console.log('Ошибка отправки на сервер, но ответ добавлен локально');\n          }\n        }\n      } catch (serverError) {\n        console.log('Сервер недоступен, ответ добавлен локально');\n      }\n    } catch (error) {\n      console.error('Ошибка при отправке ответа:', error);\n      setError('Ошибка при отправке ответа');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleReplyClick = (commentId) => {\n    setReplyTo(replyTo === commentId ? null : commentId);\n    setReplyText('');\n  };\n\n  const handleEditPost = () => {\n    if (post && post.slug) {\n      navigate(`/edit-post/${post.slug}`);\n    }\n  };\n\n  const handleDeletePost = () => {\n    if (!post || !post.slug) {\n      setError('Ошибка: пост не найден');\n      return;\n    }\n    setShowDeleteModal(true);\n  };\n\n  const handleSharePost = () => {\n    setShowShareModal(true);\n  };\n\n  const confirmDeletePost = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/api/posts/${post.slug}/delete/`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        }\n      });\n\n      if (response.ok) {\n        setShowDeleteModal(false);\n        navigate('/');\n      } else {\n        setError('Ошибка при удалении поста');\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении поста:', error);\n      setError('Ошибка при удалении поста');\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    // Добавляем класс для анимации удаления\n    const commentElement = document.querySelector(`[data-comment-id=\"${commentId}\"]`);\n    if (commentElement) {\n      commentElement.classList.add('deleting');\n    }\n\n    // Удаляем комментарий через небольшую задержку для анимации\n    setTimeout(() => {\n      setPost(prev => ({\n        ...prev,\n        comments: prev.comments.filter(comment => comment.id !== commentId && comment.parent !== commentId)\n      }));\n    }, 300);\n\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (token) {\n        const response = await fetch(`http://localhost:8000/api/posts/comments/${commentId}/delete/`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.ok) {\n          console.log('Комментарий успешно удален на сервере');\n        } else {\n          console.log('Ошибка удаления комментария на сервере, но удален локально');\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка при удалении комментария:', error);\n      // Комментарий уже удален локально, так что ничего не делаем\n    }\n  };\n\n  const isLoggedIn = () => {\n    return !!(localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken'));\n  };\n\n  const isAuthor = () => {\n    if (!post || !isLoggedIn()) return false;\n    try {\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n      return userData.id === post.author?.id;\n    } catch (error) {\n      console.error('Ошибка при парсинге данных пользователя:', error);\n      return false;\n    }\n  };\n\n  const isMyComment = (comment) => {\n    try {\n      // Получаем данные текущего пользователя\n      const userData = JSON.parse(localStorage.getItem('userData') || sessionStorage.getItem('userData') || '{}');\n      return comment.author?.id === userData.id;\n    } catch (error) {\n      console.error('Ошибка при парсинге данных пользователя:', error);\n      return false;\n    }\n  };\n\n\n\n  if (loading) {\n    return (\n      <div className=\"post-detail-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>Загрузка поста...</p>\n      </div>\n    );\n  }\n\n  if (error || !post) {\n    return (\n      <div className=\"post-detail-error\">\n        <h2>Ошибка</h2>\n        <p>{error || 'Пост не найден'}</p>\n        <button onClick={() => navigate('/')} className=\"btn-back\">\n          <FontAwesomeIcon icon={faArrowLeft} />\n          Вернуться на главную\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"post-detail-container\">\n      {/* Кнопка назад */}\n      <div className=\"post-detail-header\">\n        <button onClick={() => navigate('/')} className=\"btn-back\">\n          <FontAwesomeIcon icon={faArrowLeft} />\n          Назад\n        </button>\n      </div>\n\n      {/* Основной контент */}\n      <div className=\"post-detail-content\">\n        <article className=\"post-article\">\n          {/* Информация об авторе */}\n          <div className=\"post-author-section\">\n            <div className=\"author-info\">\n              <div \n                className=\"author-avatar clickable\"\n                onClick={() => navigate(getProfileUrl(post.author.id))}\n                title=\"Перейти к профилю\"\n              >\n                {post.author?.avatar_url ? (\n                  <img \n                    src={post.author.avatar_url} \n                    alt={getAuthorName(post.author)}\n                    onError={(e) => {\n                      e.target.style.display = 'none';\n                      e.target.nextSibling.style.display = 'flex';\n                    }}\n                  />\n                ) : null}\n                <div className=\"author-initials\" style={{ \n                  display: post.author?.avatar_url ? 'none' : 'flex' \n                }}>\n                  {getAuthorInitials(post.author)}\n                </div>\n              </div>\n              \n              <div className=\"author-details\">\n                              <div \n                className=\"author-name clickable\"\n                onClick={() => navigate(getProfileUrl(post.author.id))}\n                title=\"Перейти к профилю\"\n              >\n                  {getAuthorName(post.author)}\n                </div>\n                <div className=\"author-meta\">\n                  <span className=\"author-location\">\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />\n                    {post.author?.city || 'Москва'}\n                  </span>\n                  <span className=\"post-date\">\n                    <FontAwesomeIcon icon={faCalendar} />\n                    {formatDate(post.published_at || post.created_at)}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Заголовок статьи */}\n          <div className=\"post-title-section\">\n            <div className=\"post-title-header\">\n              <div className=\"post-title-content\">\n                <div className=\"post-category-display\" data-category={post.category?.name || 'Общее'}>\n                  {post.status === 'draft' && (\n                    <span className=\"draft-badge\">Черновик</span>\n                  )}\n                </div>\n                <h1 className=\"post-title\">{post.title}</h1>\n              </div>\n              \n                              {/* Кнопки действий */}\n                <div className=\"post-actions-header\">\n                  {isAuthor() && (\n                    <>\n                      <button \n                        className=\"action-btn edit-btn\"\n                        onClick={handleEditPost}\n                        title=\"Редактировать пост\"\n                      >\n                        <FontAwesomeIcon icon={faEdit} />\n                      </button>\n                      <button \n                        className=\"action-btn delete-btn\"\n                        onClick={handleDeletePost}\n                        title=\"Удалить пост\"\n                      >\n                        <FontAwesomeIcon icon={faTrash} />\n                      </button>\n                    </>\n                  )}\n                  <button className=\"action-btn share-btn\" onClick={handleSharePost} title=\"Поделиться постом\">\n                    <FontAwesomeIcon icon={faShare} />\n                  </button>\n                </div>\n            </div>\n          </div>\n\n           {/* Основной контент */}\n           <div className=\"post-body\">\n             <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.content }} />\n           </div>\n\n          {/* SEO информация (только для автора) */}\n          {(() => {\n            try {\n              const userData = JSON.parse(localStorage.getItem('userData') || '{}');\n              return post.author?.id === userData.id;\n            } catch (error) {\n              return false;\n            }\n          })() && (\n            <div className=\"post-seo-info\">\n              <h3>SEO информация</h3>\n              <div className=\"seo-fields\">\n                <div className=\"seo-field\">\n                  <label>Meta Title:</label>\n                  <p>{post.meta_title}</p>\n                </div>\n                \n                <div className=\"seo-field\">\n                  <label>Meta Description:</label>\n                  <p>{post.meta_description}</p>\n                </div>\n                \n                <div className=\"seo-field\">\n                  <label>Meta Keywords:</label>\n                  <p>{post.meta_keywords}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n                     {/* Комментарии */}\n          {(post.comments_enabled === 'enabled' || post.comments_enabled === undefined) && (\n            <div className=\"post-comments\">\n              <h3>Комментарии ({post.comments?.length || 0})</h3>\n               \n               {/* Отображение ошибок */}\n               {error && (\n                 <div className=\"error-message\">\n                   {error}\n                 </div>\n               )}\n               \n                               {/* Форма добавления комментария */}\n                {isLoggedIn() ? (\n                 <form onSubmit={handleSubmitComment} className=\"comment-form\">\n                   <div className=\"comment-input-wrapper\">\n                     <textarea\n                       value={newComment}\n                       onChange={(e) => setNewComment(e.target.value)}\n                       placeholder=\"Написать комментарий...\"\n                       className=\"comment-input\"\n                       rows=\"3\"\n                       disabled={submitting}\n                     />\n                   </div>\n                   <div className=\"comment-form-actions\">\n                     <button \n                       type=\"submit\" \n                       className=\"btn-submit-comment\"\n                       disabled={!newComment.trim() || submitting}\n                     >\n                       {submitting ? 'Отправка...' : 'Отправить'}\n                     </button>\n                   </div>\n                 </form>\n               ) : (\n                 <div className=\"comment-login-prompt\">\n                   <p>Чтобы оставить комментарий, пожалуйста, <Link to=\"/auth\">войдите в систему</Link></p>\n                 </div>\n               )}\n\n               {/* Список комментариев */}\n               {post.comments && post.comments.length > 0 ? (\n                 <div className=\"comments-list\">\n                   {post.comments\n                     .filter(comment => !comment.parent) // Только основные комментарии\n                     .map(comment => (\n                       <div key={comment.id} className=\"comment\" data-comment-id={comment.id}>\n                                                   <div className=\"comment-author\">\n                            <div \n                              className=\"comment-avatar clickable\"\n                              onClick={() => navigate(getProfileUrl(comment.author.id))}\n                              title=\"Перейти к профилю\"\n                            >\n                              {comment.author?.avatar_url ? (\n                                <img \n                                  src={comment.author.avatar_url} \n                                  alt={getAuthorName(comment.author)}\n                                  onError={(e) => {\n                                    e.target.style.display = 'none';\n                                    e.target.nextSibling.style.display = 'flex';\n                                  }}\n                                />\n                              ) : null}\n                              <div className=\"comment-initials\" style={{ \n                                display: comment.author?.avatar_url ? 'none' : 'flex' \n                              }}>\n                                {getAuthorInitials(comment.author)}\n                              </div>\n                            </div>\n                            <div className=\"comment-info\">\n                              <div \n                                className=\"comment-author-name clickable\"\n                                onClick={() => navigate(getProfileUrl(comment.author.id))}\n                                title=\"Перейти к профилю\"\n                              >\n                                {getAuthorName(comment.author)}\n                              </div>\n                              <div className=\"comment-author-location\">\n                                <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                {comment.author?.city || 'Москва'}\n                              </div>\n                              <div className=\"comment-date\">\n                                {formatDate(comment.created_at)}\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"comment-content\">{comment.content}</div>\n                          \n                          {/* Кнопки действий */}\n                          <div className=\"comment-actions\">\n                            {isLoggedIn() && (\n                              <button \n                                onClick={() => handleReplyClick(comment.id)}\n                                className=\"btn-reply\"\n                              >\n                                Ответить\n                              </button>\n                            )}\n                            {isMyComment(comment) && (\n                              <button \n                                onClick={() => handleDeleteComment(comment.id)}\n                                className=\"btn-delete\"\n                              >\n                                Удалить\n                              </button>\n                            )}\n                          </div>\n\n                         {/* Форма ответа */}\n                         {replyTo === comment.id && (\n                           <form onSubmit={(e) => handleSubmitReply(e, comment.id)} className=\"reply-form\">\n                             <div className=\"comment-input-wrapper\">\n                               <textarea\n                                 value={replyText}\n                                 onChange={(e) => setReplyText(e.target.value)}\n                                 placeholder=\"Написать ответ...\"\n                                 className=\"comment-input\"\n                                 rows=\"2\"\n                                 disabled={submitting}\n                               />\n                             </div>\n                             <div className=\"comment-form-actions\">\n                               <button \n                                 type=\"submit\" \n                                 className=\"btn-submit-comment\"\n                                 disabled={!replyText.trim() || submitting}\n                               >\n                                 {submitting ? 'Отправка...' : 'Отправить'}\n                               </button>\n                               <button \n                                 type=\"button\" \n                                 onClick={() => setReplyTo(null)}\n                                 className=\"btn-cancel\"\n                               >\n                                 Отмена\n                               </button>\n                             </div>\n                           </form>\n                         )}\n\n                         {/* Ответы на комментарий */}\n                         {post.comments\n                           .filter(reply => reply.parent === comment.id)\n                           .map(reply => (\n                                                           <div key={reply.id} className=\"comment reply\" data-comment-id={reply.id}>\n                                <div className=\"comment-author\">\n                                  <div \n                                    className=\"comment-avatar clickable\"\n                                    onClick={() => navigate(getProfileUrl(reply.author.id))}\n                                    title=\"Перейти к профилю\"\n                                  >\n                                    {reply.author?.avatar_url ? (\n                                      <img \n                                        src={reply.author.avatar_url} \n                                        alt={getAuthorName(reply.author)}\n                                        onError={(e) => {\n                                          e.target.style.display = 'none';\n                                          e.target.nextSibling.style.display = 'flex';\n                                        }}\n                                      />\n                                    ) : null}\n                                    <div className=\"comment-initials\" style={{ \n                                      display: reply.author?.avatar_url ? 'none' : 'flex' \n                                    }}>\n                                      {getAuthorInitials(reply.author)}\n                                    </div>\n                                  </div>\n                                  <div className=\"comment-info\">\n                                                                                                          <div \n                                      className=\"comment-author-name clickable\"\n                                      onClick={() => navigate(getProfileUrl(reply.author.id))}\n                                      title=\"Перейти к профилю\"\n                                    >\n                                    {getAuthorName(reply.author)}\n                                  </div>\n                                    <div className=\"comment-author-location\">\n                                      <FontAwesomeIcon icon={faMapMarkerAlt} />\n                                      {reply.author?.city || 'Москва'}\n                                    </div>\n                                    <div className=\"comment-date\">\n                                      {formatDate(reply.created_at)}\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"comment-content\">{reply.content}</div>\n                                {isMyComment(reply) && (\n                                  <div className=\"comment-actions\">\n                                    <button \n                                      onClick={() => handleDeleteComment(reply.id)}\n                                      className=\"btn-delete\"\n                                    >\n                                      Удалить\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                           ))}\n                       </div>\n                     ))}\n                 </div>\n               ) : (\n                 <p className=\"no-comments\">Пока нет комментариев. Будьте первым!</p>\n               )}\n             </div>\n           )}\n        </article>\n\n                 {/* Боковая панель */}\n         <aside className=\"post-sidebar\">\n           <div className=\"sidebar-section\">\n             <h3>Информация о посте</h3>\n             <div className=\"post-info\">\n               <div className=\"info-item\">\n                 <span className=\"info-label\">Статус:</span>\n                 <span className={`info-value status-${post.status}`}>\n                   {post.status === 'published' ? 'Опубликован' : 'Черновик'}\n                 </span>\n               </div>\n               <div className=\"info-item\">\n                 <span className=\"info-label\">Комментарии:</span>\n                 <span className=\"info-value\">\n                   {post.comments_enabled === 'enabled' || post.comments_enabled === undefined ? 'Разрешены' : 'Запрещены'}\n                 </span>\n               </div>\n               <div className=\"info-item\">\n                 <span className=\"info-label\">Дата создания:</span>\n                 <span className=\"info-value\">\n                   {new Date(post.created_at).toLocaleDateString('ru-RU')}\n                 </span>\n               </div>\n               {post.published_at && (\n                 <div className=\"info-item\">\n                   <span className=\"info-label\">Дата публикации:</span>\n                   <span className=\"info-value\">\n                     {new Date(post.published_at).toLocaleDateString('ru-RU')}\n                   </span>\n                 </div>\n               )}\n             </div>\n           </div>\n           \n                       {/* Краткое описание */}\n            {post.short_description && (\n              <div className=\"sidebar-section\">\n                <h3>Краткое описание</h3>\n                <div className=\"post-short-description\">\n                  <p>{post.short_description}</p>\n                </div>\n              </div>\n            )}\n            \n\n         </aside>\n      </div>\n      \n      {/* Модальное окно подтверждения удаления */}\n      <DeleteConfirmModal\n        isOpen={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={confirmDeletePost}\n        postTitle={post?.title || ''}\n      />\n\n             {/* Модальное окно для поделиться постом */}\n       <ShareModal\n         isOpen={showShareModal}\n         onClose={() => setShowShareModal(false)}\n         post={post}\n       />\n    </div>\n  );\n};\n\nexport default PostDetail;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}