{"ast":null,"code":"// Утилита для работы с чатами в localStorage\n\n// Получить все чаты\nexport const getChats = () => {\n  try {\n    const chats = localStorage.getItem('chats');\n    return chats ? JSON.parse(chats) : {};\n  } catch (error) {\n    console.error('Ошибка при получении чатов:', error);\n    return {};\n  }\n};\n\n// Получить чат с конкретным пользователем\nexport const getChat = userId => {\n  const chats = getChats();\n  return chats[userId] || [];\n};\n\n// Сохранить сообщение в чат\nexport const saveMessage = (userId, message) => {\n  try {\n    const chats = getChats();\n    if (!chats[userId]) {\n      chats[userId] = [];\n    }\n    const newMessage = {\n      id: Date.now(),\n      text: message.text,\n      sender: message.sender,\n      timestamp: new Date().toISOString(),\n      isEdited: false\n    };\n    chats[userId].push(newMessage);\n    localStorage.setItem('chats', JSON.stringify(chats));\n    return newMessage;\n  } catch (error) {\n    console.error('Ошибка при сохранении сообщения:', error);\n    return null;\n  }\n};\n\n// Обновить сообщение\nexport const updateMessage = (userId, messageId, newText) => {\n  try {\n    const chats = getChats();\n    if (!chats[userId]) return false;\n    const messageIndex = chats[userId].findIndex(msg => msg.id === messageId);\n    if (messageIndex === -1) return false;\n    chats[userId][messageIndex].text = newText;\n    chats[userId][messageIndex].isEdited = true;\n    chats[userId][messageIndex].editedAt = new Date().toISOString();\n    localStorage.setItem('chats', JSON.stringify(chats));\n    return true;\n  } catch (error) {\n    console.error('Ошибка при обновлении сообщения:', error);\n    return false;\n  }\n};\n\n// Удалить сообщение\nexport const deleteMessage = (userId, messageId) => {\n  try {\n    const chats = getChats();\n    if (!chats[userId]) return false;\n    chats[userId] = chats[userId].filter(msg => msg.id !== messageId);\n    localStorage.setItem('chats', JSON.stringify(chats));\n    return true;\n  } catch (error) {\n    console.error('Ошибка при удалении сообщения:', error);\n    return false;\n  }\n};\n\n// Получить список всех чатов для страницы чатов\nexport const getChatsList = () => {\n  try {\n    const chats = getChats();\n    const chatsList = [];\n    Object.keys(chats).forEach(userId => {\n      const userMessages = chats[userId];\n      if (userMessages.length > 0) {\n        const lastMessage = userMessages[userMessages.length - 1];\n        chatsList.push({\n          userId: parseInt(userId),\n          lastMessage: lastMessage.text,\n          lastMessageTime: lastMessage.timestamp,\n          unreadCount: 0 // В будущем можно добавить логику непрочитанных сообщений\n        });\n      }\n    });\n    return chatsList.sort((a, b) => new Date(b.lastMessageTime) - new Date(a.lastMessageTime));\n  } catch (error) {\n    console.error('Ошибка при получении списка чатов:', error);\n    return [];\n  }\n};\n\n// Очистить все чаты (для тестирования)\nexport const clearAllChats = () => {\n  try {\n    localStorage.removeItem('chats');\n    return true;\n  } catch (error) {\n    console.error('Ошибка при очистке чатов:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["getChats","chats","localStorage","getItem","JSON","parse","error","console","getChat","userId","saveMessage","message","newMessage","id","Date","now","text","sender","timestamp","toISOString","isEdited","push","setItem","stringify","updateMessage","messageId","newText","messageIndex","findIndex","msg","editedAt","deleteMessage","filter","getChatsList","chatsList","Object","keys","forEach","userMessages","length","lastMessage","parseInt","lastMessageTime","unreadCount","sort","a","b","clearAllChats","removeItem"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/utils/chatStorage.js"],"sourcesContent":["// Утилита для работы с чатами в localStorage\r\n\r\n// Получить все чаты\r\nexport const getChats = () => {\r\n  try {\r\n    const chats = localStorage.getItem('chats');\r\n    return chats ? JSON.parse(chats) : {};\r\n  } catch (error) {\r\n    console.error('Ошибка при получении чатов:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n// Получить чат с конкретным пользователем\r\nexport const getChat = (userId) => {\r\n  const chats = getChats();\r\n  return chats[userId] || [];\r\n};\r\n\r\n// Сохранить сообщение в чат\r\nexport const saveMessage = (userId, message) => {\r\n  try {\r\n    const chats = getChats();\r\n    if (!chats[userId]) {\r\n      chats[userId] = [];\r\n    }\r\n    \r\n    const newMessage = {\r\n      id: Date.now(),\r\n      text: message.text,\r\n      sender: message.sender,\r\n      timestamp: new Date().toISOString(),\r\n      isEdited: false\r\n    };\r\n    \r\n    chats[userId].push(newMessage);\r\n    localStorage.setItem('chats', JSON.stringify(chats));\r\n    \r\n    return newMessage;\r\n  } catch (error) {\r\n    console.error('Ошибка при сохранении сообщения:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Обновить сообщение\r\nexport const updateMessage = (userId, messageId, newText) => {\r\n  try {\r\n    const chats = getChats();\r\n    if (!chats[userId]) return false;\r\n    \r\n    const messageIndex = chats[userId].findIndex(msg => msg.id === messageId);\r\n    if (messageIndex === -1) return false;\r\n    \r\n    chats[userId][messageIndex].text = newText;\r\n    chats[userId][messageIndex].isEdited = true;\r\n    chats[userId][messageIndex].editedAt = new Date().toISOString();\r\n    \r\n    localStorage.setItem('chats', JSON.stringify(chats));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ошибка при обновлении сообщения:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Удалить сообщение\r\nexport const deleteMessage = (userId, messageId) => {\r\n  try {\r\n    const chats = getChats();\r\n    if (!chats[userId]) return false;\r\n    \r\n    chats[userId] = chats[userId].filter(msg => msg.id !== messageId);\r\n    localStorage.setItem('chats', JSON.stringify(chats));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ошибка при удалении сообщения:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Получить список всех чатов для страницы чатов\r\nexport const getChatsList = () => {\r\n  try {\r\n    const chats = getChats();\r\n    const chatsList = [];\r\n    \r\n    Object.keys(chats).forEach(userId => {\r\n      const userMessages = chats[userId];\r\n      if (userMessages.length > 0) {\r\n        const lastMessage = userMessages[userMessages.length - 1];\r\n        chatsList.push({\r\n          userId: parseInt(userId),\r\n          lastMessage: lastMessage.text,\r\n          lastMessageTime: lastMessage.timestamp,\r\n          unreadCount: 0 // В будущем можно добавить логику непрочитанных сообщений\r\n        });\r\n      }\r\n    });\r\n    \r\n    return chatsList.sort((a, b) => new Date(b.lastMessageTime) - new Date(a.lastMessageTime));\r\n  } catch (error) {\r\n    console.error('Ошибка при получении списка чатов:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Очистить все чаты (для тестирования)\r\nexport const clearAllChats = () => {\r\n  try {\r\n    localStorage.removeItem('chats');\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Ошибка при очистке чатов:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAC5B,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;EACvC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,CAAC,CAAC;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAIC,MAAM,IAAK;EACjC,MAAMR,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,OAAOC,KAAK,CAACQ,MAAM,CAAC,IAAI,EAAE;AAC5B,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAGA,CAACD,MAAM,EAAEE,OAAO,KAAK;EAC9C,IAAI;IACF,MAAMV,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,CAACQ,MAAM,CAAC,EAAE;MAClBR,KAAK,CAACQ,MAAM,CAAC,GAAG,EAAE;IACpB;IAEA,MAAMG,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEL,OAAO,CAACK,IAAI;MAClBC,MAAM,EAAEN,OAAO,CAACM,MAAM;MACtBC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;MACnCC,QAAQ,EAAE;IACZ,CAAC;IAEDnB,KAAK,CAACQ,MAAM,CAAC,CAACY,IAAI,CAACT,UAAU,CAAC;IAC9BV,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAACtB,KAAK,CAAC,CAAC;IAEpD,OAAOW,UAAU;EACnB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,aAAa,GAAGA,CAACf,MAAM,EAAEgB,SAAS,EAAEC,OAAO,KAAK;EAC3D,IAAI;IACF,MAAMzB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,CAACQ,MAAM,CAAC,EAAE,OAAO,KAAK;IAEhC,MAAMkB,YAAY,GAAG1B,KAAK,CAACQ,MAAM,CAAC,CAACmB,SAAS,CAACC,GAAG,IAAIA,GAAG,CAAChB,EAAE,KAAKY,SAAS,CAAC;IACzE,IAAIE,YAAY,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;IAErC1B,KAAK,CAACQ,MAAM,CAAC,CAACkB,YAAY,CAAC,CAACX,IAAI,GAAGU,OAAO;IAC1CzB,KAAK,CAACQ,MAAM,CAAC,CAACkB,YAAY,CAAC,CAACP,QAAQ,GAAG,IAAI;IAC3CnB,KAAK,CAACQ,MAAM,CAAC,CAACkB,YAAY,CAAC,CAACG,QAAQ,GAAG,IAAIhB,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;IAE/DjB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAACtB,KAAK,CAAC,CAAC;IACpD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAMyB,aAAa,GAAGA,CAACtB,MAAM,EAAEgB,SAAS,KAAK;EAClD,IAAI;IACF,MAAMxB,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,IAAI,CAACC,KAAK,CAACQ,MAAM,CAAC,EAAE,OAAO,KAAK;IAEhCR,KAAK,CAACQ,MAAM,CAAC,GAAGR,KAAK,CAACQ,MAAM,CAAC,CAACuB,MAAM,CAACH,GAAG,IAAIA,GAAG,CAAChB,EAAE,KAAKY,SAAS,CAAC;IACjEvB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACmB,SAAS,CAACtB,KAAK,CAAC,CAAC;IACpD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAM2B,YAAY,GAAGA,CAAA,KAAM;EAChC,IAAI;IACF,MAAMhC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IACxB,MAAMkC,SAAS,GAAG,EAAE;IAEpBC,MAAM,CAACC,IAAI,CAACnC,KAAK,CAAC,CAACoC,OAAO,CAAC5B,MAAM,IAAI;MACnC,MAAM6B,YAAY,GAAGrC,KAAK,CAACQ,MAAM,CAAC;MAClC,IAAI6B,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMC,WAAW,GAAGF,YAAY,CAACA,YAAY,CAACC,MAAM,GAAG,CAAC,CAAC;QACzDL,SAAS,CAACb,IAAI,CAAC;UACbZ,MAAM,EAAEgC,QAAQ,CAAChC,MAAM,CAAC;UACxB+B,WAAW,EAAEA,WAAW,CAACxB,IAAI;UAC7B0B,eAAe,EAAEF,WAAW,CAACtB,SAAS;UACtCyB,WAAW,EAAE,CAAC,CAAC;QACjB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOT,SAAS,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIhC,IAAI,CAACgC,CAAC,CAACJ,eAAe,CAAC,GAAG,IAAI5B,IAAI,CAAC+B,CAAC,CAACH,eAAe,CAAC,CAAC;EAC5F,CAAC,CAAC,OAAOpC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,EAAE;EACX;AACF,CAAC;;AAED;AACA,OAAO,MAAMyC,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAI;IACF7C,YAAY,CAAC8C,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO,IAAI;EACb,CAAC,CAAC,OAAO1C,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}