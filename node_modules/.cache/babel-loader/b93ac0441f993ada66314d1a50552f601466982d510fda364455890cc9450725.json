{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\SimpleChat\\\\SimpleChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faPaperPlane, faImage } from '@fortawesome/free-solid-svg-icons';\nimport chatData from '../../data/simpleChat.json';\nimport './SimpleChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleChat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const messagesEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    loadChat();\n  }, [userId]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  const loadChat = async () => {\n    try {\n      setIsLoading(true);\n      console.log('Загружаем чат для пользователя:', userId);\n\n      // Загружаем данные пользователя\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (!token) {\n        console.log('Токен не найден, перенаправляем на логин');\n        navigate('/login');\n        return;\n      }\n      console.log('Отправляем запрос к API:', `http://localhost:8000/api/users/${userId}/`);\n      const response = await fetch(`http://localhost:8000/api/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log('Данные пользователя:', responseData);\n        if (responseData.success && responseData.user) {\n          const userData = responseData.user;\n\n          // Формируем имя пользователя\n          let userName = 'Пользователь';\n          if (userData.first_name && userData.last_name) {\n            userName = `${userData.first_name} ${userData.last_name}`.trim();\n          } else if (userData.first_name) {\n            userName = userData.first_name;\n          } else if (userData.username) {\n            userName = userData.username;\n          }\n          const userDataToSet = {\n            id: userData.id,\n            name: userName,\n            avatar: userData.avatar,\n            lastSeen: '3 м назад',\n            isOnline: false\n          };\n          console.log('Устанавливаем данные пользователя:', userDataToSet);\n          setUser(userDataToSet);\n        } else {\n          console.error('Ошибка получения данных пользователя:', responseData.message);\n          navigate('/friends');\n          return;\n        }\n      } else {\n        console.error('Пользователь не найден');\n        navigate('/friends');\n        return;\n      }\n\n      // Загружаем сообщения чата\n      await loadChatMessages();\n    } catch (error) {\n      console.error('Ошибка загрузки чата:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadChatMessages = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (!token) return;\n\n      // Ищем существующий чат\n      const chatsResponse = await fetch('http://localhost:8000/api/users/chats/', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (chatsResponse.ok) {\n        const chatsData = await chatsResponse.json();\n        if (chatsData.success && chatsData.chats) {\n          const existingChat = chatsData.chats.find(chat => chat.other_participant && chat.other_participant.id === parseInt(userId));\n          if (existingChat) {\n            // Загружаем сообщения существующего чата\n            const messagesResponse = await fetch(`http://localhost:8000/api/users/chats/${existingChat.id}/`, {\n              headers: {\n                'Authorization': `Bearer ${token}`,\n                'Content-Type': 'application/json'\n              }\n            });\n            if (messagesResponse.ok) {\n              const messagesData = await messagesResponse.json();\n              if (messagesData.success && messagesData.messages) {\n                const formattedMessages = messagesData.messages.map(msg => ({\n                  id: msg.id,\n                  text: msg.content,\n                  timestamp: msg.created_at,\n                  isOwn: msg.sender_name === 'Вы',\n                  messageType: msg.message_type,\n                  fileUrl: msg.file_url\n                }));\n                setMessages(formattedMessages);\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      if (!token) return;\n\n      // Ищем или создаем чат\n      let chatId = null;\n      const chatsResponse = await fetch('http://localhost:8000/api/users/chats/', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (chatsResponse.ok) {\n        const chatsData = await chatsResponse.json();\n        if (chatsData.success && chatsData.chats) {\n          const existingChat = chatsData.chats.find(chat => chat.other_participant && chat.other_participant.id === parseInt(userId));\n          if (existingChat) {\n            chatId = existingChat.id;\n          }\n        }\n      }\n\n      // Если чат не найден, создаем новый\n      if (!chatId) {\n        const createResponse = await fetch('http://localhost:8000/api/users/chats/create/', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            participant_id: parseInt(userId)\n          })\n        });\n        if (createResponse.ok) {\n          const createData = await createResponse.json();\n          if (createData.success && createData.chat) {\n            chatId = createData.chat.id;\n          }\n        }\n      }\n      if (!chatId) {\n        alert('Не удалось создать или найти чат');\n        return;\n      }\n\n      // Отправляем сообщение\n      const messageResponse = await fetch(`http://localhost:8000/api/users/chats/${chatId}/messages/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newMessage.trim(),\n          message_type: 'text'\n        })\n      });\n      if (messageResponse.ok) {\n        const messageData = await messageResponse.json();\n        if (messageData.success) {\n          // Добавляем новое сообщение в список\n          const newMsg = {\n            id: messageData.message.id,\n            text: messageData.message.content,\n            timestamp: messageData.message.created_at,\n            isOwn: true,\n            messageType: messageData.message.message_type\n          };\n          setMessages(prev => [...prev, newMsg]);\n        }\n      }\n\n      // Очищаем поле ввода\n      setNewMessage('');\n    } catch (error) {\n      console.error('Ошибка отправки сообщения:', error);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleFileSelect = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Здесь можно добавить логику отправки файла\n      console.log('Выбран файл:', file.name);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0447\\u0430\\u0442\\u0430...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"simple-chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-error\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/friends'),\n          children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043A \\u0434\\u0440\\u0443\\u0437\\u044C\\u044F\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/chats'),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"user-name\",\n          children: user ? user.name : 'Загрузка...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-title\",\n          children: chatData.emptyState.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-subtitle\",\n          children: chatData.emptyState.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.isOwn ? 'my-message' : 'incoming-message'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-text\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: formatTime(message.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleFileSelect,\n          style: {\n            display: 'none'\n          },\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"attach-button\",\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !newMessage.trim(),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleChat, \"I/nGw6nLJNdOdXgS4F5UXc65IgA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SimpleChat;\nexport default SimpleChat;\nvar _c;\n$RefreshReg$(_c, \"SimpleChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","FontAwesomeIcon","faArrowLeft","faPaperPlane","faImage","chatData","jsxDEV","_jsxDEV","SimpleChat","_s","userId","navigate","messagesEndRef","fileInputRef","messages","setMessages","newMessage","setNewMessage","user","setUser","isLoading","setIsLoading","loadChat","scrollToBottom","current","scrollIntoView","behavior","console","log","token","localStorage","getItem","sessionStorage","response","fetch","headers","ok","responseData","json","success","userData","userName","first_name","last_name","trim","username","userDataToSet","id","name","avatar","lastSeen","isOnline","error","message","loadChatMessages","chatsResponse","chatsData","chats","existingChat","find","chat","other_participant","parseInt","messagesResponse","messagesData","formattedMessages","map","msg","text","content","timestamp","created_at","isOwn","sender_name","messageType","message_type","fileUrl","file_url","handleSendMessage","chatId","createResponse","method","body","JSON","stringify","participant_id","createData","alert","messageResponse","messageData","newMsg","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleFileSelect","file","target","files","formatTime","date","Date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","length","emptyState","title","subtitle","ref","type","onChange","style","display","accept","_fileInputRef$current","click","placeholder","value","onKeyPress","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/SimpleChat/SimpleChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faArrowLeft, \r\n  faPaperPlane, \r\n  faImage\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport chatData from '../../data/simpleChat.json';\r\nimport './SimpleChat.css';\r\n\r\nconst SimpleChat = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const messagesEndRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  \r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadChat();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const loadChat = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Загружаем чат для пользователя:', userId);\r\n      \r\n      // Загружаем данные пользователя\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      if (!token) {\r\n        console.log('Токен не найден, перенаправляем на логин');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      console.log('Отправляем запрос к API:', `http://localhost:8000/api/users/${userId}/`);\r\n      const response = await fetch(`http://localhost:8000/api/users/${userId}/`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        console.log('Данные пользователя:', responseData);\r\n        \r\n        if (responseData.success && responseData.user) {\r\n          const userData = responseData.user;\r\n          \r\n          // Формируем имя пользователя\r\n          let userName = 'Пользователь';\r\n          if (userData.first_name && userData.last_name) {\r\n            userName = `${userData.first_name} ${userData.last_name}`.trim();\r\n          } else if (userData.first_name) {\r\n            userName = userData.first_name;\r\n          } else if (userData.username) {\r\n            userName = userData.username;\r\n          }\r\n\r\n          const userDataToSet = {\r\n            id: userData.id,\r\n            name: userName,\r\n            avatar: userData.avatar,\r\n            lastSeen: '3 м назад',\r\n            isOnline: false\r\n          };\r\n          \r\n          console.log('Устанавливаем данные пользователя:', userDataToSet);\r\n          setUser(userDataToSet);\r\n        } else {\r\n          console.error('Ошибка получения данных пользователя:', responseData.message);\r\n          navigate('/friends');\r\n          return;\r\n        }\r\n      } else {\r\n        console.error('Пользователь не найден');\r\n        navigate('/friends');\r\n        return;\r\n      }\r\n\r\n      // Загружаем сообщения чата\r\n      await loadChatMessages();\r\n      \r\n    } catch (error) {\r\n      console.error('Ошибка загрузки чата:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadChatMessages = async () => {\r\n    try {\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      if (!token) return;\r\n\r\n      // Ищем существующий чат\r\n      const chatsResponse = await fetch('http://localhost:8000/api/users/chats/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (chatsResponse.ok) {\r\n        const chatsData = await chatsResponse.json();\r\n        if (chatsData.success && chatsData.chats) {\r\n          const existingChat = chatsData.chats.find(chat => \r\n            chat.other_participant && chat.other_participant.id === parseInt(userId)\r\n          );\r\n\r\n          if (existingChat) {\r\n            // Загружаем сообщения существующего чата\r\n            const messagesResponse = await fetch(`http://localhost:8000/api/users/chats/${existingChat.id}/`, {\r\n              headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n              }\r\n            });\r\n\r\n            if (messagesResponse.ok) {\r\n              const messagesData = await messagesResponse.json();\r\n              if (messagesData.success && messagesData.messages) {\r\n                const formattedMessages = messagesData.messages.map(msg => ({\r\n                  id: msg.id,\r\n                  text: msg.content,\r\n                  timestamp: msg.created_at,\r\n                  isOwn: msg.sender_name === 'Вы',\r\n                  messageType: msg.message_type,\r\n                  fileUrl: msg.file_url\r\n                }));\r\n                setMessages(formattedMessages);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки сообщений:', error);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!newMessage.trim()) return;\r\n\r\n    try {\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      if (!token) return;\r\n\r\n      // Ищем или создаем чат\r\n      let chatId = null;\r\n      \r\n      const chatsResponse = await fetch('http://localhost:8000/api/users/chats/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (chatsResponse.ok) {\r\n        const chatsData = await chatsResponse.json();\r\n        if (chatsData.success && chatsData.chats) {\r\n          const existingChat = chatsData.chats.find(chat => \r\n            chat.other_participant && chat.other_participant.id === parseInt(userId)\r\n          );\r\n          \r\n          if (existingChat) {\r\n            chatId = existingChat.id;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Если чат не найден, создаем новый\r\n      if (!chatId) {\r\n        const createResponse = await fetch('http://localhost:8000/api/users/chats/create/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ participant_id: parseInt(userId) })\r\n        });\r\n\r\n        if (createResponse.ok) {\r\n          const createData = await createResponse.json();\r\n          if (createData.success && createData.chat) {\r\n            chatId = createData.chat.id;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!chatId) {\r\n        alert('Не удалось создать или найти чат');\r\n        return;\r\n      }\r\n\r\n      // Отправляем сообщение\r\n      const messageResponse = await fetch(`http://localhost:8000/api/users/chats/${chatId}/messages/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          content: newMessage.trim(),\r\n          message_type: 'text'\r\n        })\r\n      });\r\n\r\n      if (messageResponse.ok) {\r\n        const messageData = await messageResponse.json();\r\n        if (messageData.success) {\r\n          // Добавляем новое сообщение в список\r\n          const newMsg = {\r\n            id: messageData.message.id,\r\n            text: messageData.message.content,\r\n            timestamp: messageData.message.created_at,\r\n            isOwn: true,\r\n            messageType: messageData.message.message_type\r\n          };\r\n          \r\n          setMessages(prev => [...prev, newMsg]);\r\n        }\r\n      }\r\n      \r\n      // Очищаем поле ввода\r\n      setNewMessage('');\r\n      \r\n    } catch (error) {\r\n      console.error('Ошибка отправки сообщения:', error);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      // Здесь можно добавить логику отправки файла\r\n      console.log('Выбран файл:', file.name);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString('ru-RU', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"simple-chat\">\r\n        <div className=\"chat-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Загрузка чата...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"simple-chat\">\r\n        <div className=\"chat-error\">\r\n          <p>Пользователь не найден</p>\r\n          <button onClick={() => navigate('/friends')}>Вернуться к друзьям</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"simple-chat\">\r\n      {/* Заголовок чата */}\r\n      <div className=\"chat-header\">\r\n        <button className=\"back-button\" onClick={() => navigate('/chats')}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n          <span>Переписки</span>\r\n        </button>\r\n        \r\n        <div className=\"chat-user-info\">\r\n          <h3 className=\"user-name\">{user ? user.name : 'Загрузка...'}</h3>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Контейнер сообщений */}\r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"empty-messages\">\r\n            <p className=\"empty-title\">{chatData.emptyState.title}</p>\r\n            <p className=\"empty-subtitle\">{chatData.emptyState.subtitle}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"messages-list\">\r\n            {messages.map((message) => (\r\n              <div \r\n                key={message.id} \r\n                className={`message ${message.isOwn ? 'my-message' : 'incoming-message'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <p className=\"message-text\">{message.text}</p>\r\n                  <span className=\"message-time\">{formatTime(message.timestamp)}</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Поле ввода сообщения */}\r\n      <div className=\"message-input-container\">\r\n        <div className=\"message-input-wrapper\">\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileSelect}\r\n            style={{ display: 'none' }}\r\n            accept=\"image/*\"\r\n          />\r\n          \r\n          <button \r\n            className=\"attach-button\"\r\n            onClick={() => fileInputRef.current?.click()}\r\n          >\r\n            <FontAwesomeIcon icon={faImage} />\r\n          </button>\r\n          \r\n          <input\r\n            type=\"text\"\r\n            className=\"message-input\"\r\n            placeholder=\"Ваше сообщение\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          \r\n          <button \r\n            className=\"send-button\"\r\n            onClick={handleSendMessage}\r\n            disabled={!newMessage.trim()}\r\n          >\r\n            <FontAwesomeIcon icon={faPaperPlane} />\r\n            <span>Отправить</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}