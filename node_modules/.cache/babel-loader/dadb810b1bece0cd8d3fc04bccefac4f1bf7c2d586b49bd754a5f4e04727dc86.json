{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ChatModal\\\\ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTimes, faTrash, faReply } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport { makeAuthenticatedRequest } from '../../utils/auth';\nimport MessageActionsModal from '../MessageActionsModal/MessageActionsModal';\nimport './ChatModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatModal = ({\n  isOpen,\n  onClose,\n  userId,\n  userName,\n  onChatCreated\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const [showMessageMenu, setShowMessageMenu] = useState(null);\n  const [replyToMessage, setReplyToMessage] = useState(null);\n  const [clickedMessageId, setClickedMessageId] = useState(null);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showActionsModal, setShowActionsModal] = useState(false);\n  const chatIdRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      // chatWebSocket.leaveChat(); // Отключено для отладки\n    };\n  }, [isOpen, userId]);\n  const setupWebSocket = () => {\n    // Временно отключаем WebSocket для отладки\n    console.log('WebSocket setup skipped for debugging');\n    return;\n\n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', message => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n    chatWebSocket.onMessage('user_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n\n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n    chatWebSocket.onMessage('user_stop_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleAvatarClick = senderId => {\n    // Закрываем модальное окно и переходим на страницу профиля пользователя\n    onClose();\n    navigate(`/profile/${senderId}`);\n  };\n  const handleReplyToMessage = message => {\n    setReplyToMessage(message);\n    setClickedMessageId(null);\n  };\n  const cancelReply = () => {\n    setReplyToMessage(null);\n  };\n  const handleMessageClick = message => {\n    console.log('Клик по сообщению в ChatModal:', message);\n    setSelectedMessage(message);\n    setShowActionsModal(true);\n  };\n  const closeMessageMenu = () => {\n    setClickedMessageId(null);\n  };\n  const closeActionsModal = () => {\n    setShowActionsModal(false);\n    setSelectedMessage(null);\n  };\n  const handleEditMessage = async (messageId, newContent) => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/messages/${messageId}/update/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newContent\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          // Обновляем сообщение в локальном состоянии\n          setMessages(prev => prev.map(msg => msg.id === messageId ? {\n            ...msg,\n            content: newContent,\n            is_edited: true\n          } : msg));\n        }\n      } else {\n        console.error('Ошибка редактирования сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка редактирования сообщения:', error);\n    }\n  };\n  const handleDeleteMessage = async messageId => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/messages/${messageId}/delete/`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          // Удаляем сообщение из локального состояния\n          setMessages(prev => prev.filter(msg => msg.id !== messageId));\n        }\n      } else {\n        console.error('Ошибка удаления сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка удаления сообщения:', error);\n    }\n  };\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n        return null;\n      }\n    }\n    return null;\n  };\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/api/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n  const loadChatMessages = async () => {\n    try {\n      console.log('Loading chat messages...');\n\n      // Сначала проверяем, есть ли уже чат с этим пользователем\n      const chatResponse = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/`);\n      if (chatResponse.ok) {\n        const chatData = await chatResponse.json();\n        console.log('Chat data received:', chatData);\n        const existingChat = chatData.chats.find(chat => chat.participants.some(p => p.id === parseInt(userId)));\n        if (existingChat) {\n          chatIdRef.current = existingChat.id;\n          // Загружаем сообщения существующего чата\n          const messagesResponse = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/`);\n          if (messagesResponse.ok) {\n            const messagesData = await messagesResponse.json();\n            console.log('Загружены сообщения:', messagesData);\n            if (messagesData.success && messagesData.messages) {\n              setMessages(messagesData.messages);\n            }\n          } else {\n            console.error('Ошибка загрузки сообщений:', messagesResponse.status, await messagesResponse.text());\n          }\n        } else {\n          // Чат не существует, показываем пустой список\n          setMessages([]);\n        }\n      } else {\n        console.error('Ошибка загрузки чатов:', chatResponse.status, await chatResponse.text());\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n      setMessages([]);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    try {\n      // Отправляем сообщение через API\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/create/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: messageContent,\n          message_type: 'text',\n          reply_to: replyToMessage ? replyToMessage.id : null\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          // Добавляем сообщение в локальное состояние\n          setMessages(prev => [...prev, data.message]);\n          scrollToBottom();\n\n          // Сбрасываем ответ на сообщение\n          if (replyToMessage) {\n            setReplyToMessage(null);\n          }\n        }\n      } else {\n        console.error('Ошибка отправки сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка отправки сообщения:', error);\n    }\n\n    // Останавливаем индикатор печати (отключено для отладки)\n    // chatWebSocket.stopTyping(userId);\n  };\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n\n    // Управление индикатором печати (отключено для отладки)\n    // if (e.target.value.trim()) {\n    //   chatWebSocket.startTyping(userId);\n    //   \n    //   // Очищаем предыдущий таймаут\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    //   \n    //   // Устанавливаем новый таймаут для остановки индикатора\n    //   typingTimeoutRef.current = setTimeout(() => {\n    //     chatWebSocket.stopTyping(userId);\n    //   }, 1000);\n    // } else {\n    //   chatWebSocket.stopTyping(userId);\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    // }\n  };\n  if (!isOpen) return null;\n  const displayName = user ? user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : user.first_name || user.username || 'Пользователь' : userName || 'Пользователь';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-modal-overlay\",\n    onClick: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"user-name\",\n            children: displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-status\",\n            children: \"\\u0411\\u044B\\u043B\\u0430 \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D: 3 \\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-messages\",\n        onClick: closeMessageMenu,\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-messages\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-title\",\n            children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-subtitle\",\n            children: \"\\u0421\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A \\u043D\\u0435 \\u0432\\u0438\\u0434\\u0438\\u0442 \\u044D\\u0442\\u0443 \\u043F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0443.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-list\",\n          children: [messages.map(message => {\n            // Получаем ID пользователя из userData\n            const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n            let currentUserId = null;\n            if (userDataString) {\n              try {\n                const userData = JSON.parse(userDataString);\n                currentUserId = parseInt(userData.id);\n              } catch (error) {\n                console.error('Ошибка парсинга userData:', error);\n              }\n            }\n            const messageSenderId = parseInt(message.sender);\n            const isMyMessage = messageSenderId === currentUserId;\n\n            // Получаем информацию об отправителе\n            const senderInfo = message.sender_info || {};\n            const senderName = senderInfo.first_name && senderInfo.last_name ? `${senderInfo.first_name} ${senderInfo.last_name}` : senderInfo.first_name || senderInfo.username || 'Пользователь';\n            const senderAvatar = senderInfo.avatar || '/images/default-avatar.svg';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${isMyMessage ? 'my-message' : 'incoming-message'} ${clickedMessageId === message.id ? 'message-selected' : ''}`,\n              onClick: () => handleMessageClick(message),\n              children: [!isMyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-avatar clickable-avatar\",\n                onClick: () => handleAvatarClick(messageSenderId),\n                title: `Перейти к профилю ${senderName}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: senderAvatar,\n                  alt: senderName,\n                  onError: e => {\n                    e.target.src = '/images/default-avatar.svg';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-wrapper\",\n                children: [!isMyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-sender-name clickable-name\",\n                  onClick: () => handleAvatarClick(messageSenderId),\n                  title: `Перейти к профилю ${senderName}`,\n                  children: senderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  style: isMyMessage ? {\n                    backgroundColor: '#007bff',\n                    color: 'white'\n                  } : {\n                    backgroundColor: '#ffffff',\n                    color: 'black'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: message.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"message-footer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"message-time\",\n                      children: [new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      }), message.is_edited && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"edited-indicator\",\n                        children: \" (\\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u043E)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 410,\n                        columnNumber: 51\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 27\n                    }, this), clickedMessageId === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"message-actions\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button reply-button\",\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleReplyToMessage(message);\n                        },\n                        title: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u0438\\u0442\\u044C\",\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faReply\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 424,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 31\n                      }, this), isMyMessage && /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button delete-button\",\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleDeleteMessage(message.id);\n                        },\n                        title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faTrash\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 436,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)]\n            }, message.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this);\n          }), isTyping && typingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"typing-text\",\n              children: [typingUser, \" \\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0435\\u0442...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"message-input\",\n            placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            value: newMessage,\n            onChange: handleInputChange,\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: handleSendMessage,\n            disabled: !newMessage.trim() || loading,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageActionsModal, {\n      isOpen: showActionsModal,\n      onClose: closeActionsModal,\n      message: selectedMessage,\n      onEdit: handleEditMessage,\n      onDelete: handleDeleteMessage,\n      isMyMessage: selectedMessage ? parseInt(selectedMessage.sender) === getCurrentUserId() : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatModal, \"WQIjxFxr0yDlmc/ZUIXCBKjjLl0=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","FontAwesomeIcon","faPaperPlane","faTimes","faTrash","faReply","chatWebSocket","makeAuthenticatedRequest","MessageActionsModal","jsxDEV","_jsxDEV","ChatModal","isOpen","onClose","userId","userName","onChatCreated","_s","navigate","messages","setMessages","newMessage","setNewMessage","user","setUser","loading","setLoading","isTyping","setIsTyping","typingUser","setTypingUser","showMessageMenu","setShowMessageMenu","replyToMessage","setReplyToMessage","clickedMessageId","setClickedMessageId","selectedMessage","setSelectedMessage","showActionsModal","setShowActionsModal","chatIdRef","messagesEndRef","typingTimeoutRef","loadUserData","loadChatMessages","setupWebSocket","current","clearTimeout","console","log","connect","joinChat","onMessage","message","prev","scrollToBottom","data","user_id","getCurrentUserId","user_name","setTimeout","_messagesEndRef$curre","scrollIntoView","behavior","handleAvatarClick","senderId","handleReplyToMessage","cancelReply","handleMessageClick","closeMessageMenu","closeActionsModal","handleEditMessage","messageId","newContent","response","method","headers","body","JSON","stringify","content","ok","json","success","map","msg","id","is_edited","error","status","handleDeleteMessage","filter","userDataString","localStorage","getItem","sessionStorage","userData","parse","parseInt","token","fetch","chatResponse","chatData","existingChat","chats","find","chat","participants","some","p","messagesResponse","messagesData","text","handleSendMessage","e","preventDefault","trim","messageContent","message_type","reply_to","handleInputChange","target","value","displayName","first_name","last_name","username","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","icon","length","currentUserId","messageSenderId","sender","isMyMessage","senderInfo","sender_info","senderName","senderAvatar","avatar","title","src","alt","onError","style","backgroundColor","color","Date","created_at","toLocaleTimeString","hour","minute","ref","type","placeholder","onChange","onKeyPress","key","disabled","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ChatModal/ChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTimes, faTrash, faReply } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport { makeAuthenticatedRequest } from '../../utils/auth';\nimport MessageActionsModal from '../MessageActionsModal/MessageActionsModal';\nimport './ChatModal.css';\n\nconst ChatModal = ({ isOpen, onClose, userId, userName, onChatCreated }) => {\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const [showMessageMenu, setShowMessageMenu] = useState(null);\n  const [replyToMessage, setReplyToMessage] = useState(null);\n  const [clickedMessageId, setClickedMessageId] = useState(null);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showActionsModal, setShowActionsModal] = useState(false);\n  const chatIdRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (isOpen && userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      // chatWebSocket.leaveChat(); // Отключено для отладки\n    };\n  }, [isOpen, userId]);\n\n  const setupWebSocket = () => {\n    // Временно отключаем WebSocket для отладки\n    console.log('WebSocket setup skipped for debugging');\n    return;\n    \n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n\n    chatWebSocket.onMessage('user_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n        \n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n\n    chatWebSocket.onMessage('user_stop_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleAvatarClick = (senderId) => {\n    // Закрываем модальное окно и переходим на страницу профиля пользователя\n    onClose();\n    navigate(`/profile/${senderId}`);\n  };\n\n\n  const handleReplyToMessage = (message) => {\n    setReplyToMessage(message);\n    setClickedMessageId(null);\n  };\n\n  const cancelReply = () => {\n    setReplyToMessage(null);\n  };\n\n  const handleMessageClick = (message) => {\n    console.log('Клик по сообщению в ChatModal:', message);\n    setSelectedMessage(message);\n    setShowActionsModal(true);\n  };\n\n  const closeMessageMenu = () => {\n    setClickedMessageId(null);\n  };\n\n  const closeActionsModal = () => {\n    setShowActionsModal(false);\n    setSelectedMessage(null);\n  };\n\n  const handleEditMessage = async (messageId, newContent) => {\n    try {\n      const response = await makeAuthenticatedRequest(\n        `http://localhost:8000/api/users/async/messages/${messageId}/update/`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            content: newContent\n          })\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          // Обновляем сообщение в локальном состоянии\n          setMessages(prev => prev.map(msg => \n            msg.id === messageId ? { ...msg, content: newContent, is_edited: true } : msg\n          ));\n        }\n      } else {\n        console.error('Ошибка редактирования сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка редактирования сообщения:', error);\n    }\n  };\n\n  const handleDeleteMessage = async (messageId) => {\n    try {\n      const response = await makeAuthenticatedRequest(\n        `http://localhost:8000/api/users/async/messages/${messageId}/delete/`,\n        {\n          method: 'DELETE'\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          // Удаляем сообщение из локального состояния\n          setMessages(prev => prev.filter(msg => msg.id !== messageId));\n        }\n      } else {\n        console.error('Ошибка удаления сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка удаления сообщения:', error);\n    }\n  };\n\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n        return null;\n      }\n    }\n    return null;\n  };\n\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/api/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n\n  const loadChatMessages = async () => {\n    try {\n      console.log('Loading chat messages...');\n      \n      // Сначала проверяем, есть ли уже чат с этим пользователем\n      const chatResponse = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/`);\n\n      if (chatResponse.ok) {\n        const chatData = await chatResponse.json();\n        console.log('Chat data received:', chatData);\n        const existingChat = chatData.chats.find(chat => \n          chat.participants.some(p => p.id === parseInt(userId))\n        );\n        \n        if (existingChat) {\n          chatIdRef.current = existingChat.id;\n          // Загружаем сообщения существующего чата\n          const messagesResponse = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/`);\n          \n          if (messagesResponse.ok) {\n            const messagesData = await messagesResponse.json();\n            console.log('Загружены сообщения:', messagesData);\n            if (messagesData.success && messagesData.messages) {\n              setMessages(messagesData.messages);\n            }\n          } else {\n            console.error('Ошибка загрузки сообщений:', messagesResponse.status, await messagesResponse.text());\n          }\n        } else {\n          // Чат не существует, показываем пустой список\n          setMessages([]);\n        }\n      } else {\n        console.error('Ошибка загрузки чатов:', chatResponse.status, await chatResponse.text());\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n      setMessages([]);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    \n    try {\n      // Отправляем сообщение через API\n      const response = await makeAuthenticatedRequest(\n        `http://localhost:8000/api/users/async/chats/${userId}/messages/create/`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            content: messageContent,\n            message_type: 'text',\n            reply_to: replyToMessage ? replyToMessage.id : null\n          })\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          // Добавляем сообщение в локальное состояние\n          setMessages(prev => [...prev, data.message]);\n          scrollToBottom();\n          \n          // Сбрасываем ответ на сообщение\n          if (replyToMessage) {\n            setReplyToMessage(null);\n          }\n        }\n      } else {\n        console.error('Ошибка отправки сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка отправки сообщения:', error);\n    }\n    \n    // Останавливаем индикатор печати (отключено для отладки)\n    // chatWebSocket.stopTyping(userId);\n  };\n\n  const handleInputChange = (e) => {\n    setNewMessage(e.target.value);\n    \n    // Управление индикатором печати (отключено для отладки)\n    // if (e.target.value.trim()) {\n    //   chatWebSocket.startTyping(userId);\n    //   \n    //   // Очищаем предыдущий таймаут\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    //   \n    //   // Устанавливаем новый таймаут для остановки индикатора\n    //   typingTimeoutRef.current = setTimeout(() => {\n    //     chatWebSocket.stopTyping(userId);\n    //   }, 1000);\n    // } else {\n    //   chatWebSocket.stopTyping(userId);\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    // }\n  };\n\n  if (!isOpen) return null;\n\n  const displayName = user ? \n    (user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : \n     user.first_name || user.username || 'Пользователь') : \n    userName || 'Пользователь';\n\n  return (\n    <div className=\"chat-modal-overlay\" onClick={onClose}>\n      <div className=\"chat-modal\" onClick={(e) => e.stopPropagation()}>\n        {/* Заголовок модального окна */}\n        <div className=\"chat-modal-header\">\n          <div className=\"chat-user-info\">\n            <h3 className=\"user-name\">{displayName}</h3>\n            <p className=\"user-status\">Была онлайн: 3 м</p>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n\n        {/* Контейнер сообщений */}\n        <div className=\"chat-modal-messages\" onClick={closeMessageMenu}>\n          {messages.length === 0 ? (\n            <div className=\"empty-messages\">\n              <p className=\"empty-title\">Сообщений нет.</p>\n              <p className=\"empty-subtitle\">Собеседник не видит эту переписку.</p>\n            </div>\n          ) : (\n            <div className=\"messages-list\">\n              {messages.map((message) => {\n                // Получаем ID пользователя из userData\n                const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n                let currentUserId = null;\n                if (userDataString) {\n                  try {\n                    const userData = JSON.parse(userDataString);\n                    currentUserId = parseInt(userData.id);\n                  } catch (error) {\n                    console.error('Ошибка парсинга userData:', error);\n                  }\n                }\n                \n                const messageSenderId = parseInt(message.sender);\n                const isMyMessage = messageSenderId === currentUserId;\n                \n                // Получаем информацию об отправителе\n                const senderInfo = message.sender_info || {};\n                const senderName = senderInfo.first_name && senderInfo.last_name \n                  ? `${senderInfo.first_name} ${senderInfo.last_name}`\n                  : senderInfo.first_name || senderInfo.username || 'Пользователь';\n                const senderAvatar = senderInfo.avatar || '/images/default-avatar.svg';\n\n                return (\n                  <div \n                    key={message.id} \n                    className={`message ${isMyMessage ? 'my-message' : 'incoming-message'} ${clickedMessageId === message.id ? 'message-selected' : ''}`}\n                    onClick={() => handleMessageClick(message)}\n                  >\n                    {!isMyMessage && (\n                      <div \n                        className=\"message-avatar clickable-avatar\"\n                        onClick={() => handleAvatarClick(messageSenderId)}\n                        title={`Перейти к профилю ${senderName}`}\n                      >\n                        <img \n                          src={senderAvatar} \n                          alt={senderName}\n                          onError={(e) => {\n                            e.target.src = '/images/default-avatar.svg';\n                          }}\n                        />\n                      </div>\n                    )}\n                    <div className=\"message-wrapper\">\n                      {!isMyMessage && (\n                        <div \n                          className=\"message-sender-name clickable-name\"\n                          onClick={() => handleAvatarClick(messageSenderId)}\n                          title={`Перейти к профилю ${senderName}`}\n                        >\n                          {senderName}\n                        </div>\n                      )}\n                      <div className=\"message-content\" style={isMyMessage ? {backgroundColor: '#007bff', color: 'white'} : {backgroundColor: '#ffffff', color: 'black'}}>\n                        <p>{message.content}</p>\n                        <div className=\"message-footer\">\n                          <span className=\"message-time\">\n                            {new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                              hour: '2-digit',\n                              minute: '2-digit'\n                            })}\n                            {message.is_edited && <span className=\"edited-indicator\"> (изменено)</span>}\n                          </span>\n                          \n                          {/* Кнопки действий */}\n                          {clickedMessageId === message.id && (\n                            <div className=\"message-actions\">\n                              <button \n                                className=\"action-button reply-button\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleReplyToMessage(message);\n                                }}\n                                title=\"Ответить\"\n                              >\n                                <FontAwesomeIcon icon={faReply} />\n                              </button>\n                              \n                              {isMyMessage && (\n                                <button \n                                  className=\"action-button delete-button\"\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleDeleteMessage(message.id);\n                                  }}\n                                  title=\"Удалить\"\n                                >\n                                  <FontAwesomeIcon icon={faTrash} />\n                                </button>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n              \n              {/* Индикатор печати */}\n              {isTyping && typingUser && (\n                <div className=\"typing-indicator\">\n                  <div className=\"typing-dots\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                  <span className=\"typing-text\">{typingUser} печатает...</span>\n                </div>\n              )}\n              \n              {/* Элемент для автоматической прокрутки */}\n              <div ref={messagesEndRef} />\n            </div>\n          )}\n        </div>\n\n        {/* Поле ввода сообщения */}\n        <div className=\"chat-modal-input\">\n          <div className=\"message-input-wrapper\">\n            <input\n              type=\"text\"\n              className=\"message-input\"\n              placeholder=\"Ваше сообщение\"\n              value={newMessage}\n              onChange={handleInputChange}\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(e)}\n            />\n            <button \n              className=\"send-button\" \n              onClick={handleSendMessage}\n              disabled={!newMessage.trim() || loading}\n            >\n              <FontAwesomeIcon icon={faPaperPlane} />\n              <span>Отправить</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Модальное окно действий с сообщением */}\n      <MessageActionsModal\n        isOpen={showActionsModal}\n        onClose={closeActionsModal}\n        message={selectedMessage}\n        onEdit={handleEditMessage}\n        onDelete={handleDeleteMessage}\n        isMyMessage={selectedMessage ? parseInt(selectedMessage.sender) === getCurrentUserId() : false}\n      />\n    </div>\n  );\n};\n\nexport default ChatModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}