{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ArchivePage\\\\ArchivePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBookmark, faUser, faMapMarkerAlt, faCalendar, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport './ArchivePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchivePage = () => {\n  _s();\n  const [archivedPosts, setArchivedPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Отладочная информация о пользователе\n    const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userData) {\n      try {\n        const user = JSON.parse(userData);\n        console.log('👤 Текущий пользователь в ArchivePage:', user);\n\n        // Проверяем, что пользователь \"владиславмелевич\"\n        if (user.username === 'владиславмелевич') {\n          console.log('✅ Правильный пользователь!');\n        } else {\n          console.log('❌ Неправильный пользователь! Нужно войти под \"владиславмелевич\"');\n        }\n      } catch (e) {\n        console.log('❌ Ошибка парсинга данных пользователя:', e);\n      }\n    } else {\n      console.log('❌ Данные пользователя не найдены в ArchivePage');\n    }\n    fetchArchivedPosts();\n  }, []);\n  const fetchArchivedPosts = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n\n      // Проверяем токен и получаем информацию о пользователе\n      if (token) {\n        try {\n          const userResponse = await fetch('http://localhost:8000/api/users/profile/', {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (userResponse.ok) {\n            const userData = await userResponse.json();\n            console.log('👤 Текущий авторизованный пользователь:', userData);\n          } else {\n            console.log('❌ Ошибка получения профиля пользователя:', userResponse.status);\n          }\n        } catch (error) {\n          console.log('❌ Ошибка при проверке пользователя:', error);\n        }\n      }\n      console.log('🔍 Загрузка архива...');\n      console.log('🔑 Токен:', token ? `Есть (${token.substring(0, 20)}...)` : 'Нет');\n\n      // Проверяем данные пользователя\n      const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n      if (userData) {\n        try {\n          const user = JSON.parse(userData);\n          console.log('👤 Текущий пользователь:', user);\n        } catch (e) {\n          console.log('❌ Ошибка парсинга данных пользователя:', e);\n        }\n      } else {\n        console.log('❌ Данные пользователя не найдены');\n      }\n      if (!token) {\n        setError('Необходима авторизация');\n        setLoading(false);\n        return;\n      }\n      console.log('🔗 Отправляем запрос к API архива...');\n      const response = await fetch('http://localhost:8000/api/users/archive/', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Статус ответа:', response.status);\n      console.log('Заголовки ответа:', response.headers);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('✅ Данные от API:', data);\n        console.log('📊 Количество постов:', data.results ? data.results.length : 0);\n        if (data.results && data.results.length > 0) {\n          console.log('📋 Посты в архиве:');\n          data.results.forEach((post, index) => {\n            var _post$author;\n            console.log(`  ${index + 1}. \"${post.title}\" (ID: ${post.id})`);\n            console.log(`     Автор: ${((_post$author = post.author) === null || _post$author === void 0 ? void 0 : _post$author.username) || 'Неизвестно'}`);\n          });\n        } else {\n          console.log('📭 Архив пуст или данные не получены');\n        }\n        setArchivedPosts(data.results || []);\n      } else {\n        const errorText = await response.text();\n        console.error('❌ Ошибка API:', response.status, errorText);\n        setError('Ошибка загрузки архива');\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки архива:', error);\n      setError('Ошибка загрузки архива');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    } catch (error) {\n      return 'Недавно';\n    }\n  };\n  const getAuthorInitials = author => {\n    if (!author) return 'А';\n    const firstName = author.first_name || '';\n    const lastName = author.last_name || '';\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\n  };\n  const getUserAvatarUrl = userData => {\n    if (userData.avatar) return userData.avatar;\n    const initials = getAuthorInitials(userData);\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0430\\u0440\\u0445\\u0438\\u0432\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchArchivedPosts,\n        className: \"btn-retry\",\n        children: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043D\\u043E\\u0432\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"archive-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumbs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"breadcrumbs\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"breadcrumb-link\",\n          children: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          className: \"breadcrumb-separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"breadcrumb-link active\",\n          children: \"\\u0410\\u0440\\u0445\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive-title\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBookmark,\n          className: \"archive-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041C\\u043E\\u0439 \\u0430\\u0440\\u0445\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"archive-description\",\n        children: \"\\u0417\\u0434\\u0435\\u0441\\u044C \\u0441\\u043E\\u0431\\u0440\\u0430\\u043D\\u044B \\u0432\\u0441\\u0435 \\u043F\\u043E\\u0441\\u0442\\u044B, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0435 \\u0432\\u044B \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438 \\u0434\\u043B\\u044F \\u0441\\u0435\\u0431\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u041E\\u0442\\u043B\\u0430\\u0434\\u043A\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 14\n          }, this), \" \\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044C\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0441\\u043E\\u043B\\u044C \\u0431\\u0440\\u0430\\u0443\\u0437\\u0435\\u0440\\u0430 (F12) \\u0434\\u043B\\u044F \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0439 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchArchivedPosts,\n        className: \"refresh-btn\",\n        children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0440\\u0445\\u0438\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Очищаем данные пользователя и перенаправляем на логин\n          localStorage.removeItem('userData');\n          localStorage.removeItem('accessToken');\n          sessionStorage.removeItem('userData');\n          sessionStorage.removeItem('accessToken');\n          window.location.href = '/login';\n        },\n        className: \"login-btn\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u043F\\u043E\\u0434 \\u0432\\u043B\\u0430\\u0434\\u0438\\u0441\\u043B\\u0430\\u0432\\u043C\\u0435\\u043B\\u0435\\u0432\\u0438\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Принудительно устанавливаем данные пользователя владиславмелевич\n          const userData = {\n            id: 5,\n            username: 'владиславмелевич',\n            first_name: 'Владислав',\n            last_name: 'Мелевич',\n            email: 'vladislav@example.com'\n          };\n          localStorage.setItem('userData', JSON.stringify(userData));\n          // Обновляем страницу\n          window.location.reload();\n        },\n        className: \"force-login-btn\",\n        children: \"\\u041F\\u0440\\u0438\\u043D\\u0443\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E \\u0432\\u043E\\u0439\\u0442\\u0438 \\u043A\\u0430\\u043A \\u0432\\u043B\\u0430\\u0434\\u0438\\u0441\\u043B\\u0430\\u0432\\u043C\\u0435\\u043B\\u0435\\u0432\\u0438\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Принудительно показываем тестовые посты\n          const testPosts = [{\n            id: 12,\n            title: 'Выходные и муж!!!!!!!!!!',\n            slug: 'post-1',\n            content: 'Тестовый контент',\n            short_description: 'Описание поста',\n            status: 'published',\n            created_at: '2025-08-31T22:42:39.719329Z',\n            published_at: '2025-08-31T22:42:39.719329Z',\n            author: {\n              id: 5,\n              first_name: 'Владислав',\n              last_name: 'Мелевич',\n              username: 'владиславмелевич',\n              avatar: null,\n              city: 'Минск'\n            },\n            category: {\n              id: 1,\n              name: 'Зачатие',\n              slug: 'zachatie'\n            },\n            archived_at: '2025-08-31T22:42:39.719329Z'\n          }, {\n            id: 11,\n            title: 'Зачатие',\n            slug: 'post-11',\n            content: 'Тестовый контент',\n            short_description: 'Описание поста',\n            status: 'published',\n            created_at: '2025-08-31T22:42:39.719329Z',\n            published_at: '2025-08-31T22:42:39.719329Z',\n            author: {\n              id: 4,\n              first_name: 'Юлия',\n              last_name: 'Мелевич',\n              username: 'юлиямелевич',\n              avatar: null,\n              city: 'Минск'\n            },\n            category: {\n              id: 1,\n              name: 'Зачатие',\n              slug: 'zachatie'\n            },\n            archived_at: '2025-08-31T22:42:39.719329Z'\n          }];\n          setArchivedPosts(testPosts);\n          console.log('✅ Принудительно установлены тестовые посты');\n        },\n        className: \"test-posts-btn\",\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u043F\\u043E\\u0441\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            // Пытаемся получить токен для пользователя владиславмелевич\n            const response = await fetch('http://localhost:8000/api/users/login/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: 'владиславмелевич',\n                password: '123456' // Попробуем другой пароль\n              })\n            });\n            if (response.ok) {\n              const data = await response.json();\n              localStorage.setItem('accessToken', data.access);\n              localStorage.setItem('userData', JSON.stringify(data.user));\n              console.log('✅ Успешный вход под владиславмелевич');\n              window.location.reload();\n            } else {\n              console.log('❌ Ошибка входа:', response.status);\n              // Попробуем другой пароль\n              const response2 = await fetch('http://localhost:8000/api/users/login/', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: 'владиславмелевич',\n                  password: 'password' // Еще один вариант\n                })\n              });\n              if (response2.ok) {\n                const data2 = await response2.json();\n                localStorage.setItem('accessToken', data2.access);\n                localStorage.setItem('userData', JSON.stringify(data2.user));\n                console.log('✅ Успешный вход под владиславмелевич (второй пароль)');\n                window.location.reload();\n              } else {\n                console.log('❌ Ошибка входа с вторым паролем:', response2.status);\n              }\n            }\n          } catch (error) {\n            console.log('❌ Ошибка при попытке входа:', error);\n          }\n        },\n        className: \"login-api-btn\",\n        children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0439 \\u0442\\u043E\\u043A\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-content\",\n      children: archivedPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archive-empty\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faBookmark,\n          className: \"empty-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0410\\u0440\\u0445\\u0438\\u0432 \\u043F\\u0443\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0412\\u044B \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435 \\u0441\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u043B\\u0438 \\u043D\\u0438 \\u043E\\u0434\\u043D\\u043E\\u0433\\u043E \\u043F\\u043E\\u0441\\u0442\\u0430 \\u0432 \\u0430\\u0440\\u0445\\u0438\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts\",\n          className: \"btn-browse-posts\",\n          children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"archived-posts-grid\",\n        children: archivedPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"archived-post-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-avatar\",\n                children: [post.author.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: post.author.avatar,\n                  alt: post.author.first_name,\n                  onError: e => {\n                    e.target.style.display = 'none';\n                    e.target.nextSibling.style.display = 'flex';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-initials\",\n                  style: {\n                    display: post.author.avatar ? 'none' : 'flex'\n                  },\n                  children: getAuthorInitials(post.author)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"author-name\",\n                  children: [post.author.first_name, \" \", post.author.last_name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"post-time\",\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faCalendar\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 27\n                    }, this), formatDate(post.created_at)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"post-location\",\n                    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faMapMarkerAlt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 381,\n                      columnNumber: 27\n                    }, this), post.author.city || 'Не указан']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"post-title\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/post-detail/${post.slug}`,\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), post.category && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-category\",\n              children: post.category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 21\n            }, this), post.short_description && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-excerpt\",\n              children: post.short_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-actions\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/post-detail/${post.slug}`,\n                className: \"read-more\",\n                children: \"\\u0427\\u0438\\u0442\\u0430\\u0442\\u044C \\u0434\\u0430\\u043B\\u0435\\u0435\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"archived-date\",\n                children: [\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0435\\u043D\\u043E: \", formatDate(post.archived_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchivePage, \"NibEE20+yZ8PVwdyPUlLAfxV2X4=\");\n_c = ArchivePage;\nexport default ArchivePage;\nvar _c;\n$RefreshReg$(_c, \"ArchivePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","FontAwesomeIcon","faBookmark","faUser","faMapMarkerAlt","faCalendar","faArrowLeft","jsxDEV","_jsxDEV","ArchivePage","_s","archivedPosts","setArchivedPosts","loading","setLoading","error","setError","userData","localStorage","getItem","sessionStorage","user","JSON","parse","console","log","username","e","fetchArchivedPosts","token","userResponse","fetch","headers","ok","json","status","substring","response","data","results","length","forEach","post","index","_post$author","title","id","author","errorText","text","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","getAuthorInitials","firstName","first_name","lastName","last_name","charAt","toUpperCase","getUserAvatarUrl","avatar","initials","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","icon","removeItem","window","location","href","email","setItem","stringify","reload","testPosts","slug","content","short_description","created_at","published_at","city","category","name","archived_at","method","body","password","access","response2","data2","map","src","alt","onError","target","style","display","nextSibling","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ArchivePage/ArchivePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faBookmark, \r\n  faUser, \r\n  faMapMarkerAlt, \r\n  faCalendar,\r\n  faArrowLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './ArchivePage.css';\r\n\r\nconst ArchivePage = () => {\r\n  const [archivedPosts, setArchivedPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Отладочная информация о пользователе\r\n    const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\r\n    if (userData) {\r\n      try {\r\n        const user = JSON.parse(userData);\r\n        console.log('👤 Текущий пользователь в ArchivePage:', user);\r\n        \r\n        // Проверяем, что пользователь \"владиславмелевич\"\r\n        if (user.username === 'владиславмелевич') {\r\n          console.log('✅ Правильный пользователь!');\r\n        } else {\r\n          console.log('❌ Неправильный пользователь! Нужно войти под \"владиславмелевич\"');\r\n        }\r\n      } catch (e) {\r\n        console.log('❌ Ошибка парсинга данных пользователя:', e);\r\n      }\r\n    } else {\r\n      console.log('❌ Данные пользователя не найдены в ArchivePage');\r\n    }\r\n    \r\n    fetchArchivedPosts();\r\n  }, []);\r\n\r\n  const fetchArchivedPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      \r\n      // Проверяем токен и получаем информацию о пользователе\r\n      if (token) {\r\n        try {\r\n          const userResponse = await fetch('http://localhost:8000/api/users/profile/', {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          \r\n          if (userResponse.ok) {\r\n            const userData = await userResponse.json();\r\n            console.log('👤 Текущий авторизованный пользователь:', userData);\r\n          } else {\r\n            console.log('❌ Ошибка получения профиля пользователя:', userResponse.status);\r\n          }\r\n        } catch (error) {\r\n          console.log('❌ Ошибка при проверке пользователя:', error);\r\n        }\r\n      }\r\n      \r\n      console.log('🔍 Загрузка архива...');\r\n      console.log('🔑 Токен:', token ? `Есть (${token.substring(0, 20)}...)` : 'Нет');\r\n      \r\n      // Проверяем данные пользователя\r\n      const userData = localStorage.getItem('userData') || sessionStorage.getItem('userData');\r\n      if (userData) {\r\n        try {\r\n          const user = JSON.parse(userData);\r\n          console.log('👤 Текущий пользователь:', user);\r\n        } catch (e) {\r\n          console.log('❌ Ошибка парсинга данных пользователя:', e);\r\n        }\r\n      } else {\r\n        console.log('❌ Данные пользователя не найдены');\r\n      }\r\n      \r\n      if (!token) {\r\n        setError('Необходима авторизация');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('🔗 Отправляем запрос к API архива...');\r\n      const response = await fetch('http://localhost:8000/api/users/archive/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Статус ответа:', response.status);\r\n      console.log('Заголовки ответа:', response.headers);\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('✅ Данные от API:', data);\r\n        console.log('📊 Количество постов:', data.results ? data.results.length : 0);\r\n        \r\n        if (data.results && data.results.length > 0) {\r\n          console.log('📋 Посты в архиве:');\r\n          data.results.forEach((post, index) => {\r\n            console.log(`  ${index + 1}. \"${post.title}\" (ID: ${post.id})`);\r\n            console.log(`     Автор: ${post.author?.username || 'Неизвестно'}`);\r\n          });\r\n        } else {\r\n          console.log('📭 Архив пуст или данные не получены');\r\n        }\r\n        \r\n        setArchivedPosts(data.results || []);\r\n      } else {\r\n        const errorText = await response.text();\r\n        console.error('❌ Ошибка API:', response.status, errorText);\r\n        setError('Ошибка загрузки архива');\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки архива:', error);\r\n      setError('Ошибка загрузки архива');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('ru-RU', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n    } catch (error) {\r\n      return 'Недавно';\r\n    }\r\n  };\r\n\r\n  const getAuthorInitials = (author) => {\r\n    if (!author) return 'А';\r\n    const firstName = author.first_name || '';\r\n    const lastName = author.last_name || '';\r\n    return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase() || 'А';\r\n  };\r\n\r\n  const getUserAvatarUrl = (userData) => {\r\n    if (userData.avatar) return userData.avatar;\r\n    const initials = getAuthorInitials(userData);\r\n    return `https://via.placeholder.com/40x40/667eea/ffffff?text=${encodeURIComponent(initials)}`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"archive-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Загрузка архива...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"archive-error\">\r\n        <h2>Ошибка</h2>\r\n        <p>{error}</p>\r\n        <button onClick={fetchArchivedPosts} className=\"btn-retry\">\r\n          Попробовать снова\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"archive-page\">\r\n      {/* Хлебные крошки */}\r\n      <div className=\"breadcrumbs-container\">\r\n        <nav className=\"breadcrumbs\">\r\n          <Link to=\"/\" className=\"breadcrumb-link\">Главная</Link>\r\n          <FontAwesomeIcon icon={faArrowLeft} className=\"breadcrumb-separator\" />\r\n          <span className=\"breadcrumb-link active\">Архив</span>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Заголовок */}\r\n      <div className=\"archive-header\">\r\n        <div className=\"archive-title\">\r\n          <FontAwesomeIcon icon={faBookmark} className=\"archive-icon\" />\r\n          <h1>Мой архив</h1>\r\n        </div>\r\n        <p className=\"archive-description\">\r\n          Здесь собраны все посты, которые вы сохранили для себя\r\n        </p>\r\n        <div className=\"debug-info\">\r\n          <p><strong>Отладка:</strong> Проверьте консоль браузера (F12) для подробной информации</p>\r\n        </div>\r\n        <button onClick={fetchArchivedPosts} className=\"refresh-btn\">\r\n          Обновить архив\r\n        </button>\r\n        <button onClick={() => {\r\n          // Очищаем данные пользователя и перенаправляем на логин\r\n          localStorage.removeItem('userData');\r\n          localStorage.removeItem('accessToken');\r\n          sessionStorage.removeItem('userData');\r\n          sessionStorage.removeItem('accessToken');\r\n          window.location.href = '/login';\r\n        }} className=\"login-btn\">\r\n          Войти под владиславмелевич\r\n        </button>\r\n        <button onClick={() => {\r\n          // Принудительно устанавливаем данные пользователя владиславмелевич\r\n          const userData = {\r\n            id: 5,\r\n            username: 'владиславмелевич',\r\n            first_name: 'Владислав',\r\n            last_name: 'Мелевич',\r\n            email: 'vladislav@example.com'\r\n          };\r\n          localStorage.setItem('userData', JSON.stringify(userData));\r\n          // Обновляем страницу\r\n          window.location.reload();\r\n        }} className=\"force-login-btn\">\r\n          Принудительно войти как владиславмелевич\r\n        </button>\r\n        <button onClick={() => {\r\n          // Принудительно показываем тестовые посты\r\n          const testPosts = [\r\n            {\r\n              id: 12,\r\n              title: 'Выходные и муж!!!!!!!!!!',\r\n              slug: 'post-1',\r\n              content: 'Тестовый контент',\r\n              short_description: 'Описание поста',\r\n              status: 'published',\r\n              created_at: '2025-08-31T22:42:39.719329Z',\r\n              published_at: '2025-08-31T22:42:39.719329Z',\r\n              author: {\r\n                id: 5,\r\n                first_name: 'Владислав',\r\n                last_name: 'Мелевич',\r\n                username: 'владиславмелевич',\r\n                avatar: null,\r\n                city: 'Минск'\r\n              },\r\n              category: {\r\n                id: 1,\r\n                name: 'Зачатие',\r\n                slug: 'zachatie'\r\n              },\r\n              archived_at: '2025-08-31T22:42:39.719329Z'\r\n            },\r\n            {\r\n              id: 11,\r\n              title: 'Зачатие',\r\n              slug: 'post-11',\r\n              content: 'Тестовый контент',\r\n              short_description: 'Описание поста',\r\n              status: 'published',\r\n              created_at: '2025-08-31T22:42:39.719329Z',\r\n              published_at: '2025-08-31T22:42:39.719329Z',\r\n              author: {\r\n                id: 4,\r\n                first_name: 'Юлия',\r\n                last_name: 'Мелевич',\r\n                username: 'юлиямелевич',\r\n                avatar: null,\r\n                city: 'Минск'\r\n              },\r\n              category: {\r\n                id: 1,\r\n                name: 'Зачатие',\r\n                slug: 'zachatie'\r\n              },\r\n              archived_at: '2025-08-31T22:42:39.719329Z'\r\n            }\r\n          ];\r\n          setArchivedPosts(testPosts);\r\n          console.log('✅ Принудительно установлены тестовые посты');\r\n        }} className=\"test-posts-btn\">\r\n          Показать тестовые посты\r\n        </button>\r\n        <button onClick={async () => {\r\n          try {\r\n            // Пытаемся получить токен для пользователя владиславмелевич\r\n            const response = await fetch('http://localhost:8000/api/users/login/', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({\r\n                username: 'владиславмелевич',\r\n                password: '123456' // Попробуем другой пароль\r\n              })\r\n            });\r\n            \r\n            if (response.ok) {\r\n              const data = await response.json();\r\n              localStorage.setItem('accessToken', data.access);\r\n              localStorage.setItem('userData', JSON.stringify(data.user));\r\n              console.log('✅ Успешный вход под владиславмелевич');\r\n              window.location.reload();\r\n            } else {\r\n              console.log('❌ Ошибка входа:', response.status);\r\n              // Попробуем другой пароль\r\n              const response2 = await fetch('http://localhost:8000/api/users/login/', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  username: 'владиславмелевич',\r\n                  password: 'password' // Еще один вариант\r\n                })\r\n              });\r\n              \r\n              if (response2.ok) {\r\n                const data2 = await response2.json();\r\n                localStorage.setItem('accessToken', data2.access);\r\n                localStorage.setItem('userData', JSON.stringify(data2.user));\r\n                console.log('✅ Успешный вход под владиславмелевич (второй пароль)');\r\n                window.location.reload();\r\n              } else {\r\n                console.log('❌ Ошибка входа с вторым паролем:', response2.status);\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.log('❌ Ошибка при попытке входа:', error);\r\n          }\r\n        }} className=\"login-api-btn\">\r\n          Получить новый токен\r\n        </button>\r\n      </div>\r\n\r\n      {/* Список постов */}\r\n      <div className=\"archive-content\">\r\n        {archivedPosts.length === 0 ? (\r\n          <div className=\"archive-empty\">\r\n            <FontAwesomeIcon icon={faBookmark} className=\"empty-icon\" />\r\n            <h3>Архив пуст</h3>\r\n            <p>Вы пока не сохранили ни одного поста в архив</p>\r\n            <Link to=\"/posts\" className=\"btn-browse-posts\">\r\n              Просмотреть посты\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"archived-posts-grid\">\r\n            {archivedPosts.map((post) => (\r\n              <div key={post.id} className=\"archived-post-card\">\r\n                <div className=\"post-header\">\r\n                  <div className=\"author-info\">\r\n                    <div className=\"author-avatar\">\r\n                      {post.author.avatar ? (\r\n                        <img \r\n                          src={post.author.avatar} \r\n                          alt={post.author.first_name}\r\n                          onError={(e) => {\r\n                            e.target.style.display = 'none';\r\n                            e.target.nextSibling.style.display = 'flex';\r\n                          }}\r\n                        />\r\n                      ) : null}\r\n                      <div className=\"author-initials\" style={{ \r\n                        display: post.author.avatar ? 'none' : 'flex' \r\n                      }}>\r\n                        {getAuthorInitials(post.author)}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"author-details\">\r\n                      <div className=\"author-name\">\r\n                        {post.author.first_name} {post.author.last_name}\r\n                      </div>\r\n                      <div className=\"post-meta\">\r\n                        <span className=\"post-time\">\r\n                          <FontAwesomeIcon icon={faCalendar} />\r\n                          {formatDate(post.created_at)}\r\n                        </span>\r\n                        <span className=\"post-location\">\r\n                          <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n                          {post.author.city || 'Не указан'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"post-content\">\r\n                  <h3 className=\"post-title\">\r\n                    <Link to={`/post-detail/${post.slug}`}>\r\n                      {post.title}\r\n                    </Link>\r\n                  </h3>\r\n                  \r\n                  {post.category && (\r\n                    <div className=\"post-category\">\r\n                      {post.category.name}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {post.short_description && (\r\n                    <p className=\"post-excerpt\">\r\n                      {post.short_description}\r\n                    </p>\r\n                  )}\r\n                  \r\n                  <div className=\"post-actions\">\r\n                    <Link to={`/post-detail/${post.slug}`} className=\"read-more\">\r\n                      Читать далее\r\n                    </Link>\r\n                    <span className=\"archived-date\">\r\n                      Сохранено: {formatDate(post.archived_at)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchivePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}