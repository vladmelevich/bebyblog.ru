{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ChatModal\\\\ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport './ChatModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatModal = ({\n  isOpen,\n  onClose,\n  userId,\n  userName,\n  onChatCreated\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const chatIdRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      chatWebSocket.leaveChat();\n    };\n  }, [isOpen, userId]);\n  const setupWebSocket = () => {\n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', message => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n    chatWebSocket.onMessage('user_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n\n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n    chatWebSocket.onMessage('user_stop_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n      }\n    }\n    return null;\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n  const loadChatMessages = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n\n      // Сначала проверяем, есть ли уже чат с этим пользователем\n      const chatResponse = await fetch(`http://localhost:8000/api/users/chats/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (chatResponse.ok) {\n        const chatData = await chatResponse.json();\n        const existingChat = chatData.chats.find(chat => chat.participants.some(p => p.id === parseInt(userId)));\n        if (existingChat) {\n          chatIdRef.current = existingChat.id;\n          // Загружаем сообщения существующего чата\n          const messagesResponse = await fetch(`http://localhost:8000/api/users/chats/${existingChat.id}/`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (messagesResponse.ok) {\n            const messagesData = await messagesResponse.json();\n            console.log('Загружены сообщения:', messagesData);\n            if (messagesData.success && messagesData.messages) {\n              setMessages(messagesData.messages);\n            }\n          }\n        } else {\n          // Чат не существует, показываем пустой список\n          setMessages([]);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n      setMessages([]);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n\n    // Отправляем сообщение через WebSocket\n    chatWebSocket.sendMessage(userId, messageContent, 'text');\n\n    // Останавливаем индикатор печати\n    chatWebSocket.stopTyping(userId);\n  };\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n\n    // Управление индикатором печати\n    if (e.target.value.trim()) {\n      chatWebSocket.startTyping(userId);\n\n      // Очищаем предыдущий таймаут\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      // Устанавливаем новый таймаут для остановки индикатора\n      typingTimeoutRef.current = setTimeout(() => {\n        chatWebSocket.stopTyping(userId);\n      }, 1000);\n    } else {\n      chatWebSocket.stopTyping(userId);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n  if (!isOpen) return null;\n  const displayName = user ? user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : user.first_name || user.username || 'Пользователь' : userName || 'Пользователь';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"user-name\",\n            children: displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-status\",\n            children: \"\\u0411\\u044B\\u043B\\u0430 \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D: 3 \\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-messages\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-messages\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-title\",\n            children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-subtitle\",\n            children: \"\\u0421\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A \\u043D\\u0435 \\u0432\\u0438\\u0434\\u0438\\u0442 \\u044D\\u0442\\u0443 \\u043F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0443.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-list\",\n          children: [messages.map(message => {\n            // Получаем ID пользователя из userData\n            const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n            let currentUserId = null;\n            if (userDataString) {\n              try {\n                const userData = JSON.parse(userDataString);\n                currentUserId = parseInt(userData.id);\n              } catch (error) {\n                console.error('Ошибка парсинга userData:', error);\n              }\n            }\n            const messageSenderId = parseInt(message.sender);\n            const isMyMessage = messageSenderId === currentUserId;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${isMyMessage ? 'my-message' : 'incoming-message'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                style: isMyMessage ? {\n                  backgroundColor: '#007bff',\n                  color: 'white'\n                } : {\n                  backgroundColor: '#ffffff',\n                  color: 'black'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this);\n          }), isTyping && typingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"typing-text\",\n              children: [typingUser, \" \\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0435\\u0442...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"message-input\",\n            placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            value: newMessage,\n            onChange: handleInputChange,\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: handleSendMessage,\n            disabled: !newMessage.trim() || loading,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatModal, \"0AhRZfGml2A7C8rMuFFd4FoS25I=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faPaperPlane","faTimes","chatWebSocket","jsxDEV","_jsxDEV","ChatModal","isOpen","onClose","userId","userName","onChatCreated","_s","messages","setMessages","newMessage","setNewMessage","user","setUser","loading","setLoading","isTyping","setIsTyping","typingUser","setTypingUser","chatIdRef","messagesEndRef","typingTimeoutRef","loadUserData","loadChatMessages","setupWebSocket","current","clearTimeout","leaveChat","connect","joinChat","onMessage","message","prev","scrollToBottom","data","user_id","getCurrentUserId","user_name","setTimeout","userDataString","localStorage","getItem","sessionStorage","userData","JSON","parse","parseInt","id","error","console","_messagesEndRef$curre","scrollIntoView","behavior","token","response","fetch","headers","ok","json","success","chatResponse","chatData","existingChat","chats","find","chat","participants","some","p","messagesResponse","messagesData","log","handleSendMessage","e","preventDefault","trim","messageContent","sendMessage","stopTyping","handleInputChange","target","value","startTyping","displayName","first_name","last_name","username","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","icon","length","map","currentUserId","messageSenderId","sender","isMyMessage","style","backgroundColor","color","content","Date","created_at","toLocaleTimeString","hour","minute","ref","type","placeholder","onChange","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ChatModal/ChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport './ChatModal.css';\n\nconst ChatModal = ({ isOpen, onClose, userId, userName, onChatCreated }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const chatIdRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (isOpen && userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      chatWebSocket.leaveChat();\n    };\n  }, [isOpen, userId]);\n\n  const setupWebSocket = () => {\n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n\n    chatWebSocket.onMessage('user_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n        \n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n\n    chatWebSocket.onMessage('user_stop_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n      }\n    }\n    return null;\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n\n  const loadChatMessages = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      \n      // Сначала проверяем, есть ли уже чат с этим пользователем\n      const chatResponse = await fetch(`http://localhost:8000/api/users/chats/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (chatResponse.ok) {\n        const chatData = await chatResponse.json();\n        const existingChat = chatData.chats.find(chat => \n          chat.participants.some(p => p.id === parseInt(userId))\n        );\n        \n        if (existingChat) {\n          chatIdRef.current = existingChat.id;\n          // Загружаем сообщения существующего чата\n          const messagesResponse = await fetch(`http://localhost:8000/api/users/chats/${existingChat.id}/`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json',\n            },\n          });\n          \n          if (messagesResponse.ok) {\n            const messagesData = await messagesResponse.json();\n            console.log('Загружены сообщения:', messagesData);\n            if (messagesData.success && messagesData.messages) {\n              setMessages(messagesData.messages);\n            }\n          }\n        } else {\n          // Чат не существует, показываем пустой список\n          setMessages([]);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n      setMessages([]);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    \n    // Отправляем сообщение через WebSocket\n    chatWebSocket.sendMessage(userId, messageContent, 'text');\n    \n    // Останавливаем индикатор печати\n    chatWebSocket.stopTyping(userId);\n  };\n\n  const handleInputChange = (e) => {\n    setNewMessage(e.target.value);\n    \n    // Управление индикатором печати\n    if (e.target.value.trim()) {\n      chatWebSocket.startTyping(userId);\n      \n      // Очищаем предыдущий таймаут\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      \n      // Устанавливаем новый таймаут для остановки индикатора\n      typingTimeoutRef.current = setTimeout(() => {\n        chatWebSocket.stopTyping(userId);\n      }, 1000);\n    } else {\n      chatWebSocket.stopTyping(userId);\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    }\n  };\n\n  if (!isOpen) return null;\n\n  const displayName = user ? \n    (user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : \n     user.first_name || user.username || 'Пользователь') : \n    userName || 'Пользователь';\n\n  return (\n    <div className=\"chat-modal-overlay\" onClick={onClose}>\n      <div className=\"chat-modal\" onClick={(e) => e.stopPropagation()}>\n        {/* Заголовок модального окна */}\n        <div className=\"chat-modal-header\">\n          <div className=\"chat-user-info\">\n            <h3 className=\"user-name\">{displayName}</h3>\n            <p className=\"user-status\">Была онлайн: 3 м</p>\n          </div>\n          <button className=\"close-button\" onClick={onClose}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n\n        {/* Контейнер сообщений */}\n        <div className=\"chat-modal-messages\">\n          {messages.length === 0 ? (\n            <div className=\"empty-messages\">\n              <p className=\"empty-title\">Сообщений нет.</p>\n              <p className=\"empty-subtitle\">Собеседник не видит эту переписку.</p>\n            </div>\n          ) : (\n            <div className=\"messages-list\">\n              {messages.map((message) => {\n                // Получаем ID пользователя из userData\n                const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n                let currentUserId = null;\n                if (userDataString) {\n                  try {\n                    const userData = JSON.parse(userDataString);\n                    currentUserId = parseInt(userData.id);\n                  } catch (error) {\n                    console.error('Ошибка парсинга userData:', error);\n                  }\n                }\n                \n                const messageSenderId = parseInt(message.sender);\n                const isMyMessage = messageSenderId === currentUserId;\n                \n                return (\n                  <div key={message.id} className={`message ${isMyMessage ? 'my-message' : 'incoming-message'}`}>\n                    <div className=\"message-content\" style={isMyMessage ? {backgroundColor: '#007bff', color: 'white'} : {backgroundColor: '#ffffff', color: 'black'}}>\n                      <p>{message.content}</p>\n                      <span className=\"message-time\">\n                        {new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        })}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n              \n              {/* Индикатор печати */}\n              {isTyping && typingUser && (\n                <div className=\"typing-indicator\">\n                  <div className=\"typing-dots\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                  <span className=\"typing-text\">{typingUser} печатает...</span>\n                </div>\n              )}\n              \n              {/* Элемент для автоматической прокрутки */}\n              <div ref={messagesEndRef} />\n            </div>\n          )}\n        </div>\n\n        {/* Поле ввода сообщения */}\n        <div className=\"chat-modal-input\">\n          <div className=\"message-input-wrapper\">\n            <input\n              type=\"text\"\n              className=\"message-input\"\n              placeholder=\"Ваше сообщение\"\n              value={newMessage}\n              onChange={handleInputChange}\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(e)}\n            />\n            <button \n              className=\"send-button\" \n              onClick={handleSendMessage}\n              disabled={!newMessage.trim() || loading}\n            >\n              <FontAwesomeIcon icon={faPaperPlane} />\n              <span>Отправить</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}