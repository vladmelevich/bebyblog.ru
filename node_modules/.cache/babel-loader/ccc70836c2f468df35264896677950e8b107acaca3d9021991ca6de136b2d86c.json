{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ChatPage\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faPaperPlane, faEdit, faTrash, faCheck, faTimes, faUser, faMessage } from '@fortawesome/free-solid-svg-icons';\nimport { getChat, saveMessage, updateMessage, deleteMessage } from '../../utils/chatStorage';\nimport { getUserInfo, getMockUserInfo, getUserInfoFromStorage } from '../../utils/userUtils';\nimport './ChatPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const messagesEndRef = useRef(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [editingMessageId, setEditingMessageId] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Загружаем пользователя и сообщения\n  useEffect(() => {\n    const loadChat = async () => {\n      try {\n        console.log('Загружаем чат для пользователя:', userId);\n\n        // Загружаем существующие сообщения\n        const existingMessages = getChat(userId);\n        console.log('Существующие сообщения:', existingMessages);\n        setMessages(existingMessages);\n\n        // Получаем информацию о пользователе\n        console.log('Запрашиваем информацию о пользователе...');\n\n        // Сначала проверяем localStorage\n        const storedUserInfo = getUserInfoFromStorage(userId);\n        if (storedUserInfo) {\n          console.log('Найдена информация о пользователе в localStorage:', storedUserInfo);\n          setUser(storedUserInfo);\n          setIsLoading(false);\n          return;\n        }\n\n        // Если в localStorage нет, делаем API-запрос\n        const userInfo = await getUserInfo(userId);\n        console.log('Получена информация о пользователе:', userInfo);\n\n        // Если не удалось получить информацию, используем моковые данные\n        if (!userInfo || !userInfo.name) {\n          console.log('Информация о пользователе не получена, используем моковые данные');\n          const mockUserInfo = getMockUserInfo(userId);\n          setUser(mockUserInfo);\n        } else {\n          setUser(userInfo);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Ошибка при загрузке чата:', error);\n        // Fallback на моковые данные\n        const fallbackUser = getMockUserInfo(userId);\n        console.log('Используем fallback информацию:', fallbackUser);\n        setUser(fallbackUser);\n        setIsLoading(false);\n      }\n    };\n    loadChat();\n  }, [userId]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      const messageData = {\n        text: newMessage.trim(),\n        sender: 'user'\n      };\n\n      // Сохраняем сообщение в localStorage\n      const savedMessage = saveMessage(userId, messageData);\n      if (savedMessage) {\n        setMessages(prev => [...prev, savedMessage]);\n        setNewMessage('');\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleEditMessage = messageId => {\n    const message = messages.find(msg => msg.id === messageId);\n    if (message) {\n      setEditingMessageId(messageId);\n      setEditText(message.text);\n    }\n  };\n  const handleSaveEdit = () => {\n    if (editText.trim() && editingMessageId) {\n      // Обновляем сообщение в localStorage\n      const success = updateMessage(userId, editingMessageId, editText.trim());\n      if (success) {\n        setMessages(prev => prev.map(msg => msg.id === editingMessageId ? {\n          ...msg,\n          text: editText.trim(),\n          isEdited: true,\n          editedAt: new Date().toISOString()\n        } : msg));\n        setEditingMessageId(null);\n        setEditText('');\n      }\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingMessageId(null);\n    setEditText('');\n  };\n  const handleDeleteMessage = messageId => {\n    if (window.confirm('Вы уверены, что хотите удалить это сообщение?')) {\n      // Удаляем сообщение из localStorage\n      const success = deleteMessage(userId, messageId);\n      if (success) {\n        setMessages(prev => prev.filter(msg => msg.id !== messageId));\n      }\n    }\n  };\n  const handleUseMockData = () => {\n    console.log('Принудительно используем моковые данные');\n    const mockUserInfo = getMockUserInfo(userId);\n    console.log('Созданные моковые данные:', mockUserInfo);\n    setUser(mockUserInfo);\n  };\n  const handleClearStorage = () => {\n    console.log('Очищаем localStorage для пользователя:', userId);\n    try {\n      const storedUsers = localStorage.getItem('userProfiles');\n      if (storedUsers) {\n        const users = JSON.parse(storedUsers);\n        delete users[userId];\n        localStorage.setItem('userProfiles', JSON.stringify(users));\n        console.log('localStorage очищен для пользователя:', userId);\n      }\n    } catch (error) {\n      console.error('Ошибка при очистке localStorage:', error);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString('ru-RU', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = timestamp => {\n    const date = new Date(timestamp);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === today.toDateString()) {\n      return 'Сегодня';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Вчера';\n    } else {\n      return date.toLocaleDateString('ru-RU');\n    }\n  };\n  if (isLoading) {\n    console.log('Состояние загрузки: isLoading = true');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0447\\u0430\\u0442\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('Рендерим чат. Состояние пользователя:', user);\n  console.log('Состояние загрузки: isLoading = false');\n\n  // Проверяем, что у нас есть информация о пользователе\n  if (!user) {\n    console.log('Информация о пользователе отсутствует, показываем загрузку');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438 \\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar\",\n          children: [console.log('Рендерим аватар пользователя:', user === null || user === void 0 ? void 0 : user.avatar), user !== null && user !== void 0 && user.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: user.avatar,\n            alt: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-placeholder\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"user-name\",\n            children: [(user === null || user === void 0 ? void 0 : user.name) || 'Загрузка...', console.log('Рендерим имя пользователя:', user === null || user === void 0 ? void 0 : user.name)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), (user === null || user === void 0 ? void 0 : user.city) && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-city\",\n            children: [\"\\uD83D\\uDCCD \", user.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#666',\n                fontSize: '12px'\n              },\n              children: [\"ID: \", user === null || user === void 0 ? void 0 : user.id, \" | \\u041E\\u0442\\u043B\\u0430\\u0434\\u043A\\u0430: \", JSON.stringify(user)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#999',\n                fontSize: '10px',\n                display: 'block',\n                marginTop: '2px'\n              },\n              children: [\"\\u0418\\u0441\\u0442\\u043E\\u0447\\u043D\\u0438\\u043A: \", user !== null && user !== void 0 && user.name && user.name !== `Пользователь ${userId}` ? 'API/Storage' : 'Моковые данные']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUseMockData,\n              style: {\n                marginTop: '5px',\n                padding: '2px 8px',\n                fontSize: '10px',\n                background: '#667eea',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u043C\\u043E\\u043A\\u043E\\u0432\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClearStorage,\n              style: {\n                marginTop: '5px',\n                padding: '2px 8px',\n                fontSize: '10px',\n                background: '#e74c3c',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C localStorage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-chat-icon\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0427\\u0430\\u0442 \\u043F\\u0443\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u0433\\u043E\\u0432\\u043E\\u0440, \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0432 \\u043F\\u0435\\u0440\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === 'user' ? 'user-message' : 'other-message'}`,\n          children: editingMessageId === message.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-message-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"edit-textarea\",\n              value: editText,\n              onChange: e => setEditText(e.target.value),\n              placeholder: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn save-btn\",\n                onClick: handleSaveEdit,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn cancel-btn\",\n                onClick: handleCancelEdit,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-text\",\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this), message.isEdited && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"edited-indicator\",\n                children: \"(\\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u043E)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: formatTime(message.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this), message.sender === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn edit-btn\",\n                onClick: () => handleEditMessage(message.id),\n                title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEdit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-btn delete-btn\",\n                onClick: () => handleDeleteMessage(message.id),\n                title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"message-input\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !newMessage.trim(),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"vOFVrmKqaRFuweakJpDm1qMSMHc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","FontAwesomeIcon","faArrowLeft","faPaperPlane","faEdit","faTrash","faCheck","faTimes","faUser","faMessage","getChat","saveMessage","updateMessage","deleteMessage","getUserInfo","getMockUserInfo","getUserInfoFromStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPage","_s","userId","navigate","messagesEndRef","messages","setMessages","newMessage","setNewMessage","editingMessageId","setEditingMessageId","editText","setEditText","user","setUser","isLoading","setIsLoading","loadChat","console","log","existingMessages","storedUserInfo","userInfo","name","mockUserInfo","error","fallbackUser","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","messageData","text","sender","savedMessage","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleEditMessage","messageId","message","find","msg","id","handleSaveEdit","success","map","isEdited","editedAt","Date","toISOString","handleCancelEdit","handleDeleteMessage","window","confirm","filter","handleUseMockData","handleClearStorage","storedUsers","localStorage","getItem","users","JSON","parse","setItem","stringify","formatTime","timestamp","date","toLocaleTimeString","hour","minute","formatDate","today","yesterday","setDate","getDate","toDateString","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","avatar","src","alt","city","process","env","NODE_ENV","style","color","fontSize","display","marginTop","padding","background","border","borderRadius","cursor","length","value","onChange","target","placeholder","autoFocus","title","ref","onKeyPress","rows","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ChatPage/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faArrowLeft, \r\n  faPaperPlane, \r\n  faEdit, \r\n  faTrash, \r\n  faCheck, \r\n  faTimes,\r\n  faUser,\r\n  faMessage\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { getChat, saveMessage, updateMessage, deleteMessage } from '../../utils/chatStorage';\r\nimport { getUserInfo, getMockUserInfo, getUserInfoFromStorage } from '../../utils/userUtils';\r\nimport './ChatPage.css';\r\n\r\nconst ChatPage = () => {\r\n  const { userId } = useParams();\r\n  const navigate = useNavigate();\r\n  const messagesEndRef = useRef(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [editingMessageId, setEditingMessageId] = useState(null);\r\n  const [editText, setEditText] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Загружаем пользователя и сообщения\r\n  useEffect(() => {\r\n    const loadChat = async () => {\r\n      try {\r\n        console.log('Загружаем чат для пользователя:', userId);\r\n        \r\n        // Загружаем существующие сообщения\r\n        const existingMessages = getChat(userId);\r\n        console.log('Существующие сообщения:', existingMessages);\r\n        setMessages(existingMessages);\r\n\r\n        // Получаем информацию о пользователе\r\n        console.log('Запрашиваем информацию о пользователе...');\r\n        \r\n        // Сначала проверяем localStorage\r\n        const storedUserInfo = getUserInfoFromStorage(userId);\r\n        if (storedUserInfo) {\r\n          console.log('Найдена информация о пользователе в localStorage:', storedUserInfo);\r\n          setUser(storedUserInfo);\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Если в localStorage нет, делаем API-запрос\r\n        const userInfo = await getUserInfo(userId);\r\n        console.log('Получена информация о пользователе:', userInfo);\r\n        \r\n        // Если не удалось получить информацию, используем моковые данные\r\n        if (!userInfo || !userInfo.name) {\r\n          console.log('Информация о пользователе не получена, используем моковые данные');\r\n          const mockUserInfo = getMockUserInfo(userId);\r\n          setUser(mockUserInfo);\r\n        } else {\r\n          setUser(userInfo);\r\n        }\r\n        \r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Ошибка при загрузке чата:', error);\r\n        // Fallback на моковые данные\r\n        const fallbackUser = getMockUserInfo(userId);\r\n        console.log('Используем fallback информацию:', fallbackUser);\r\n        setUser(fallbackUser);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadChat();\r\n  }, [userId]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      const messageData = {\r\n        text: newMessage.trim(),\r\n        sender: 'user'\r\n      };\r\n\r\n      // Сохраняем сообщение в localStorage\r\n      const savedMessage = saveMessage(userId, messageData);\r\n      \r\n      if (savedMessage) {\r\n        setMessages(prev => [...prev, savedMessage]);\r\n        setNewMessage('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleEditMessage = (messageId) => {\r\n    const message = messages.find(msg => msg.id === messageId);\r\n    if (message) {\r\n      setEditingMessageId(messageId);\r\n      setEditText(message.text);\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = () => {\r\n    if (editText.trim() && editingMessageId) {\r\n      // Обновляем сообщение в localStorage\r\n      const success = updateMessage(userId, editingMessageId, editText.trim());\r\n      \r\n      if (success) {\r\n        setMessages(prev => prev.map(msg => \r\n          msg.id === editingMessageId \r\n            ? { ...msg, text: editText.trim(), isEdited: true, editedAt: new Date().toISOString() }\r\n            : msg\r\n        ));\r\n        setEditingMessageId(null);\r\n        setEditText('');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingMessageId(null);\r\n    setEditText('');\r\n  };\r\n\r\n  const handleDeleteMessage = (messageId) => {\r\n    if (window.confirm('Вы уверены, что хотите удалить это сообщение?')) {\r\n      // Удаляем сообщение из localStorage\r\n      const success = deleteMessage(userId, messageId);\r\n      \r\n      if (success) {\r\n        setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUseMockData = () => {\r\n    console.log('Принудительно используем моковые данные');\r\n    const mockUserInfo = getMockUserInfo(userId);\r\n    console.log('Созданные моковые данные:', mockUserInfo);\r\n    setUser(mockUserInfo);\r\n  };\r\n\r\n  const handleClearStorage = () => {\r\n    console.log('Очищаем localStorage для пользователя:', userId);\r\n    try {\r\n      const storedUsers = localStorage.getItem('userProfiles');\r\n      if (storedUsers) {\r\n        const users = JSON.parse(storedUsers);\r\n        delete users[userId];\r\n        localStorage.setItem('userProfiles', JSON.stringify(users));\r\n        console.log('localStorage очищен для пользователя:', userId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка при очистке localStorage:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString('ru-RU', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  const formatDate = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const today = new Date();\r\n    const yesterday = new Date(today);\r\n    yesterday.setDate(yesterday.getDate() - 1);\r\n\r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Сегодня';\r\n    } else if (date.toDateString() === yesterday.toDateString()) {\r\n      return 'Вчера';\r\n    } else {\r\n      return date.toLocaleDateString('ru-RU');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    console.log('Состояние загрузки: isLoading = true');\r\n    return (\r\n      <div className=\"chat-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Загрузка чата...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log('Рендерим чат. Состояние пользователя:', user);\r\n  console.log('Состояние загрузки: isLoading = false');\r\n\r\n  // Проверяем, что у нас есть информация о пользователе\r\n  if (!user) {\r\n    console.log('Информация о пользователе отсутствует, показываем загрузку');\r\n    return (\r\n      <div className=\"chat-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Загрузка информации о пользователе...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      {/* Заголовок чата */}\r\n      <div className=\"chat-header\">\r\n        <button className=\"back-button\" onClick={() => navigate(-1)}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n        </button>\r\n        \r\n        <div className=\"chat-user-info\">\r\n          <div className=\"user-avatar\">\r\n            {console.log('Рендерим аватар пользователя:', user?.avatar)}\r\n            {user?.avatar ? (\r\n              <img src={user.avatar} alt={user.name} />\r\n            ) : (\r\n              <div className=\"avatar-placeholder\">\r\n                <FontAwesomeIcon icon={faUser} />\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"user-details\">\r\n            <h3 className=\"user-name\">\r\n              {user?.name || 'Загрузка...'}\r\n              {console.log('Рендерим имя пользователя:', user?.name)}\r\n            </h3>\r\n            {user?.city && (\r\n              <span className=\"user-city\">\r\n                📍 {user.city}\r\n              </span>\r\n            )}\r\n            {process.env.NODE_ENV === 'development' && (\r\n              <>\r\n                <small style={{ color: '#666', fontSize: '12px' }}>\r\n                  ID: {user?.id} | Отладка: {JSON.stringify(user)}\r\n                </small>\r\n                <small style={{ color: '#999', fontSize: '10px', display: 'block', marginTop: '2px' }}>\r\n                  Источник: {user?.name && user.name !== `Пользователь ${userId}` ? 'API/Storage' : 'Моковые данные'}\r\n                </small>\r\n                <button \r\n                  onClick={handleUseMockData}\r\n                  style={{ \r\n                    marginTop: '5px', \r\n                    padding: '2px 8px', \r\n                    fontSize: '10px', \r\n                    background: '#667eea', \r\n                    color: 'white', \r\n                    border: 'none', \r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  Использовать моковые данные\r\n                </button>\r\n                <button \r\n                  onClick={handleClearStorage}\r\n                  style={{ \r\n                    marginTop: '5px', \r\n                    padding: '2px 8px', \r\n                    fontSize: '10px', \r\n                    background: '#e74c3c', \r\n                    color: 'white', \r\n                    border: 'none', \r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                  }}\r\n                >\r\n                  Очистить localStorage\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Контейнер сообщений */}\r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"empty-chat\">\r\n            <div className=\"empty-chat-icon\">\r\n              <FontAwesomeIcon icon={faMessage} />\r\n            </div>\r\n            <h3>Чат пуст</h3>\r\n            <p>Начните разговор, отправив первое сообщение</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"messages-list\">\r\n            {messages.map((message) => (\r\n              <div key={message.id} className={`message ${message.sender === 'user' ? 'user-message' : 'other-message'}`}>\r\n                {editingMessageId === message.id ? (\r\n                  <div className=\"edit-message-form\">\r\n                    <textarea\r\n                      className=\"edit-textarea\"\r\n                      value={editText}\r\n                      onChange={(e) => setEditText(e.target.value)}\r\n                      placeholder=\"Редактировать сообщение...\"\r\n                      autoFocus\r\n                    />\r\n                    <div className=\"edit-actions\">\r\n                      <button \r\n                        className=\"edit-btn save-btn\" \r\n                        onClick={handleSaveEdit}\r\n                      >\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                      </button>\r\n                      <button \r\n                        className=\"edit-btn cancel-btn\" \r\n                        onClick={handleCancelEdit}\r\n                      >\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"message-content\">\r\n                      <p className=\"message-text\">{message.text}</p>\r\n                      {message.isEdited && (\r\n                        <span className=\"edited-indicator\">(изменено)</span>\r\n                      )}\r\n                      <div className=\"message-meta\">\r\n                        <span className=\"message-time\">{formatTime(message.timestamp)}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    {/* Кнопки действий для сообщений пользователя */}\r\n                    {message.sender === 'user' && (\r\n                      <div className=\"message-actions\">\r\n                        <button \r\n                          className=\"action-btn edit-btn\" \r\n                          onClick={() => handleEditMessage(message.id)}\r\n                          title=\"Редактировать\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faEdit} />\r\n                        </button>\r\n                        <button \r\n                          className=\"action-btn delete-btn\" \r\n                          onClick={() => handleDeleteMessage(message.id)}\r\n                          title=\"Удалить\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Форма ввода сообщения */}\r\n      <div className=\"message-input-container\">\r\n        <div className=\"message-input-wrapper\">\r\n          <textarea\r\n            className=\"message-input\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Введите сообщение...\"\r\n            rows=\"1\"\r\n          />\r\n          <button \r\n            className=\"send-button\" \r\n            onClick={handleSendMessage}\r\n            disabled={!newMessage.trim()}\r\n          >\r\n            <FontAwesomeIcon icon={faPaperPlane} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}