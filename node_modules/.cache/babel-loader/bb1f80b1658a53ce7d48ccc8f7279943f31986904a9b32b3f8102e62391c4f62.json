{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ChatsPage\\\\ChatsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faSearch, faMessage } from '@fortawesome/free-solid-svg-icons';\nimport { makeAuthenticatedRequest } from '../../utils/auth';\nimport ChatModal from '../ChatModal/ChatModal';\nimport './ChatsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [chats, setChats] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  useEffect(() => {\n    fetchChats();\n\n    // Обновляем список чатов каждые 5 секунд\n    const interval = setInterval(fetchChats, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const fetchChats = async () => {\n    try {\n      setLoading(true);\n\n      // Получаем чаты из API с правильной аутентификацией\n      const response = await makeAuthenticatedRequest('http://localhost:8000/api/users/async/chats/');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.chats) {\n          console.log('Загружены чаты:', data.chats);\n          setChats(data.chats);\n        } else {\n          console.error('Ошибка загрузки чатов:', data.message);\n          setChats([]);\n        }\n      } else {\n        console.error('Ошибка загрузки чатов:', response.status, await response.text());\n        setChats([]);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки чатов:', error);\n      setChats([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleChatClick = chat => {\n    // Открываем модальное окно чата\n    const otherUser = chat.other_participant;\n    if (otherUser) {\n      setSelectedUser({\n        id: otherUser.id,\n        name: `${otherUser.first_name} ${otherUser.last_name}`.trim() || otherUser.username || 'Пользователь'\n      });\n      setModalOpen(true);\n    }\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedUser(null);\n    // Обновляем список чатов после закрытия модального окна\n    fetchChats();\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now - date) / (1000 * 60 * 60);\n    if (diffInHours < 24) {\n      return date.toLocaleTimeString('ru-RU', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleDateString('ru-RU', {\n        day: '2-digit',\n        month: '2-digit'\n      });\n    }\n  };\n  const filteredChats = chats.filter(chat => {\n    if (!searchQuery) return true;\n    const otherUser = chat.other_participant;\n    const userName = `${otherUser === null || otherUser === void 0 ? void 0 : otherUser.first_name} ${otherUser === null || otherUser === void 0 ? void 0 : otherUser.last_name}`.trim() || (otherUser === null || otherUser === void 0 ? void 0 : otherUser.username) || '';\n    return userName.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0427\\u0430\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-search\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSearch,\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u0447\\u0430\\u0442\\u043E\\u0432...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0447\\u0430\\u0442\\u043E\\u0432...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : filteredChats.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMessage,\n          className: \"empty-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0427\\u0430\\u0442\\u043E\\u0432 \\u043F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041D\\u0430\\u0447\\u043D\\u0438\\u0442\\u0435 \\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u0441 \\u0434\\u0440\\u0443\\u0437\\u044C\\u044F\\u043C\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this) : filteredChats.map(chat => {\n        const otherUser = chat.other_participant;\n        const userName = `${otherUser === null || otherUser === void 0 ? void 0 : otherUser.first_name} ${otherUser === null || otherUser === void 0 ? void 0 : otherUser.last_name}`.trim() || (otherUser === null || otherUser === void 0 ? void 0 : otherUser.username) || 'Пользователь';\n        const lastMessage = chat.last_message;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-item\",\n          onClick: () => handleChatClick(chat),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-avatar\",\n            children: (otherUser === null || otherUser === void 0 ? void 0 : otherUser.avatar) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: otherUser.avatar,\n              alt: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"chat-name\",\n                children: userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), lastMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-time\",\n                children: formatTime(lastMessage.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-preview\",\n              children: lastMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"last-message\",\n                children: lastMessage.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"no-messages\",\n                children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatModal, {\n      isOpen: modalOpen,\n      onClose: handleCloseModal,\n      userId: selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.id,\n      userName: selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatsPage, \"/vQHM8ptj85sGzEtmD5/0RAdtW0=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatsPage;\nexport default ChatsPage;\nvar _c;\n$RefreshReg$(_c, \"ChatsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FontAwesomeIcon","faArrowLeft","faSearch","faMessage","makeAuthenticatedRequest","ChatModal","jsxDEV","_jsxDEV","ChatsPage","_s","navigate","chats","setChats","loading","setLoading","searchQuery","setSearchQuery","modalOpen","setModalOpen","selectedUser","setSelectedUser","fetchChats","interval","setInterval","clearInterval","response","ok","data","json","success","console","log","error","message","status","text","handleChatClick","chat","otherUser","other_participant","id","name","first_name","last_name","trim","username","handleCloseModal","formatTime","timestamp","date","Date","now","diffInHours","toLocaleTimeString","hour","minute","toLocaleDateString","day","month","filteredChats","filter","userName","toLowerCase","includes","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","lastMessage","last_message","avatar","src","alt","created_at","content","isOpen","onClose","userId","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ChatsPage/ChatsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faArrowLeft, \n  faSearch, \n  faMessage\n} from '@fortawesome/free-solid-svg-icons';\nimport { makeAuthenticatedRequest } from '../../utils/auth';\nimport ChatModal from '../ChatModal/ChatModal';\nimport './ChatsPage.css';\n\nconst ChatsPage = () => {\n  const navigate = useNavigate();\n  const [chats, setChats] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  useEffect(() => {\n    fetchChats();\n    \n    // Обновляем список чатов каждые 5 секунд\n    const interval = setInterval(fetchChats, 5000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  const fetchChats = async () => {\n    try {\n      setLoading(true);\n      \n      // Получаем чаты из API с правильной аутентификацией\n      const response = await makeAuthenticatedRequest('http://localhost:8000/api/users/async/chats/');\n      \n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.chats) {\n          console.log('Загружены чаты:', data.chats);\n          setChats(data.chats);\n        } else {\n          console.error('Ошибка загрузки чатов:', data.message);\n          setChats([]);\n        }\n      } else {\n        console.error('Ошибка загрузки чатов:', response.status, await response.text());\n        setChats([]);\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки чатов:', error);\n      setChats([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleChatClick = (chat) => {\n    // Открываем модальное окно чата\n    const otherUser = chat.other_participant;\n    if (otherUser) {\n      setSelectedUser({\n        id: otherUser.id,\n        name: `${otherUser.first_name} ${otherUser.last_name}`.trim() || otherUser.username || 'Пользователь'\n      });\n      setModalOpen(true);\n    }\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setSelectedUser(null);\n    // Обновляем список чатов после закрытия модального окна\n    fetchChats();\n  };\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInHours = (now - date) / (1000 * 60 * 60);\n    \n    if (diffInHours < 24) {\n      return date.toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' });\n    } else {\n      return date.toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit' });\n    }\n  };\n\n  const filteredChats = chats.filter(chat => {\n    if (!searchQuery) return true;\n    const otherUser = chat.other_participant;\n    const userName = `${otherUser?.first_name} ${otherUser?.last_name}`.trim() || otherUser?.username || '';\n    return userName.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n  return (\n    <div className=\"chats-page\">\n      <div className=\"chats-header\">\n        <button className=\"back-button\" onClick={() => navigate(-1)}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n          <span>Назад</span>\n        </button>\n        <h1>Чаты</h1>\n      </div>\n\n      <div className=\"chats-search\">\n        <div className=\"search-input-wrapper\">\n          <FontAwesomeIcon icon={faSearch} className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Поиск чатов...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n      </div>\n\n      <div className=\"chats-list\">\n        {loading ? (\n          <div className=\"loading\">Загрузка чатов...</div>\n        ) : filteredChats.length === 0 ? (\n          <div className=\"empty-state\">\n            <FontAwesomeIcon icon={faMessage} className=\"empty-icon\" />\n            <p>Чатов пока нет</p>\n            <span>Начните общение с друзьями</span>\n          </div>\n        ) : (\n          filteredChats.map((chat) => {\n            const otherUser = chat.other_participant;\n            const userName = `${otherUser?.first_name} ${otherUser?.last_name}`.trim() || otherUser?.username || 'Пользователь';\n            const lastMessage = chat.last_message;\n            \n            return (\n              <div key={chat.id} className=\"chat-item\" onClick={() => handleChatClick(chat)}>\n                <div className=\"chat-avatar\">\n                  {otherUser?.avatar && (\n                    <img src={otherUser.avatar} alt={userName} />\n                  )}\n                </div>\n                <div className=\"chat-info\">\n                  <div className=\"chat-header\">\n                    <h3 className=\"chat-name\">{userName}</h3>\n                    {lastMessage && (\n                      <span className=\"chat-time\">{formatTime(lastMessage.created_at)}</span>\n                    )}\n                  </div>\n                  <div className=\"chat-preview\">\n                    {lastMessage ? (\n                      <p className=\"last-message\">{lastMessage.content}</p>\n                    ) : (\n                      <p className=\"no-messages\">Сообщений нет</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n\n      {/* Модальное окно чата */}\n      <ChatModal\n        isOpen={modalOpen}\n        onClose={handleCloseModal}\n        userId={selectedUser?.id}\n        userName={selectedUser?.name}\n      />\n    </div>\n  );\n};\n\nexport default ChatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}