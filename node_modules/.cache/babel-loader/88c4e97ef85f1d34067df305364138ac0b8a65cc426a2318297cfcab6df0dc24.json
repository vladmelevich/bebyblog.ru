{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\SimpleChat\\\\SimpleChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTrash, faReply, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport { makeAuthenticatedRequest } from '../../utils/auth';\nimport SimpleModal from '../SimpleModal/SimpleModal';\nimport './SimpleChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleChat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const [showMessageMenu, setShowMessageMenu] = useState(null);\n  const [replyToMessage, setReplyToMessage] = useState(null);\n  const [clickedMessageId, setClickedMessageId] = useState(null);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showActionsModal, setShowActionsModal] = useState(false);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      // chatWebSocket.leaveChat(); // Отключено для отладки\n    };\n  }, [userId]);\n  const setupWebSocket = () => {\n    // Временно отключаем WebSocket для отладки\n    console.log('WebSocket setup skipped for debugging');\n    return;\n\n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', message => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n    chatWebSocket.onMessage('user_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n\n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n    chatWebSocket.onMessage('user_stop_typing', data => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n      }\n    }\n    return null;\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleAvatarClick = senderId => {\n    // Переходим на страницу профиля пользователя\n    navigate(`/profile/${senderId}`);\n  };\n  const loadUserData = async () => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/users/${userId}/`);\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n  const loadChatMessages = async () => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/`);\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.messages) {\n          setMessages(data.messages);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    try {\n      console.log('Отправляем сообщение:', messageContent, 'пользователю:', userId);\n\n      // Отправляем сообщение через API\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/create/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: messageContent,\n          message_type: 'text',\n          reply_to: replyToMessage ? replyToMessage.id : null\n        })\n      });\n      console.log('Ответ сервера:', response.status, response.ok);\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Данные ответа:', data);\n        if (data.success && data.message) {\n          // Добавляем сообщение в локальное состояние\n          setMessages(prev => [...prev, data.message]);\n          scrollToBottom();\n          console.log('Сообщение добавлено в состояние');\n\n          // Сбрасываем ответ на сообщение\n          if (replyToMessage) {\n            setReplyToMessage(null);\n          }\n        }\n      } else {\n        const errorText = await response.text();\n        console.error('Ошибка отправки сообщения:', response.status, errorText);\n      }\n    } catch (error) {\n      console.error('Ошибка отправки сообщения:', error);\n    }\n\n    // Останавливаем индикатор печати (отключено для отладки)\n    // chatWebSocket.stopTyping(userId);\n  };\n  const handleInputChange = e => {\n    setNewMessage(e.target.value);\n\n    // Управление индикатором печати (отключено для отладки)\n    // if (e.target.value.trim()) {\n    //   chatWebSocket.startTyping(userId);\n    //   \n    //   // Очищаем предыдущий таймаут\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    //   \n    //   // Устанавливаем новый таймаут для остановки индикатора\n    //   typingTimeoutRef.current = setTimeout(() => {\n    //     chatWebSocket.stopTyping(userId);\n    //   }, 1000);\n    // } else {\n    //   chatWebSocket.stopTyping(userId);\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    // }\n  };\n  const handleDeleteMessage = async messageId => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/${messageId}/`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Удаляем сообщение из локального состояния\n        setMessages(prev => prev.filter(msg => msg.id !== messageId));\n        setClickedMessageId(null);\n      } else {\n        console.error('Ошибка удаления сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка удаления сообщения:', error);\n    }\n  };\n  const handleReplyToMessage = message => {\n    setReplyToMessage(message);\n    setClickedMessageId(null);\n  };\n  const cancelReply = () => {\n    setReplyToMessage(null);\n  };\n  const handleMessageClick = message => {\n    console.log('Клик по сообщению:', message);\n    console.log('Текущее состояние showActionsModal:', showActionsModal);\n    setSelectedMessage(message);\n    setShowActionsModal(true);\n    console.log('Модальное окно должно открыться, showActionsModal установлен в true');\n  };\n  const closeMessageMenu = () => {\n    setClickedMessageId(null);\n  };\n  const handleEditMessage = async (messageId, newContent) => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/messages/${messageId}/update/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newContent\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          // Обновляем сообщение в локальном состоянии\n          setMessages(prev => prev.map(msg => msg.id === messageId ? {\n            ...msg,\n            content: newContent,\n            is_edited: true\n          } : msg));\n        }\n      } else {\n        console.error('Ошибка редактирования сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка редактирования сообщения:', error);\n    }\n  };\n  const closeActionsModal = () => {\n    setShowActionsModal(false);\n    setSelectedMessage(null);\n  };\n  const displayName = user ? user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : user.first_name || user.username || 'Пользователь' : 'Пользователь';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-user-info\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"user-name\",\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('Тест модального окна');\n          setSelectedMessage({\n            id: 1,\n            content: 'Тестовое сообщение',\n            created_at: new Date().toISOString()\n          });\n          setShowActionsModal(true);\n        },\n        style: {\n          padding: '5px 10px',\n          marginLeft: '10px'\n        },\n        children: \"\\u0422\\u0435\\u0441\\u0442 \\u043C\\u043E\\u0434\\u0430\\u043B\\u044C\\u043D\\u043E\\u0433\\u043E \\u043E\\u043A\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      onClick: closeMessageMenu,\n      children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-messages\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-title\",\n          children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-subtitle\",\n          children: \"\\u0421\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A \\u043D\\u0435 \\u0432\\u0438\\u0434\\u0438\\u0442 \\u044D\\u0442\\u0443 \\u043F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0443.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-list\",\n        children: [messages.map(message => {\n          var _message$reply_to$sen;\n          console.log('Рендеринг сообщения:', message);\n          // Получаем ID пользователя из userData\n          const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n          let currentUserId = null;\n          if (userDataString) {\n            try {\n              const userData = JSON.parse(userDataString);\n              currentUserId = parseInt(userData.id);\n            } catch (error) {\n              console.error('Ошибка парсинга userData:', error);\n            }\n          }\n          const messageSenderId = parseInt(message.sender);\n          const isMyMessage = messageSenderId === currentUserId;\n\n          // Получаем информацию об отправителе\n          const senderInfo = message.sender_info || {};\n          const senderName = senderInfo.first_name && senderInfo.last_name ? `${senderInfo.first_name} ${senderInfo.last_name}` : senderInfo.first_name || senderInfo.username || 'Пользователь';\n          const senderAvatar = senderInfo.avatar || '/images/default-avatar.svg';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${isMyMessage ? 'my-message' : 'incoming-message'}`,\n            onClick: () => handleMessageClick(message),\n            children: [!isMyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-avatar clickable-avatar\",\n              onClick: e => {\n                e.stopPropagation();\n                handleAvatarClick(messageSenderId);\n              },\n              title: `Перейти к профилю ${senderName}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: senderAvatar,\n                alt: senderName,\n                onError: e => {\n                  e.target.src = '/images/default-avatar.svg';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper\",\n              children: [!isMyMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-sender-name clickable-name\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleAvatarClick(messageSenderId);\n                },\n                title: `Перейти к профилю ${senderName}`,\n                children: senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                style: isMyMessage ? {\n                  backgroundColor: '#007bff',\n                  color: 'white'\n                } : {\n                  backgroundColor: '#ffffff',\n                  color: 'black'\n                },\n                children: [message.reply_to && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reply-preview\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reply-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reply-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"reply-author\",\n                      children: ((_message$reply_to$sen = message.reply_to.sender_info) === null || _message$reply_to$sen === void 0 ? void 0 : _message$reply_to$sen.first_name) || 'Пользователь'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 386,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"reply-text\",\n                      children: message.reply_to.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-footer\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-time\",\n                    children: [new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                      hour: '2-digit',\n                      minute: '2-digit'\n                    }), message.is_edited && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"edited-indicator\",\n                      children: \" (\\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u043E)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this);\n        }), isTyping && typingUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-dots\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-text\",\n            children: [typingUser, \" \\u043F\\u0435\\u0447\\u0430\\u0442\\u0430\\u0435\\u0442...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [replyToMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-to-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-to-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"reply-to-label\",\n            children: \"\\u041E\\u0442\\u0432\\u0435\\u0442 \\u043D\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"reply-to-text\",\n            children: replyToMessage.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-reply\",\n          onClick: cancelReply,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"message-input\",\n          placeholder: replyToMessage ? \"Ответить на сообщение...\" : \"Ваше сообщение\",\n          value: newMessage,\n          onChange: handleInputChange,\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendMessage,\n          disabled: !newMessage.trim() || loading,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPaperPlane\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), console.log('Рендеринг MessageActionsModal с пропсами:', {\n      isOpen: showActionsModal,\n      message: selectedMessage,\n      isMyMessage: selectedMessage ? parseInt(selectedMessage.sender) === getCurrentUserId() : false\n    }), /*#__PURE__*/_jsxDEV(MessageActionsModal, {\n      isOpen: showActionsModal,\n      onClose: closeActionsModal,\n      message: selectedMessage,\n      onEdit: handleEditMessage,\n      onDelete: handleDeleteMessage,\n      isMyMessage: selectedMessage ? parseInt(selectedMessage.sender) === getCurrentUserId() : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleChat, \"AbmcD+hng9bggWz1+unvJLAO+ww=\", false, function () {\n  return [useParams];\n});\n_c = SimpleChat;\nexport default SimpleChat;\nvar _c;\n$RefreshReg$(_c, \"SimpleChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","FontAwesomeIcon","faPaperPlane","faTrash","faReply","faEllipsisV","chatWebSocket","makeAuthenticatedRequest","SimpleModal","jsxDEV","_jsxDEV","SimpleChat","_s","userId","messages","setMessages","newMessage","setNewMessage","user","setUser","loading","setLoading","isTyping","setIsTyping","typingUser","setTypingUser","showMessageMenu","setShowMessageMenu","replyToMessage","setReplyToMessage","clickedMessageId","setClickedMessageId","selectedMessage","setSelectedMessage","showActionsModal","setShowActionsModal","messagesEndRef","typingTimeoutRef","loadUserData","loadChatMessages","setupWebSocket","current","clearTimeout","console","log","connect","joinChat","onMessage","message","prev","scrollToBottom","data","user_id","getCurrentUserId","user_name","setTimeout","userDataString","localStorage","getItem","sessionStorage","userData","JSON","parse","parseInt","id","error","_messagesEndRef$curre","scrollIntoView","behavior","handleAvatarClick","senderId","navigate","response","ok","json","success","handleSendMessage","e","preventDefault","trim","messageContent","method","headers","body","stringify","content","message_type","reply_to","status","errorText","text","handleInputChange","target","value","handleDeleteMessage","messageId","filter","msg","handleReplyToMessage","cancelReply","handleMessageClick","closeMessageMenu","handleEditMessage","newContent","map","is_edited","closeActionsModal","displayName","first_name","last_name","username","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","created_at","Date","toISOString","style","padding","marginLeft","length","_message$reply_to$sen","currentUserId","messageSenderId","sender","isMyMessage","senderInfo","sender_info","senderName","senderAvatar","avatar","stopPropagation","title","src","alt","onError","backgroundColor","color","toLocaleTimeString","hour","minute","ref","type","placeholder","onChange","onKeyPress","key","disabled","icon","isOpen","MessageActionsModal","onClose","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/SimpleChat/SimpleChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTrash, faReply, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\nimport chatWebSocket from '../../utils/chatWebSocket';\nimport { makeAuthenticatedRequest } from '../../utils/auth';\nimport SimpleModal from '../SimpleModal/SimpleModal';\nimport './SimpleChat.css';\n\nconst SimpleChat = () => {\n  const { userId } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [isTyping, setIsTyping] = useState(false);\n  const [typingUser, setTypingUser] = useState(null);\n  const [showMessageMenu, setShowMessageMenu] = useState(null);\n  const [replyToMessage, setReplyToMessage] = useState(null);\n  const [clickedMessageId, setClickedMessageId] = useState(null);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [showActionsModal, setShowActionsModal] = useState(false);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    if (userId) {\n      loadUserData();\n      loadChatMessages();\n      setupWebSocket();\n    }\n\n    return () => {\n      // Очистка при размонтировании\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n      // chatWebSocket.leaveChat(); // Отключено для отладки\n    };\n  }, [userId]);\n\n  const setupWebSocket = () => {\n    // Временно отключаем WebSocket для отладки\n    console.log('WebSocket setup skipped for debugging');\n    return;\n    \n    // Подключаемся к WebSocket\n    chatWebSocket.connect();\n\n    // Присоединяемся к чату\n    chatWebSocket.joinChat(userId);\n\n    // Обработчики сообщений\n    chatWebSocket.onMessage('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n      scrollToBottom();\n    });\n\n    chatWebSocket.onMessage('user_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setTypingUser(data.user_name);\n        setIsTyping(true);\n        \n        // Автоматически скрываем индикатор через 3 секунды\n        setTimeout(() => {\n          setIsTyping(false);\n          setTypingUser(null);\n        }, 3000);\n      }\n    });\n\n    chatWebSocket.onMessage('user_stop_typing', (data) => {\n      if (data.user_id !== getCurrentUserId()) {\n        setIsTyping(false);\n        setTypingUser(null);\n      }\n    });\n  };\n\n  const getCurrentUserId = () => {\n    const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n    if (userDataString) {\n      try {\n        const userData = JSON.parse(userDataString);\n        return parseInt(userData.id);\n      } catch (error) {\n        console.error('Ошибка парсинга userData:', error);\n      }\n    }\n    return null;\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleAvatarClick = (senderId) => {\n    // Переходим на страницу профиля пользователя\n    navigate(`/profile/${senderId}`);\n  };\n\n  const loadUserData = async () => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/users/${userId}/`);\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n\n  const loadChatMessages = async () => {\n    try {\n      const response = await makeAuthenticatedRequest(`http://localhost:8000/api/users/async/chats/${userId}/messages/`);\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.messages) {\n          setMessages(data.messages);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n    }\n  };\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    \n    try {\n      console.log('Отправляем сообщение:', messageContent, 'пользователю:', userId);\n      \n      // Отправляем сообщение через API\n      const response = await makeAuthenticatedRequest(\n        `http://localhost:8000/api/users/async/chats/${userId}/messages/create/`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            content: messageContent,\n            message_type: 'text',\n            reply_to: replyToMessage ? replyToMessage.id : null\n          })\n        }\n      );\n\n      console.log('Ответ сервера:', response.status, response.ok);\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Данные ответа:', data);\n        if (data.success && data.message) {\n          // Добавляем сообщение в локальное состояние\n          setMessages(prev => [...prev, data.message]);\n          scrollToBottom();\n          console.log('Сообщение добавлено в состояние');\n          \n          // Сбрасываем ответ на сообщение\n          if (replyToMessage) {\n            setReplyToMessage(null);\n          }\n        }\n      } else {\n        const errorText = await response.text();\n        console.error('Ошибка отправки сообщения:', response.status, errorText);\n      }\n    } catch (error) {\n      console.error('Ошибка отправки сообщения:', error);\n    }\n    \n    // Останавливаем индикатор печати (отключено для отладки)\n    // chatWebSocket.stopTyping(userId);\n  };\n\n  const handleInputChange = (e) => {\n    setNewMessage(e.target.value);\n    \n    // Управление индикатором печати (отключено для отладки)\n    // if (e.target.value.trim()) {\n    //   chatWebSocket.startTyping(userId);\n    //   \n    //   // Очищаем предыдущий таймаут\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    //   \n    //   // Устанавливаем новый таймаут для остановки индикатора\n    //   typingTimeoutRef.current = setTimeout(() => {\n    //     chatWebSocket.stopTyping(userId);\n    //   }, 1000);\n    // } else {\n    //   chatWebSocket.stopTyping(userId);\n    //   if (typingTimeoutRef.current) {\n    //     clearTimeout(typingTimeoutRef.current);\n    //   }\n    // }\n  };\n\n  const handleDeleteMessage = async (messageId) => {\n    try {\n      const response = await makeAuthenticatedRequest(\n        `http://localhost:8000/api/users/async/chats/${userId}/messages/${messageId}/`,\n        {\n          method: 'DELETE'\n        }\n      );\n\n      if (response.ok) {\n        // Удаляем сообщение из локального состояния\n        setMessages(prev => prev.filter(msg => msg.id !== messageId));\n        setClickedMessageId(null);\n      } else {\n        console.error('Ошибка удаления сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка удаления сообщения:', error);\n    }\n  };\n\n  const handleReplyToMessage = (message) => {\n    setReplyToMessage(message);\n    setClickedMessageId(null);\n  };\n\n  const cancelReply = () => {\n    setReplyToMessage(null);\n  };\n\n  const handleMessageClick = (message) => {\n    console.log('Клик по сообщению:', message);\n    console.log('Текущее состояние showActionsModal:', showActionsModal);\n    setSelectedMessage(message);\n    setShowActionsModal(true);\n    console.log('Модальное окно должно открыться, showActionsModal установлен в true');\n  };\n\n  const closeMessageMenu = () => {\n    setClickedMessageId(null);\n  };\n\n  const handleEditMessage = async (messageId, newContent) => {\n    try {\n      const response = await makeAuthenticatedRequest(\n        `http://localhost:8000/api/users/async/messages/${messageId}/update/`,\n        {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            content: newContent\n          })\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          // Обновляем сообщение в локальном состоянии\n          setMessages(prev => prev.map(msg => \n            msg.id === messageId ? { ...msg, content: newContent, is_edited: true } : msg\n          ));\n        }\n      } else {\n        console.error('Ошибка редактирования сообщения:', response.status);\n      }\n    } catch (error) {\n      console.error('Ошибка редактирования сообщения:', error);\n    }\n  };\n\n  const closeActionsModal = () => {\n    setShowActionsModal(false);\n    setSelectedMessage(null);\n  };\n\n  const displayName = user ? \n    (user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : \n     user.first_name || user.username || 'Пользователь') : \n    'Пользователь';\n\n  return (\n    <div className=\"simple-chat\">\n      <div className=\"chat-header\">\n        <div className=\"chat-user-info\">\n          <h3 className=\"user-name\">{displayName}</h3>\n        </div>\n        <button \n          onClick={() => {\n            console.log('Тест модального окна');\n            setSelectedMessage({ id: 1, content: 'Тестовое сообщение', created_at: new Date().toISOString() });\n            setShowActionsModal(true);\n          }}\n          style={{ padding: '5px 10px', marginLeft: '10px' }}\n        >\n          Тест модального окна\n        </button>\n      </div>\n\n      <div className=\"messages-container\" onClick={closeMessageMenu}>\n        {messages.length === 0 ? (\n          <div className=\"empty-messages\">\n            <p className=\"empty-title\">Сообщений нет.</p>\n            <p className=\"empty-subtitle\">Собеседник не видит эту переписку.</p>\n          </div>\n        ) : (\n          <div className=\"messages-list\">\n            {messages.map((message) => {\n              console.log('Рендеринг сообщения:', message);\n              // Получаем ID пользователя из userData\n              const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n              let currentUserId = null;\n              if (userDataString) {\n                try {\n                  const userData = JSON.parse(userDataString);\n                  currentUserId = parseInt(userData.id);\n                } catch (error) {\n                  console.error('Ошибка парсинга userData:', error);\n                }\n              }\n              \n              const messageSenderId = parseInt(message.sender);\n              const isMyMessage = messageSenderId === currentUserId;\n              \n              // Получаем информацию об отправителе\n              const senderInfo = message.sender_info || {};\n              const senderName = senderInfo.first_name && senderInfo.last_name \n                ? `${senderInfo.first_name} ${senderInfo.last_name}`\n                : senderInfo.first_name || senderInfo.username || 'Пользователь';\n              const senderAvatar = senderInfo.avatar || '/images/default-avatar.svg';\n\n              return (\n                <div \n                  key={message.id} \n                  className={`message ${isMyMessage ? 'my-message' : 'incoming-message'}`}\n                  onClick={() => handleMessageClick(message)}\n                >\n                  {!isMyMessage && (\n                    <div \n                      className=\"message-avatar clickable-avatar\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleAvatarClick(messageSenderId);\n                      }}\n                      title={`Перейти к профилю ${senderName}`}\n                    >\n                      <img \n                        src={senderAvatar} \n                        alt={senderName}\n                        onError={(e) => {\n                          e.target.src = '/images/default-avatar.svg';\n                        }}\n                      />\n                    </div>\n                  )}\n                  <div className=\"message-wrapper\">\n                    {!isMyMessage && (\n                      <div \n                        className=\"message-sender-name clickable-name\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleAvatarClick(messageSenderId);\n                        }}\n                        title={`Перейти к профилю ${senderName}`}\n                      >\n                        {senderName}\n                      </div>\n                    )}\n                    <div className=\"message-content\" style={isMyMessage ? {backgroundColor: '#007bff', color: 'white'} : {backgroundColor: '#ffffff', color: 'black'}}>\n                      {/* Ответ на сообщение */}\n                      {message.reply_to && (\n                        <div className=\"reply-preview\">\n                          <div className=\"reply-line\"></div>\n                          <div className=\"reply-content\">\n                            <span className=\"reply-author\">\n                              {message.reply_to.sender_info?.first_name || 'Пользователь'}\n                            </span>\n                            <span className=\"reply-text\">{message.reply_to.content}</span>\n                          </div>\n                        </div>\n                      )}\n                      \n                      <p>{message.content}</p>\n                      <div className=\"message-footer\">\n                        <span className=\"message-time\">\n                          {new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}\n                          {message.is_edited && <span className=\"edited-indicator\"> (изменено)</span>}\n                        </span>\n                        \n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n            \n            {/* Индикатор печати */}\n            {isTyping && typingUser && (\n              <div className=\"typing-indicator\">\n                <div className=\"typing-dots\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n                <span className=\"typing-text\">{typingUser} печатает...</span>\n              </div>\n            )}\n            \n            {/* Элемент для автоматической прокрутки */}\n            <div ref={messagesEndRef} />\n          </div>\n        )}\n      </div>\n\n      <div className=\"message-input-container\">\n        {/* Ответ на сообщение */}\n        {replyToMessage && (\n          <div className=\"reply-to-message\">\n            <div className=\"reply-to-content\">\n              <span className=\"reply-to-label\">Ответ на:</span>\n              <span className=\"reply-to-text\">{replyToMessage.content}</span>\n            </div>\n            <button className=\"cancel-reply\" onClick={cancelReply}>\n              ×\n            </button>\n          </div>\n        )}\n        \n        <div className=\"message-input-wrapper\">\n          <input\n            type=\"text\"\n            className=\"message-input\"\n            placeholder={replyToMessage ? \"Ответить на сообщение...\" : \"Ваше сообщение\"}\n            value={newMessage}\n            onChange={handleInputChange}\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(e)}\n          />\n          <button \n            className=\"send-button\" \n            onClick={handleSendMessage}\n            disabled={!newMessage.trim() || loading}\n          >\n            <FontAwesomeIcon icon={faPaperPlane} />\n            <span>Отправить</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Модальное окно действий с сообщением */}\n      {console.log('Рендеринг MessageActionsModal с пропсами:', { \n        isOpen: showActionsModal, \n        message: selectedMessage,\n        isMyMessage: selectedMessage ? parseInt(selectedMessage.sender) === getCurrentUserId() : false\n      })}\n      <MessageActionsModal\n        isOpen={showActionsModal}\n        onClose={closeActionsModal}\n        message={selectedMessage}\n        onEdit={handleEditMessage}\n        onDelete={handleDeleteMessage}\n        isMyMessage={selectedMessage ? parseInt(selectedMessage.sender) === getCurrentUserId() : false}\n      />\n    </div>\n  );\n};\n\nexport default SimpleChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}