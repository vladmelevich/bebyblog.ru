{"ast":null,"code":"// Утилиты для работы с аутентификацией\n\nexport const getAuthToken = () => {\n  return localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n};\nexport const setAuthToken = (token, rememberMe = false) => {\n  if (rememberMe) {\n    localStorage.setItem('accessToken', token);\n  } else {\n    sessionStorage.setItem('accessToken', token);\n  }\n};\nexport const removeAuthToken = () => {\n  localStorage.removeItem('accessToken');\n  sessionStorage.removeItem('accessToken');\n};\nexport const isTokenExpired = token => {\n  if (!token) return true;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    return payload.exp < currentTime;\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return true;\n  }\n};\nexport const refreshToken = async () => {\n  const refreshTokenValue = localStorage.getItem('refreshToken') || sessionStorage.getItem('refreshToken');\n  if (!refreshTokenValue) {\n    throw new Error('No refresh token found');\n  }\n  try {\n    const response = await fetch('http://localhost:8000/api/auth/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refresh: refreshTokenValue\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      setAuthToken(data.access);\n      return data.access;\n    } else {\n      throw new Error('Failed to refresh token');\n    }\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n    throw error;\n  }\n};\nexport const makeAuthenticatedRequest = async (url, options = {}) => {\n  let token = getAuthToken();\n  if (!token) {\n    throw new Error('No authentication token found');\n  }\n\n  // Проверяем, не истек ли токен\n  if (isTokenExpired(token)) {\n    console.log('Token expired, refreshing...');\n    try {\n      token = await refreshToken();\n    } catch (error) {\n      console.error('Failed to refresh token:', error);\n      // Перенаправляем на страницу входа\n      window.location.href = '/login';\n      return;\n    }\n  }\n  const headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json',\n    ...options.headers\n  };\n  return fetch(url, {\n    ...options,\n    headers\n  });\n};\n\n// Дополнительные функции для совместимости с существующим кодом\n\nexport const saveTokens = (accessToken, refreshToken, rememberMe = false) => {\n  setAuthToken(accessToken, rememberMe);\n  if (refreshToken) {\n    if (rememberMe) {\n      localStorage.setItem('refreshToken', refreshToken);\n    } else {\n      sessionStorage.setItem('refreshToken', refreshToken);\n    }\n  }\n};\nexport const removeTokens = () => {\n  removeAuthToken();\n  localStorage.removeItem('refreshToken');\n  sessionStorage.removeItem('refreshToken');\n  localStorage.removeItem('userData');\n  sessionStorage.removeItem('userData');\n};\nexport const checkTokenValidity = () => {\n  const token = getAuthToken();\n  return token && !isTokenExpired(token);\n};\nexport const checkAuthOnLoad = () => {\n  const token = getAuthToken();\n  if (!token || isTokenExpired(token)) {\n    removeTokens();\n    return false;\n  }\n  return true;\n};\nexport const getUserData = () => {\n  const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n  if (userDataString) {\n    try {\n      return JSON.parse(userDataString);\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  }\n  return null;\n};\nexport const getUserIdFromToken = () => {\n  const token = getAuthToken();\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.user_id;\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["getAuthToken","localStorage","getItem","sessionStorage","setAuthToken","token","rememberMe","setItem","removeAuthToken","removeItem","isTokenExpired","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","console","refreshToken","refreshTokenValue","Error","response","fetch","method","headers","body","stringify","refresh","ok","data","json","access","makeAuthenticatedRequest","url","options","log","window","location","href","saveTokens","accessToken","removeTokens","checkTokenValidity","checkAuthOnLoad","getUserData","userDataString","getUserIdFromToken","user_id"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/utils/auth.js"],"sourcesContent":["// Утилиты для работы с аутентификацией\n\nexport const getAuthToken = () => {\n  return localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n};\n\nexport const setAuthToken = (token, rememberMe = false) => {\n  if (rememberMe) {\n    localStorage.setItem('accessToken', token);\n  } else {\n    sessionStorage.setItem('accessToken', token);\n  }\n};\n\nexport const removeAuthToken = () => {\n  localStorage.removeItem('accessToken');\n  sessionStorage.removeItem('accessToken');\n};\n\nexport const isTokenExpired = (token) => {\n  if (!token) return true;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    return payload.exp < currentTime;\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return true;\n  }\n};\n\nexport const refreshToken = async () => {\n  const refreshTokenValue = localStorage.getItem('refreshToken') || sessionStorage.getItem('refreshToken');\n  \n  if (!refreshTokenValue) {\n    throw new Error('No refresh token found');\n  }\n  \n  try {\n    const response = await fetch('http://localhost:8000/api/auth/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        refresh: refreshTokenValue\n      }),\n    });\n    \n    if (response.ok) {\n      const data = await response.json();\n      setAuthToken(data.access);\n      return data.access;\n    } else {\n      throw new Error('Failed to refresh token');\n    }\n  } catch (error) {\n    console.error('Error refreshing token:', error);\n    throw error;\n  }\n};\n\nexport const makeAuthenticatedRequest = async (url, options = {}) => {\n  let token = getAuthToken();\n  \n  if (!token) {\n    throw new Error('No authentication token found');\n  }\n  \n  // Проверяем, не истек ли токен\n  if (isTokenExpired(token)) {\n    console.log('Token expired, refreshing...');\n    try {\n      token = await refreshToken();\n    } catch (error) {\n      console.error('Failed to refresh token:', error);\n      // Перенаправляем на страницу входа\n      window.location.href = '/login';\n      return;\n    }\n  }\n  \n  const headers = {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json',\n    ...options.headers,\n  };\n  \n  return fetch(url, {\n    ...options,\n    headers,\n  });\n};\n\n// Дополнительные функции для совместимости с существующим кодом\n\nexport const saveTokens = (accessToken, refreshToken, rememberMe = false) => {\n  setAuthToken(accessToken, rememberMe);\n  if (refreshToken) {\n    if (rememberMe) {\n      localStorage.setItem('refreshToken', refreshToken);\n    } else {\n      sessionStorage.setItem('refreshToken', refreshToken);\n    }\n  }\n};\n\nexport const removeTokens = () => {\n  removeAuthToken();\n  localStorage.removeItem('refreshToken');\n  sessionStorage.removeItem('refreshToken');\n  localStorage.removeItem('userData');\n  sessionStorage.removeItem('userData');\n};\n\nexport const checkTokenValidity = () => {\n  const token = getAuthToken();\n  return token && !isTokenExpired(token);\n};\n\nexport const checkAuthOnLoad = () => {\n  const token = getAuthToken();\n  if (!token || isTokenExpired(token)) {\n    removeTokens();\n    return false;\n  }\n  return true;\n};\n\nexport const getUserData = () => {\n  const userDataString = localStorage.getItem('userData') || sessionStorage.getItem('userData');\n  if (userDataString) {\n    try {\n      return JSON.parse(userDataString);\n    } catch (error) {\n      console.error('Error parsing user data:', error);\n      return null;\n    }\n  }\n  return null;\n};\n\nexport const getUserIdFromToken = () => {\n  const token = getAuthToken();\n  if (!token) return null;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.user_id;\n  } catch (error) {\n    console.error('Error parsing token:', error);\n    return null;\n  }\n};"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,aAAa,CAAC;AACrF,CAAC;AAED,OAAO,MAAME,YAAY,GAAGA,CAACC,KAAK,EAAEC,UAAU,GAAG,KAAK,KAAK;EACzD,IAAIA,UAAU,EAAE;IACdL,YAAY,CAACM,OAAO,CAAC,aAAa,EAAEF,KAAK,CAAC;EAC5C,CAAC,MAAM;IACLF,cAAc,CAACI,OAAO,CAAC,aAAa,EAAEF,KAAK,CAAC;EAC9C;AACF,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM;EACnCP,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;EACtCN,cAAc,CAACM,UAAU,CAAC,aAAa,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIL,KAAK,IAAK;EACvC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,OAAOP,OAAO,CAACQ,GAAG,GAAGH,WAAW;EAClC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,iBAAiB,GAAGtB,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,cAAc,CAAC;EAExG,IAAI,CAACqB,iBAAiB,EAAE;IACtB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;MAC5EC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEjB,IAAI,CAACkB,SAAS,CAAC;QACnBC,OAAO,EAAER;MACX,CAAC;IACH,CAAC,CAAC;IAEF,IAAIE,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC9B,YAAY,CAAC6B,IAAI,CAACE,MAAM,CAAC;MACzB,OAAOF,IAAI,CAACE,MAAM;IACpB,CAAC,MAAM;MACL,MAAM,IAAIX,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMgB,wBAAwB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACnE,IAAIjC,KAAK,GAAGL,YAAY,CAAC,CAAC;EAE1B,IAAI,CAACK,KAAK,EAAE;IACV,MAAM,IAAImB,KAAK,CAAC,+BAA+B,CAAC;EAClD;;EAEA;EACA,IAAId,cAAc,CAACL,KAAK,CAAC,EAAE;IACzBgB,OAAO,CAACkB,GAAG,CAAC,8BAA8B,CAAC;IAC3C,IAAI;MACFlC,KAAK,GAAG,MAAMiB,YAAY,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;MACAoB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B;IACF;EACF;EAEA,MAAMd,OAAO,GAAG;IACd,eAAe,EAAE,UAAUvB,KAAK,EAAE;IAClC,cAAc,EAAE,kBAAkB;IAClC,GAAGiC,OAAO,CAACV;EACb,CAAC;EAED,OAAOF,KAAK,CAACW,GAAG,EAAE;IAChB,GAAGC,OAAO;IACVV;EACF,CAAC,CAAC;AACJ,CAAC;;AAED;;AAEA,OAAO,MAAMe,UAAU,GAAGA,CAACC,WAAW,EAAEtB,YAAY,EAAEhB,UAAU,GAAG,KAAK,KAAK;EAC3EF,YAAY,CAACwC,WAAW,EAAEtC,UAAU,CAAC;EACrC,IAAIgB,YAAY,EAAE;IAChB,IAAIhB,UAAU,EAAE;MACdL,YAAY,CAACM,OAAO,CAAC,cAAc,EAAEe,YAAY,CAAC;IACpD,CAAC,MAAM;MACLnB,cAAc,CAACI,OAAO,CAAC,cAAc,EAAEe,YAAY,CAAC;IACtD;EACF;AACF,CAAC;AAED,OAAO,MAAMuB,YAAY,GAAGA,CAAA,KAAM;EAChCrC,eAAe,CAAC,CAAC;EACjBP,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;EACvCN,cAAc,CAACM,UAAU,CAAC,cAAc,CAAC;EACzCR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCN,cAAc,CAACM,UAAU,CAAC,UAAU,CAAC;AACvC,CAAC;AAED,OAAO,MAAMqC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,MAAMzC,KAAK,GAAGL,YAAY,CAAC,CAAC;EAC5B,OAAOK,KAAK,IAAI,CAACK,cAAc,CAACL,KAAK,CAAC;AACxC,CAAC;AAED,OAAO,MAAM0C,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAM1C,KAAK,GAAGL,YAAY,CAAC,CAAC;EAC5B,IAAI,CAACK,KAAK,IAAIK,cAAc,CAACL,KAAK,CAAC,EAAE;IACnCwC,YAAY,CAAC,CAAC;IACd,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,cAAc,GAAGhD,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,UAAU,CAAC;EAC7F,IAAI+C,cAAc,EAAE;IAClB,IAAI;MACF,OAAOrC,IAAI,CAACC,KAAK,CAACoC,cAAc,CAAC;IACnC,CAAC,CAAC,OAAO7B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,IAAI;IACb;EACF;EACA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAM8B,kBAAkB,GAAGA,CAAA,KAAM;EACtC,MAAM7C,KAAK,GAAGL,YAAY,CAAC,CAAC;EAC5B,IAAI,CAACK,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOJ,OAAO,CAACwC,OAAO;EACxB,CAAC,CAAC,OAAO/B,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}