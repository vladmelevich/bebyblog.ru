{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\ChatModal\\\\ChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './ChatModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatModal = ({\n  isOpen,\n  onClose,\n  userId,\n  userName,\n  onChatCreated\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const chatIdRef = useRef(null);\n  useEffect(() => {\n    if (isOpen && userId) {\n      loadUserData();\n      loadChatMessages();\n    }\n  }, [isOpen, userId]);\n  const loadUserData = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n      const response = await fetch(`http://localhost:8000/users/${userId}/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.user) {\n          setUser(data.user);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки данных пользователя:', error);\n    }\n  };\n  const loadChatMessages = async () => {\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n\n      // Сначала проверяем, есть ли уже чат с этим пользователем\n      const chatResponse = await fetch(`http://localhost:8000/users/chats/`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (chatResponse.ok) {\n        const chatData = await chatResponse.json();\n        const existingChat = chatData.chats.find(chat => chat.participants.some(p => p.id === parseInt(userId)));\n        if (existingChat) {\n          chatIdRef.current = existingChat.id;\n          // Загружаем сообщения существующего чата\n          const messagesResponse = await fetch(`http://localhost:8000/users/chats/${existingChat.id}/messages/`, {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          if (messagesResponse.ok) {\n            const messagesData = await messagesResponse.json();\n            if (messagesData.success && messagesData.messages) {\n              setMessages(messagesData.messages);\n            }\n          }\n        } else {\n          // Чат не существует, показываем пустой список\n          setMessages([]);\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка загрузки сообщений:', error);\n      setMessages([]);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim()) return;\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\n\n      // Сначала создаем чат, если его еще нет\n      let chatId = chatIdRef.current;\n      if (!chatId) {\n        const chatResponse = await fetch(`http://localhost:8000/users/chats/create/`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            participant_id: userId\n          })\n        });\n        if (chatResponse.ok) {\n          const chatData = await chatResponse.json();\n          chatId = chatData.chat.id;\n          chatIdRef.current = chatId;\n          console.log('Чат создан:', chatId);\n\n          // Уведомляем родительский компонент о создании чата\n          if (onChatCreated) {\n            onChatCreated();\n          }\n        } else {\n          const errorData = await chatResponse.json();\n          console.error('Ошибка создания чата:', chatResponse.status, errorData);\n          throw new Error(`Не удалось создать чат: ${errorData.message || errorData.errors || 'Неизвестная ошибка'}`);\n        }\n      }\n\n      // Отправляем сообщение\n      const response = await fetch(`http://localhost:8000/users/chats/${chatId}/messages/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: newMessage,\n          message_type: 'text'\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.message) {\n          setMessages(prev => [...prev, data.message]);\n          setNewMessage('');\n        }\n      }\n    } catch (error) {\n      console.error('Ошибка отправки сообщения:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!isOpen) return null;\n  const displayName = user ? user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : user.first_name || user.username || 'Пользователь' : userName || 'Пользователь';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"user-name\",\n            children: displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-status\",\n            children: \"\\u0411\\u044B\\u043B\\u0430 \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D: 3 \\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-messages\",\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-messages\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-title\",\n            children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-subtitle\",\n            children: \"\\u0421\\u043E\\u0431\\u0435\\u0441\\u0435\\u0434\\u043D\\u0438\\u043A \\u043D\\u0435 \\u0432\\u0438\\u0434\\u0438\\u0442 \\u044D\\u0442\\u0443 \\u043F\\u0435\\u0440\\u0435\\u043F\\u0438\\u0441\\u043A\\u0443.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-list\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.sender === (localStorage.getItem('user_id') || sessionStorage.getItem('user_id')) ? 'my-message' : 'incoming-message'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: new Date(message.created_at).toLocaleTimeString('ru-RU', {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-modal-input\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"message-input\",\n            placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleSendMessage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: handleSendMessage,\n            disabled: !newMessage.trim() || loading,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPaperPlane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatModal, \"9k1R+ZjZKeNxeNZLp3KfotumeFQ=\");\n_c = ChatModal;\nexport default ChatModal;\nvar _c;\n$RefreshReg$(_c, \"ChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faPaperPlane","faTimes","jsxDEV","_jsxDEV","ChatModal","isOpen","onClose","userId","userName","onChatCreated","_s","messages","setMessages","newMessage","setNewMessage","user","setUser","loading","setLoading","chatIdRef","loadUserData","loadChatMessages","token","localStorage","getItem","sessionStorage","response","fetch","headers","ok","data","json","success","error","console","chatResponse","chatData","existingChat","chats","find","chat","participants","some","p","id","parseInt","current","messagesResponse","messagesData","handleSendMessage","e","preventDefault","trim","chatId","method","body","JSON","stringify","participant_id","log","errorData","status","Error","message","errors","content","message_type","prev","displayName","first_name","last_name","username","className","onClick","children","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","icon","length","map","sender","Date","created_at","toLocaleTimeString","hour","minute","type","placeholder","value","onChange","target","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/ChatModal/ChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport './ChatModal.css';\r\n\r\nconst ChatModal = ({ isOpen, onClose, userId, userName, onChatCreated }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const chatIdRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && userId) {\r\n      loadUserData();\r\n      loadChatMessages();\r\n    }\r\n  }, [isOpen, userId]);\r\n\r\n  const loadUserData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      const response = await fetch(`http://localhost:8000/users/${userId}/`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.success && data.user) {\r\n          setUser(data.user);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки данных пользователя:', error);\r\n    }\r\n  };\r\n\r\n  const loadChatMessages = async () => {\r\n    try {\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      \r\n      // Сначала проверяем, есть ли уже чат с этим пользователем\r\n      const chatResponse = await fetch(`http://localhost:8000/users/chats/`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (chatResponse.ok) {\r\n        const chatData = await chatResponse.json();\r\n        const existingChat = chatData.chats.find(chat => \r\n          chat.participants.some(p => p.id === parseInt(userId))\r\n        );\r\n        \r\n        if (existingChat) {\r\n          chatIdRef.current = existingChat.id;\r\n          // Загружаем сообщения существующего чата\r\n          const messagesResponse = await fetch(`http://localhost:8000/users/chats/${existingChat.id}/messages/`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n          \r\n          if (messagesResponse.ok) {\r\n            const messagesData = await messagesResponse.json();\r\n            if (messagesData.success && messagesData.messages) {\r\n              setMessages(messagesData.messages);\r\n            }\r\n          }\r\n        } else {\r\n          // Чат не существует, показываем пустой список\r\n          setMessages([]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка загрузки сообщений:', error);\r\n      setMessages([]);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!newMessage.trim()) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('accessToken') || sessionStorage.getItem('accessToken');\r\n      \r\n      // Сначала создаем чат, если его еще нет\r\n      let chatId = chatIdRef.current;\r\n      if (!chatId) {\r\n        const chatResponse = await fetch(`http://localhost:8000/users/chats/create/`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            participant_id: userId\r\n          }),\r\n        });\r\n\r\n        if (chatResponse.ok) {\r\n          const chatData = await chatResponse.json();\r\n          chatId = chatData.chat.id;\r\n          chatIdRef.current = chatId;\r\n          console.log('Чат создан:', chatId);\r\n          \r\n          // Уведомляем родительский компонент о создании чата\r\n          if (onChatCreated) {\r\n            onChatCreated();\r\n          }\r\n        } else {\r\n          const errorData = await chatResponse.json();\r\n          console.error('Ошибка создания чата:', chatResponse.status, errorData);\r\n          throw new Error(`Не удалось создать чат: ${errorData.message || errorData.errors || 'Неизвестная ошибка'}`);\r\n        }\r\n      }\r\n\r\n      // Отправляем сообщение\r\n      const response = await fetch(`http://localhost:8000/users/chats/${chatId}/messages/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          content: newMessage,\r\n          message_type: 'text'\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        if (data.success && data.message) {\r\n          setMessages(prev => [...prev, data.message]);\r\n          setNewMessage('');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Ошибка отправки сообщения:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const displayName = user ? \r\n    (user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : \r\n     user.first_name || user.username || 'Пользователь') : \r\n    userName || 'Пользователь';\r\n\r\n  return (\r\n    <div className=\"chat-modal-overlay\" onClick={onClose}>\r\n      <div className=\"chat-modal\" onClick={(e) => e.stopPropagation()}>\r\n        {/* Заголовок модального окна */}\r\n        <div className=\"chat-modal-header\">\r\n          <div className=\"chat-user-info\">\r\n            <h3 className=\"user-name\">{displayName}</h3>\r\n            <p className=\"user-status\">Была онлайн: 3 м</p>\r\n          </div>\r\n          <button className=\"close-button\" onClick={onClose}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Контейнер сообщений */}\r\n        <div className=\"chat-modal-messages\">\r\n          {messages.length === 0 ? (\r\n            <div className=\"empty-messages\">\r\n              <p className=\"empty-title\">Сообщений нет.</p>\r\n              <p className=\"empty-subtitle\">Собеседник не видит эту переписку.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"messages-list\">\r\n              {messages.map((message) => (\r\n                <div key={message.id} className={`message ${message.sender === (localStorage.getItem('user_id') || sessionStorage.getItem('user_id')) ? 'my-message' : 'incoming-message'}`}>\r\n                  <div className=\"message-content\">\r\n                    <p>{message.content}</p>\r\n                    <span className=\"message-time\">\r\n                      {new Date(message.created_at).toLocaleTimeString('ru-RU', {\r\n                        hour: '2-digit',\r\n                        minute: '2-digit'\r\n                      })}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Поле ввода сообщения */}\r\n        <div className=\"chat-modal-input\">\r\n          <div className=\"message-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"message-input\"\r\n              placeholder=\"Ваше сообщение\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage(e)}\r\n            />\r\n            <button \r\n              className=\"send-button\" \r\n              onClick={handleSendMessage}\r\n              disabled={!newMessage.trim() || loading}\r\n            >\r\n              <FontAwesomeIcon icon={faPaperPlane} />\r\n              <span>Отправить</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,YAAY,EAAEC,OAAO,QAAQ,mCAAmC;AACzE,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMuB,SAAS,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,IAAIE,MAAM,EAAE;MACpBa,YAAY,CAAC,CAAC;MACdC,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAAChB,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,aAAa,CAAC;MAC1F,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BpB,MAAM,GAAG,EAAE;QACrEqB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAII,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACf,IAAI,EAAE;UAC7BC,OAAO,CAACc,IAAI,CAACf,IAAI,CAAC;QACpB;MACF;IACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D;EACF,CAAC;EAED,MAAMZ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,aAAa,CAAC;;MAE1F;MACA,MAAMW,YAAY,GAAG,MAAMR,KAAK,CAAC,oCAAoC,EAAE;QACrEC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIa,YAAY,CAACN,EAAE,EAAE;QACnB,MAAMO,QAAQ,GAAG,MAAMD,YAAY,CAACJ,IAAI,CAAC,CAAC;QAC1C,MAAMM,YAAY,GAAGD,QAAQ,CAACE,KAAK,CAACC,IAAI,CAACC,IAAI,IAC3CA,IAAI,CAACC,YAAY,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACtC,MAAM,CAAC,CACvD,CAAC;QAED,IAAI8B,YAAY,EAAE;UAChBlB,SAAS,CAAC2B,OAAO,GAAGT,YAAY,CAACO,EAAE;UACnC;UACA,MAAMG,gBAAgB,GAAG,MAAMpB,KAAK,CAAC,qCAAqCU,YAAY,CAACO,EAAE,YAAY,EAAE;YACrGhB,OAAO,EAAE;cACP,eAAe,EAAE,UAAUN,KAAK,EAAE;cAClC,cAAc,EAAE;YAClB;UACF,CAAC,CAAC;UAEF,IAAIyB,gBAAgB,CAAClB,EAAE,EAAE;YACvB,MAAMmB,YAAY,GAAG,MAAMD,gBAAgB,CAAChB,IAAI,CAAC,CAAC;YAClD,IAAIiB,YAAY,CAAChB,OAAO,IAAIgB,YAAY,CAACrC,QAAQ,EAAE;cACjDC,WAAW,CAACoC,YAAY,CAACrC,QAAQ,CAAC;YACpC;UACF;QACF,CAAC,MAAM;UACL;UACAC,WAAW,CAAC,EAAE,CAAC;QACjB;MACF;IACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDrB,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,MAAMqC,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACtC,UAAU,CAACuC,IAAI,CAAC,CAAC,EAAE;IAExBlC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,aAAa,CAAC;;MAE1F;MACA,IAAI6B,MAAM,GAAGlC,SAAS,CAAC2B,OAAO;MAC9B,IAAI,CAACO,MAAM,EAAE;QACX,MAAMlB,YAAY,GAAG,MAAMR,KAAK,CAAC,2CAA2C,EAAE;UAC5E2B,MAAM,EAAE,MAAM;UACd1B,OAAO,EAAE;YACP,eAAe,EAAE,UAAUN,KAAK,EAAE;YAClC,cAAc,EAAE;UAClB,CAAC;UACDiC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,cAAc,EAAEnD;UAClB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI4B,YAAY,CAACN,EAAE,EAAE;UACnB,MAAMO,QAAQ,GAAG,MAAMD,YAAY,CAACJ,IAAI,CAAC,CAAC;UAC1CsB,MAAM,GAAGjB,QAAQ,CAACI,IAAI,CAACI,EAAE;UACzBzB,SAAS,CAAC2B,OAAO,GAAGO,MAAM;UAC1BnB,OAAO,CAACyB,GAAG,CAAC,aAAa,EAAEN,MAAM,CAAC;;UAElC;UACA,IAAI5C,aAAa,EAAE;YACjBA,aAAa,CAAC,CAAC;UACjB;QACF,CAAC,MAAM;UACL,MAAMmD,SAAS,GAAG,MAAMzB,YAAY,CAACJ,IAAI,CAAC,CAAC;UAC3CG,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEE,YAAY,CAAC0B,MAAM,EAAED,SAAS,CAAC;UACtE,MAAM,IAAIE,KAAK,CAAC,2BAA2BF,SAAS,CAACG,OAAO,IAAIH,SAAS,CAACI,MAAM,IAAI,oBAAoB,EAAE,CAAC;QAC7G;MACF;;MAEA;MACA,MAAMtC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC0B,MAAM,YAAY,EAAE;QACpFC,MAAM,EAAE,MAAM;QACd1B,OAAO,EAAE;UACP,eAAe,EAAE,UAAUN,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDiC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBQ,OAAO,EAAEpD,UAAU;UACnBqD,YAAY,EAAE;QAChB,CAAC;MACH,CAAC,CAAC;MAEF,IAAIxC,QAAQ,CAACG,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACiC,OAAO,EAAE;UAChCnD,WAAW,CAACuD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAErC,IAAI,CAACiC,OAAO,CAAC,CAAC;UAC5CjD,aAAa,CAAC,EAAE,CAAC;QACnB;MACF;IACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,SAAS;MACRf,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAI,CAACb,MAAM,EAAE,OAAO,IAAI;EAExB,MAAM+D,WAAW,GAAGrD,IAAI,GACrBA,IAAI,CAACsD,UAAU,IAAItD,IAAI,CAACuD,SAAS,GAAG,GAAGvD,IAAI,CAACsD,UAAU,IAAItD,IAAI,CAACuD,SAAS,EAAE,GAC1EvD,IAAI,CAACsD,UAAU,IAAItD,IAAI,CAACwD,QAAQ,IAAI,cAAc,GACnD/D,QAAQ,IAAI,cAAc;EAE5B,oBACEL,OAAA;IAAKqE,SAAS,EAAC,oBAAoB;IAACC,OAAO,EAAEnE,OAAQ;IAAAoE,QAAA,eACnDvE,OAAA;MAAKqE,SAAS,EAAC,YAAY;MAACC,OAAO,EAAGvB,CAAC,IAAKA,CAAC,CAACyB,eAAe,CAAC,CAAE;MAAAD,QAAA,gBAE9DvE,OAAA;QAAKqE,SAAS,EAAC,mBAAmB;QAAAE,QAAA,gBAChCvE,OAAA;UAAKqE,SAAS,EAAC,gBAAgB;UAAAE,QAAA,gBAC7BvE,OAAA;YAAIqE,SAAS,EAAC,WAAW;YAAAE,QAAA,EAAEN;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5C5E,OAAA;YAAGqE,SAAS,EAAC,aAAa;YAAAE,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACN5E,OAAA;UAAQqE,SAAS,EAAC,cAAc;UAACC,OAAO,EAAEnE,OAAQ;UAAAoE,QAAA,eAChDvE,OAAA,CAACJ,eAAe;YAACiF,IAAI,EAAE/E;UAAQ;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN5E,OAAA;QAAKqE,SAAS,EAAC,qBAAqB;QAAAE,QAAA,EACjC/D,QAAQ,CAACsE,MAAM,KAAK,CAAC,gBACpB9E,OAAA;UAAKqE,SAAS,EAAC,gBAAgB;UAAAE,QAAA,gBAC7BvE,OAAA;YAAGqE,SAAS,EAAC,aAAa;YAAAE,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC7C5E,OAAA;YAAGqE,SAAS,EAAC,gBAAgB;YAAAE,QAAA,EAAC;UAAkC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,gBAEN5E,OAAA;UAAKqE,SAAS,EAAC,eAAe;UAAAE,QAAA,EAC3B/D,QAAQ,CAACuE,GAAG,CAAEnB,OAAO,iBACpB5D,OAAA;YAAsBqE,SAAS,EAAE,WAAWT,OAAO,CAACoB,MAAM,MAAM5D,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,GAAG,kBAAkB,EAAG;YAAAkD,QAAA,eAC1KvE,OAAA;cAAKqE,SAAS,EAAC,iBAAiB;cAAAE,QAAA,gBAC9BvE,OAAA;gBAAAuE,QAAA,EAAIX,OAAO,CAACE;cAAO;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxB5E,OAAA;gBAAMqE,SAAS,EAAC,cAAc;gBAAAE,QAAA,EAC3B,IAAIU,IAAI,CAACrB,OAAO,CAACsB,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;kBACxDC,IAAI,EAAE,SAAS;kBACfC,MAAM,EAAE;gBACV,CAAC;cAAC;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ;UAAC,GATEhB,OAAO,CAACnB,EAAE;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUf,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGN5E,OAAA;QAAKqE,SAAS,EAAC,kBAAkB;QAAAE,QAAA,eAC/BvE,OAAA;UAAKqE,SAAS,EAAC,uBAAuB;UAAAE,QAAA,gBACpCvE,OAAA;YACEsF,IAAI,EAAC,MAAM;YACXjB,SAAS,EAAC,eAAe;YACzBkB,WAAW,EAAC,iFAAgB;YAC5BC,KAAK,EAAE9E,UAAW;YAClB+E,QAAQ,EAAG1C,CAAC,IAAKpC,aAAa,CAACoC,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;YAC/CG,UAAU,EAAG5C,CAAC,IAAKA,CAAC,CAAC6C,GAAG,KAAK,OAAO,IAAI9C,iBAAiB,CAACC,CAAC;UAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eACF5E,OAAA;YACEqE,SAAS,EAAC,aAAa;YACvBC,OAAO,EAAExB,iBAAkB;YAC3B+C,QAAQ,EAAE,CAACnF,UAAU,CAACuC,IAAI,CAAC,CAAC,IAAInC,OAAQ;YAAAyD,QAAA,gBAExCvE,OAAA,CAACJ,eAAe;cAACiF,IAAI,EAAEhF;YAAa;cAAA4E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvC5E,OAAA;cAAAuE,QAAA,EAAM;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrE,EAAA,CAzNIN,SAAS;AAAA6F,EAAA,GAAT7F,SAAS;AA2Nf,eAAeA,SAAS;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}