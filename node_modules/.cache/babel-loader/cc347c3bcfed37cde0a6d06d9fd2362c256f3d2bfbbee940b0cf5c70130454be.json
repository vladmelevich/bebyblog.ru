{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Wlad\\\\OneDrive\\\\Desktop\\\\kwork_site\\\\src\\\\components\\\\AllPosts\\\\AllPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PostsList from '../PostsList/PostsList';\nimport './AllPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllPosts = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [categories] = useState([{\n    id: null,\n    name: 'Все категории'\n  }, {\n    id: 'zachatie',\n    name: 'Зачатие'\n  }, {\n    id: 'beremennost',\n    name: 'Беременность'\n  }, {\n    id: 'vsyo-o-detyah',\n    name: 'Всё о детях'\n  }, {\n    id: 'poleznye-stati',\n    name: 'Полезные статьи'\n  }, {\n    id: 'vospitanie',\n    name: 'Воспитание'\n  }]);\n  useEffect(() => {\n    const search = searchParams.get('search');\n    if (search) {\n      setSearchQuery(search);\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-posts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: searchQuery ? `Результаты поиска: \"${searchQuery}\"` : 'Все посты'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: searchQuery ? `Найдено постов по запросу \"${searchQuery}\"` : 'Найдите интересные статьи и поделитесь своим опытом'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-filters\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filters\",\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-filter ${selectedCategory === category.id ? 'active' : ''}`,\n          onClick: () => setSelectedCategory(category.id),\n          children: category.name\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-content\",\n      children: /*#__PURE__*/_jsxDEV(PostsList, {\n        category: selectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AllPosts, \"fr40tKgD+BEsQr1OcPMHQmUlbfU=\", false, function () {\n  return [useSearchParams];\n});\n_c = AllPosts;\nexport default AllPosts;\nvar _c;\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["React","useState","useEffect","useSearchParams","PostsList","jsxDEV","_jsxDEV","AllPosts","_s","searchParams","selectedCategory","setSelectedCategory","searchQuery","setSearchQuery","categories","id","name","search","get","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Wlad/OneDrive/Desktop/kwork_site/src/components/AllPosts/AllPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport './AllPosts.css';\r\n\r\nconst AllPosts = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [categories] = useState([\r\n    { id: null, name: 'Все категории' },\r\n    { id: 'zachatie', name: 'Зачатие' },\r\n    { id: 'beremennost', name: 'Беременность' },\r\n    { id: 'vsyo-o-detyah', name: 'Всё о детях' },\r\n    { id: 'poleznye-stati', name: 'Полезные статьи' },\r\n    { id: 'vospitanie', name: 'Воспитание' }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const search = searchParams.get('search');\r\n    if (search) {\r\n      setSearchQuery(search);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div className=\"all-posts\">\r\n      <div className=\"all-posts-header\">\r\n        <h1>\r\n          {searchQuery ? `Результаты поиска: \"${searchQuery}\"` : 'Все посты'}\r\n        </h1>\r\n        <p>\r\n          {searchQuery \r\n            ? `Найдено постов по запросу \"${searchQuery}\"` \r\n            : 'Найдите интересные статьи и поделитесь своим опытом'\r\n          }\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"posts-filters\">\r\n        <div className=\"category-filters\">\r\n          {categories.map(category => (\r\n            <button\r\n              key={category.id}\r\n              className={`category-filter ${selectedCategory === category.id ? 'active' : ''}`}\r\n              onClick={() => setSelectedCategory(category.id)}\r\n            >\r\n              {category.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"posts-content\">\r\n        <PostsList category={selectedCategory} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPosts;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}