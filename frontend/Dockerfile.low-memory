# Этап сборки (для серверов с малой памятью)
FROM node:18-alpine as build

WORKDIR /app

# Ограничиваем память Node.js
ENV NODE_OPTIONS="--max-old-space-size=512"

# Копируем package.json и package-lock.json
COPY package*.json ./

# Устанавливаем зависимости по одной для экономии памяти
RUN npm ci --omit=dev --prefer-offline --no-audit --no-fund --maxsockets 1 --progress=false

# Копируем исходный код
COPY src ./src
COPY public ./public

# Собираем приложение с минимальным использованием памяти
RUN npm run build -- --max_old_space_size=512

# Этап продакшена (минимальный)
FROM nginx:alpine

# Копируем собранное приложение
COPY --from=build /app/build /usr/share/nginx/html

# Копируем конфигурацию nginx
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Открываем порт
EXPOSE 80

# Запускаем nginx (оптимизированно)
CMD ["nginx", "-g", "daemon off;", "-c", "/etc/nginx/nginx.conf"]
