version: '3.8'

services:
  # MySQL база данных (оптимизированная) - ВРЕМЕННО ОТКЛЮЧЕН
  # db:
  #   image: registry.hub.docker.com/library/mysql:5.7
  #   environment:
  #     MYSQL_DATABASE: my_kwork
  #     MYSQL_ROOT_PASSWORD: Vmelvladmlvh1211
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   ports:
  #     - "3306:3306"
  #   restart: unless-stopped
  #   command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=128M --innodb-log-file-size=32M
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     timeout: 10s
  #     retries: 3
  #     start_period: 15s

  # Redis для кэширования и WebSocket (оптимизированный) - ВРЕМЕННО ОТКЛЮЧЕН
  # redis:
  #   image: registry.hub.docker.com/library/redis:6-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru

  # Backend Django - ВРЕМЕННО ОТКЛЮЧЕН
  # backend:
  #   build: ./backend
  #   environment:
  #     - DEBUG=False
  #     - DJANGO_SETTINGS_MODULE=core.settings_production
  #     - SECRET_KEY=your-secret-key-change-this-in-production
  #     - DATABASE_URL=mysql://root:Vmelvladmlvh1211@db:3306/my_kwork
  #     - REDIS_URL=redis://redis:6379/0
  #     - ALLOWED_HOSTS=93.183.80.220,localhost,127.0.0.1
  #   volumes:
  #     - media_files:/app/media
  #     - static_files:/app/staticfiles
  #   ports:
  #     - "8000:8000"
  #   # depends_on:
  #   #   db:
  #   #     condition: service_healthy
  #   #   redis:
  #   #     condition: service_started
  #   restart: unless-stopped
  #   command: >
  #     sh -c "mkdir -p /app/staticfiles /app/media/avatars &&
  #            python manage.py migrate --run-syncdb &&
  #            python manage.py collectstatic --noinput &&
  #            gunicorn --bind 0.0.0.0:8000 --workers 1 --timeout 30 --keep-alive 2 --max-requests 1000 core.wsgi:application"

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    # depends_on:
    #   - backend
    restart: unless-stopped

  # Nginx reverse proxy - ВРЕМЕННО ОТКЛЮЧЕН
  # nginx:
  #   image: registry.hub.docker.com/library/nginx:1.20-alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - static_files:/var/www/static
  #     - media_files:/var/www/media
  #   depends_on:
  #     - backend
  #     - frontend
  #   restart: unless-stopped

volumes:
  mysql_data:
  static_files:
  media_files:
